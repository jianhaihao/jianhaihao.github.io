(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{185:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"数据库集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库集群","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据库集群")]),t._v(" "),s("h2",{attrs:{id:"单节点数据库弊端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单节点数据库弊端","aria-hidden":"true"}},[t._v("#")]),t._v(" 单节点数据库弊端")]),t._v(" "),s("blockquote",[s("ul",[s("li",[t._v("大型互联网程序用户群体庞大，架构必须要特殊设计")]),t._v(" "),s("li",[t._v("无法满足性能上的要求")]),t._v(" "),s("li",[t._v("没有冗余设计，无法满足高可用")])])]),t._v(" "),s("h2",{attrs:{id:"常见mysql集群方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见mysql集群方案","aria-hidden":"true"}},[t._v("#")]),t._v(" 常见Mysql集群方案")]),t._v(" "),s("p",[s("img",{attrs:{src:"/mysql-jq.jpg",alt:"/mysql-jq.jpg"}}),t._v(" "),s("img",{attrs:{src:"/mysql-jq-1.jpg",alt:"/mysql-jq-1.jpg"}}),t._v(" "),s("img",{attrs:{src:"/mysql-jq-2.jpg",alt:"/mysql-jq-2.jpg"}}),t._v(" "),s("img",{attrs:{src:"/mysql-jq-3.jpg",alt:"/mysql-jq-3.jpg"}}),t._v(" "),s("img",{attrs:{src:"/mysql-jq-4.jpg",alt:"/mysql-jq-4.jpg"}})]),t._v(" "),s("h2",{attrs:{id:"创建集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建集群","aria-hidden":"true"}},[t._v("#")]),t._v(" 创建集群")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 拉取 pxc 镜像")]),t._v("\ndocker pull percona/percona-xtradb-cluster\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已安装的镜像")]),t._v("\ndocker images\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#######################分割线##################################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改镜像名称（名称太长，不方便使用，选择性操作）")]),t._v("\ndocker tag percona/percona-xtradb-cluster pxc\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除旧的镜像")]),t._v("\ndocker rmi percona/percona-xtradb-cluster\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看已安装的镜像")]),t._v("\ndocker images\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#######################分割线##################################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#（出于安全考虑，需要给pxc集群实例创建docker内部网络）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker虚拟机自带的网段地址为：172.17.0.XXX")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建内部网段")]),t._v("\ndocker network create net1\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看内部网段")]),t._v("\ndocker network inspect net1   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# network可省略")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除内部网段")]),t._v("\ndocker network "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" net1\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建指定网段")]),t._v("\ndocker network create --subnet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("172.18.0.0/24 net1\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Docker容器使用原则：不要在容器里面保存业务数据！！！")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 要把业务数据保存到宿主机中，使用的技术是目录映射")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pxc无法使用映射目录，可以采用docker卷来处理")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 容器中的pxc节点映射数据目录的解决办法")]),t._v("\ndocker volume create --name v1    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --name可省略")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看数据卷在宿主机的真实路径")]),t._v("\ndocker inspect v1\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除数据卷")]),t._v("\ndocker volume "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" v1\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#######################分割线##################################")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 向pxc镜像传入运行参数创建pxc容器")]),t._v("\ndocker run -d -p 3307:3306 -e MYSQL_ROOT_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -e CLUSTER_NAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PXC -e XTRABACKUP_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -v v1:/var/lib/mysql --privileged --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node1 --net"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("net1 --ip 172.18.0.2 pxc\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建第二个容器")]),t._v("\ndocker run -d -p 3308:3306 -e MYSQL_ROOT_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -e CLUSTER_NAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PXC -e XTRABACKUP_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -e CLUSTER_JOIN"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node1 -v v2:/var/lib/mysql --privileged --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node2 --net"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("net1 --ip 172.18.0.3 pxc\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建第三个容器")]),t._v("\ndocker run -d -p 3309:3306 -e MYSQL_ROOT_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -e CLUSTER_NAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PXC -e XTRABACKUP_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -e CLUSTER_JOIN"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node1 -v v3:/var/lib/mysql --privileged --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node3 --net"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("net1 --ip 172.18.0.4 pxc\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建第四个容器")]),t._v("\ndocker run -d -p 3310:3306 -e MYSQL_ROOT_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -e CLUSTER_NAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PXC -e XTRABACKUP_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -e CLUSTER_JOIN"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node1 -v v4:/var/lib/mysql --privileged --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node4 --net"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("net1 --ip 172.18.0.5 pxc\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建第五个容器")]),t._v("\ndocker run -d -p 3311:3306 -e MYSQL_ROOT_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -e CLUSTER_NAME"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PXC -e XTRABACKUP_PASSWORD"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("yiyun2018 -e CLUSTER_JOIN"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node1 -v v5:/var/lib/mysql --privileged --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("node5 --net"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("net1 --ip 172.18.0.6 pxc\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -d 后台运行")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -p [宿主机端口]:[容器端口]  把容器的3306端口映射到宿主机的3306端口")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -v v1:/var/lib/mysql 路径映射，/var/lib/mysql 容器内的目录")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -e MYSQL_ROOT_PASSWORD  参数，创建出的数据库实例的密码（用户名是root，不可修改）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -e MYSQL_ROOT_PASSWORD  参数，创建出的pxc集群的名字")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -e MYSQL_ROOT_PASSWORD  参数，数据库节点之间同步使用的密码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -e CLUSTER_JOIN  参数，和第一个节点容器进行同步")]),t._v("\n\n\n\n\n\n\n\n\n")])])])])}],!1,null,null,null);a.options.__file="colony.md";e.default=a.exports}}]);