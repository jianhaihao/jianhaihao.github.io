(window.webpackJsonp=window.webpackJsonp||[]).push([[93],{172:function(t,a,e){"use strict";e.r(a);var _=e(0),s=Object(_.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"commonjs-规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-规范","aria-hidden":"true"}},[t._v("#")]),t._v(" CommonJS 规范")]),t._v(" "),e("p",[t._v("Node 应用的模块都采用 CommonJS 规范，每个文件是一个模块，每个模块都有自己的作用域，在作用域里面定义的变量，函数，类，都是私有的，外部不可访问")]),t._v(" "),e("ul",[e("li",[t._v("所有代码运行在模块作用域，不会污染全局作用域")]),t._v(" "),e("li",[t._v("模块可以被多次加载，只有在第一次被加载的时候才会运行，后面的加载直接读取缓存的结果")]),t._v(" "),e("li",[t._v("模块加载的顺序，按照代码中出现的顺序")])]),t._v(" "),e("p",[t._v("模块代码会被 Node 封装在下面这个函数里面")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token keyword"}},[t._v("function")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("exports"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __filename"),e("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __dirname"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token comment"}},[t._v("// 模块代码")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"module-变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#module-变量","aria-hidden":"true"}},[t._v("#")]),t._v(" module 变量")]),t._v(" "),e("p",[t._v("每个模块内部有一个 module 变量表示当前模块具有以下属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("attribute")]),t._v(" "),e("th",[t._v("desc")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("module.id")]),t._v(" "),e("td",[t._v("模块的标识符，通常是绝对路径加上模块文件名")])]),t._v(" "),e("tr",[e("td",[t._v("module.filename")]),t._v(" "),e("td",[t._v("模块的文件名")])]),t._v(" "),e("tr",[e("td",[t._v("module.loaded")]),t._v(" "),e("td",[t._v("模块是否加载完成")])]),t._v(" "),e("tr",[e("td",[t._v("module.parent")]),t._v(" "),e("td",[t._v("调用模块的模块")])]),t._v(" "),e("tr",[e("td",[t._v("moduel.children")]),t._v(" "),e("td",[t._v("返回一个数组，表示该模块调用的其他模块")])]),t._v(" "),e("tr",[e("td",[t._v("module.exports")]),t._v(" "),e("td",[t._v("模块对外输出的值")])])])]),t._v(" "),e("h2",{attrs:{id:"requrie-命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#requrie-命令","aria-hidden":"true"}},[t._v("#")]),t._v(" requrie 命令")]),t._v(" "),e("p",[t._v("require 用于加载模块")]),t._v(" "),e("p",[t._v("加载规则")]),t._v(" "),e("ul",[e("li",[t._v("如果以"),e("code",[t._v("/")]),t._v("开头，表示加载一个绝对路径的模块文件")]),t._v(" "),e("li",[t._v("如果以"),e("code",[t._v("./")]),t._v("开头，表示加载一个相对路径的模块文件")]),t._v(" "),e("li",[t._v("如果不以"),e("code",[t._v("./")]),t._v("或者"),e("code",[t._v("/")]),t._v("开头，表示加载一个默认提供的模块，或者位于各级"),e("code",[t._v("node_modules")]),t._v("目录下面的模块")]),t._v(" "),e("li",[t._v("如果不以"),e("code",[t._v("./")]),t._v("或者"),e("code",[t._v("/")]),t._v("开头,而是一个路径，比如"),e("code",[t._v("bar/foo/abc.js")]),t._v("，Node 会尝试照到"),e("code",[t._v("bar")]),t._v("目录的路径，然后继续往下照")]),t._v(" "),e("li",[t._v("如果指定的模块文件没有找啊到，Node 会尝试为文件名添加"),e("code",[t._v(".js")]),t._v(", "),e("code",[t._v(".node")]),t._v(", "),e("code",[t._v(".json")]),t._v("后缀，"),e("code",[t._v(".js")]),t._v("会以 JavaScript 脚本文件解析，"),e("code",[t._v(".json")]),t._v("会以 Json 格式的文件解析，"),e("code",[t._v(".node")]),t._v("会以编译后的二进制文件解析")]),t._v(" "),e("li",[t._v("如果想得到"),e("code",[t._v("require")]),t._v("命令加载的确切文件名，可以使用"),e("code",[t._v("require.resolve()")]),t._v("方法")])]),t._v(" "),e("p",[e("strong",[t._v("目录的加载规则")])]),t._v(" "),e("p",[t._v("通常我们会吧相关文件放在一个文件夹里面，便于组织，然后设置一个入口文件，让"),e("code",[t._v("require")]),t._v("通过入口文件加载整个目录，Node 模块的入口文件为"),e("code",[t._v("package.json")]),t._v("，入口文件通过"),e("code",[t._v("main")]),t._v("属性指定")]),t._v(" "),e("p",[e("strong",[t._v("模块的缓存")])]),t._v(" "),e("p",[t._v("Node 在第一次夹在模块时，会缓存该模块，以后加载直接读取该模块的"),e("code",[t._v("module.exports")]),t._v("属性")]),t._v(" "),e("p",[t._v("所有的缓存模块保存在"),e("code",[t._v("require.cache")]),t._v("中，可以通过下面的方式删除模块的缓存")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" require"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cache"),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{attrs:{class:"token string"}},[t._v("'moduleName'")]),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nObject"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("keys")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("require"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cache"),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{attrs:{class:"token function"}},[t._v("forEach")]),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),e("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" require"),e("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cache"),e("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),e("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[e("strong",[t._v("require.main")])]),t._v(" "),e("p",[e("code",[t._v("require")]),t._v("对象有一个"),e("code",[t._v("main")]),t._v("属性，用来判断模块是直接执行还是被调用执行")]),t._v(" "),e("ul",[e("li",[t._v("直接执行"),e("code",[t._v("node module.js")]),t._v(" 返回模块本身")]),t._v(" "),e("li",[t._v("被调用执行"),e("code",[t._v("require('module.js')")]),t._v(" // 返回"),e("code",[t._v("false")])])]),t._v(" "),e("h2",{attrs:{id:"模块的加载机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#模块的加载机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 模块的加载机制")]),t._v(" "),e("p",[t._v("输入的值是被输出值的拷贝，一旦模块的值被输出，在模块内部去改变，不会影响已经被输出的值")]),t._v(" "),e("h2",{attrs:{id:"filename-dirname"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#filename-dirname","aria-hidden":"true"}},[t._v("#")]),t._v(" __filename, __dirname")]),t._v(" "),e("p",[e("code",[t._v("__filename")]),t._v("文件的绝对路径加上文件名")]),t._v(" "),e("p",[e("code",[t._v("__dirname")]),t._v("文件的绝对路径，不包括文件名")])])}],!1,null,null,null);s.options.__file="commonjs.md";a.default=s.exports}}]);