(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{218:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"class-的基本语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#class-的基本语法","aria-hidden":"true"}},[t._v("#")]),t._v(" Class 的基本语法")]),t._v(" "),s("h2",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Point")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("constructor")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("toString")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token template-string"}},[s("span",{attrs:{class:"token string"}},[t._v("`x: ")]),s("span",{attrs:{class:"token interpolation"}},[s("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),s("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{attrs:{class:"token string"}},[t._v(", y: ")]),s("span",{attrs:{class:"token interpolation"}},[s("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),s("span",{attrs:{class:"token keyword"}},[t._v("this")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y"),s("span",{attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{attrs:{class:"token string"}},[t._v("`")])]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("所有的方法定义在"),s("code",[t._v("prototype")]),t._v("对象上面，方法之间不能用多好隔开")]),t._v(" "),s("li",[t._v("可以直接用"),s("code",[t._v("new")]),t._v("命令进行实例化，")]),t._v(" "),s("li",[t._v("所有类内部定义的方法，都是不可枚举的 (no-enumerable)")]),t._v(" "),s("li",[t._v("类和模块的内部，默认使用严格模式")]),t._v(" "),s("li",[t._v("默认会带有一个空的"),s("code",[t._v("constructor")]),t._v("方法，表示类的实例化方法")]),t._v(" "),s("li",[t._v("不存在变量提升")]),t._v(" "),s("li",[t._v("类的"),s("code",[t._v("name")]),t._v("属性为"),s("code",[t._v("class")]),t._v("关键字后的变量名")]),t._v(" "),s("li",[t._v("可以为类定义属性的存值函数 (setter) 和取值函数 (getter)")]),t._v(" "),s("li",[t._v("可以通过在方法前面加上"),s("code",[t._v("static")]),t._v("关键字来定义类的静态方法，可以直接通过类名 + 方法名的形式掉用，且可以被子类继承")]),t._v(" "),s("li",[s("code",[t._v("ES6")]),t._v("规定类的内部只有静态方法，没有静态属性")])]),t._v(" "),s("p",[s("code",[t._v("ES6")]),t._v("建议尽量用"),s("code",[t._v("Object.getPrototypeOf()")]),t._v("方法去获取实例对象的原型，而不是通过"),s("code",[t._v("__proto__")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"私有属性和私有方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#私有属性和私有方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 私有属性和私有方法")]),t._v(" "),s("ul",[s("li",[t._v("一般约定私有属性和私有方法前面加上"),s("code",[t._v("_")]),t._v("表示内部属性，但这是不安全的")]),t._v(" "),s("li",[t._v("使用 Symbol 值，在类内部使用 Symbol 值作为变量的名字，利用 Symbol 值的唯一性，可以保证该属性不可在第三方访问")])]),t._v(" "),s("h2",{attrs:{id:"静态属性和实例属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态属性和实例属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 静态属性和实例属性")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nFoo"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prop "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("ES6")]),t._v("只能通过上面代码的方式定义静态属性。")]),t._v(" "),s("p",[t._v("目前有一个新的提案来定义类的静态属性和实例属性，可以了解下。")]),t._v(" "),s("h3",{attrs:{id:"类的实例属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类的实例属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 类的实例属性")]),t._v(" "),s("ul",[s("li",[t._v("在定义类的内部通过等号的方式来定义实例属性")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Foo")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  myProp "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("constructor")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"类的静态属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类的静态属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 类的静态属性")]),t._v(" "),s("p",[t._v("只要在实例属性前面加上"),s("code",[t._v("static")]),t._v("关键字就可以定义静态属性，大大方便了静态属性的定义和表达")]),t._v(" "),s("h2",{attrs:{id:"new-target-属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new-target-属性","aria-hidden":"true"}},[t._v("#")]),t._v(" new.target 属性")]),t._v(" "),s("p",[t._v("在构造函数内部使用，表示"),s("code",[t._v("new")]),t._v("命令作用于哪个构造函数，如果没有使用"),s("code",[t._v("new")]),t._v("命令，"),s("code",[t._v("new.target")]),t._v("返回"),s("code",[t._v("undefined")])])])}],!1,null,null,null);e.options.__file="class.md";a.default=e.exports}}]);