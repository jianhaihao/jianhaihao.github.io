(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{215:function(t,a,s){"use strict";s.r(a);var n=s(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"generator-函数的异步应用-2-5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator-函数的异步应用-2-5","aria-hidden":"true"}},[t._v("#")]),t._v(" Generator 函数的异步应用 (2.5)")]),t._v(" "),s("p",[t._v("由于"),s("code",[t._v("JavaScript")]),t._v("是一门单线程语言，所以异步调用是最基本的，如果没有异步，不敢想象会有多卡")]),t._v(" "),s("h2",{attrs:{id:"传统的异步实现方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传统的异步实现方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 传统的异步实现方法")]),t._v(" "),s("ul",[s("li",[t._v("回调函数")]),t._v(" "),s("li",[t._v("事件监听")]),t._v(" "),s("li",[t._v("发布/订阅")]),t._v(" "),s("li",[t._v("Promise 对象")])]),t._v(" "),s("p",[s("code",[t._v("Generator")]),t._v(" 函数为"),s("code",[t._v("JavaScript")]),t._v("的异步实现带入了一个全新的阶段")]),t._v(" "),s("h2",{attrs:{id:"回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 回调函数")]),t._v(" "),s("p",[t._v("为什么 Node 约定，回调函数的第一个参数必须为错误对象 "),s("code",[t._v("err")]),t._v("？")]),t._v(" "),s("p",[t._v("原因是函数分为两段执行，第一段执行完毕之后，函数的上下文结束，如果出现错误，原来的上下文无法捕捉，只能够当作参数传入第二段执行函数")]),t._v(" "),s("h2",{attrs:{id:"promise-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" Promise 函数")]),t._v(" "),s("ul",[s("li",[t._v("Promise 的提出是为了解决回调地狱的出现，防止代码的纵向发展，让代码横向发展。")]),t._v(" "),s("li",[t._v("但是大量的"),s("code",[t._v("then")]),t._v("关键字的出现，使得代码看上去非常的冗余")])]),t._v(" "),s("h2",{attrs:{id:"generator-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" Generator 函数")]),t._v(" "),s("h3",{attrs:{id:"协程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协程","aria-hidden":"true"}},[t._v("#")]),t._v(" 协程")]),t._v(" "),s("p",[t._v("协程的大概执行思路")]),t._v(" "),s("ol",[s("li",[t._v("执行 A 函数")]),t._v(" "),s("li",[t._v("暂停，把执行权交给 B 函数")]),t._v(" "),s("li",[t._v("执行 B 函数，一段时间后，执行权返还给 A 函数")]),t._v(" "),s("li",[t._v("继续执行 A 函数")])]),t._v(" "),s("h3",{attrs:{id:"协程的-generator-函数实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协程的-generator-函数实现","aria-hidden":"true"}},[t._v("#")]),t._v(" 协程的 Generator 函数实现")]),t._v(" "),s("p",[t._v("Generator 函数是协程在"),s("code",[t._v("es6")]),t._v("的实现，最大的特点就是通过"),s("code",[t._v("yield")]),t._v("函数可以交出函数的执行权，而且执行 Generator 函数不会返回执行结果，而是返回一个指针对象。")]),t._v(" "),s("h3",{attrs:{id:"generator-函数的数据交换和错误处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator-函数的数据交换和错误处理","aria-hidden":"true"}},[t._v("#")]),t._v(" Generator 函数的数据交换和错误处理")]),t._v(" "),s("ul",[s("li",[t._v("函数内部可以通过在"),s("code",[t._v("yield")]),t._v("表达式后面设置值来向函数外部输出值，通过调用"),s("code",[t._v("next()")]),t._v("返回对象的"),s("code",[t._v("value")]),t._v("属性获取")]),t._v(" "),s("li",[t._v("通过"),s("code",[t._v("next(params)")]),t._v("可以向函数内部传递参数，")]),t._v(" "),s("li",[t._v("函数的遍历器对象的"),s("code",[t._v("throw()")]),t._v("方法抛出的错误可以在函数内部捕获，内部捕获不了，也可以在函数体外部捕获")])]),t._v(" "),s("h3",{attrs:{id:"异步任务的封装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步任务的封装","aria-hidden":"true"}},[t._v("#")]),t._v(" 异步任务的封装")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" fetch "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("require")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'node-fetch'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("gen")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'https://api.github.com/users/github'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("fetch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bio"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上面是对异步的一个简单封装")]),t._v(" "),s("h2",{attrs:{id:"thunk-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thunk-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" Thunk 函数")]),t._v(" "),s("p",[t._v("Thunk 函数是自动执行 Generator 函数的一种方法")]),t._v(" "),s("h3",{attrs:{id:"参数的求值策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参数的求值策略","aria-hidden":"true"}},[t._v("#")]),t._v(" 参数的求值策略")]),t._v(" "),s("p",[t._v("问题：函数的参数带参数应该在什么时候计算参数的值？")]),t._v(" "),s("ul",[s("li",[t._v("传名调用：在实际用到这个参数的时候去计算的到参数的值")]),t._v(" "),s("li",[t._v("传值调用：把参数的值求出来之后再作为参数传入，C 语言的参数传递方式")])]),t._v(" "),s("p",[t._v("为了避免性能的损耗，很多人认为应该采用传名调用")]),t._v(" "),s("h3",{attrs:{id:"thunk-函数的意义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thunk-函数的意义","aria-hidden":"true"}},[t._v("#")]),t._v(" Thunk 函数的意义")]),t._v(" "),s("p",[t._v("实现参数的传名调用，用一个方法代替参数，在方法里面返回表达式的值，将这个方法作为参数传入，调用的时候直接调用这个方法即可。")]),t._v(" "),s("p",[t._v("简单来说既是利用方法替换表达式")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("g")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" m "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("g")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("6")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("//Thunk函数实现传名调用")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("thunk")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("6")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("g")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("m")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("g")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("thunk"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"javascript-语言的-thunk-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-语言的-thunk-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" JavaScript 语言的 Thunk 函数")]),t._v(" "),s("p",[t._v("JavaScript 里面的 Thunk 函数的重要意义是将多参数函数改成单参数函数")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("g")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("//等同于")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("thunk")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("g")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("g")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"thunkfy-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thunkfy-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" Thunkfy 模块")]),t._v(" "),s("p",[t._v("生产环境的转换器，建议采用 Thunkfy 模块")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" thunkify "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("require")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'Thunkify'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" gThunk "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("thunkify")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("gThunk")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"generator-函数的流程管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator-函数的流程管理","aria-hidden":"true"}},[t._v("#")]),t._v(" Generator 函数的流程管理")]),t._v(" "),s("p",[t._v("Thunk 函数可以用于 Generator 函数的自动流程管理")]),t._v(" "),s("ul",[s("li",[t._v("Generator 函数通过"),s("code",[t._v("yield")]),t._v("表达式将函数的执行控制权交出去，通过"),s("code",[t._v("next()")]),t._v("方法将执行权返回回来，如果是进行多项异步操作，则通常的方法是在回调方法里面调用"),s("code",[t._v("next()")]),t._v("方法来执行 Generator 函数接下来的流程")])]),t._v(" "),s("h3",{attrs:{id:"thunk-函数的自动流程管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#thunk-函数的自动流程管理","aria-hidden":"true"}},[t._v("#")]),t._v(" Thunk 函数的自动流程管理")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("run")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" gen "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("fn")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" gen"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("done"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    result"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("value")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("next"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),s("span",{attrs:{class:"token function"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("g")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token function"}},[t._v("run")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上述代码中，"),s("code",[t._v("run")]),t._v(" 函数内部的"),s("code",[t._v("next")]),t._v("方法就是 Thunk 函数的回调方法，现调用 Generator 函数的"),s("code",[t._v("next")]),t._v("方法将指针移至下一步，判断 Generator 函数返回的"),s("code",[t._v("done")]),t._v("属性是否为"),s("code",[t._v("true")]),t._v("， 表示 Generator 函数已经执行完成，如果没有，则将 "),s("code",[t._v("run")]),t._v("函数内部的"),s("code",[t._v("next")]),t._v("方法作为回调函数传入 Thunk的回调之中（通过 Generator 函数的指针对象返回的 "),s("code",[t._v("value")]),t._v("，也就是 Thunk 函数传入），这样的流程就可以保证 Generator 函数里面的一步操作可以按步骤执行，调用方法如下")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("generatorF")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result1 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("readFileThunk")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'fileAName'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result2 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("readFileThunk")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'fileBName'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result3 "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("readFileThunk")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'fileBName'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token function"}},[t._v("run")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这样的写法就非常的清晰简洁，同时也达到异步按流程制动执行的目的，条件是必须保证"),s("code",[t._v("yield")]),t._v("函数后面跟着的是 Thunk 函数")]),t._v(" "),s("h2",{attrs:{id:"co-模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#co-模块","aria-hidden":"true"}},[t._v("#")]),t._v(" co 模块")]),t._v(" "),s("blockquote",[s("p",[t._v("用于 Generator 函数的自动执行，不用编写 Generator 函数执行器")])]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" co "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("require")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v("'co'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("co")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("generatorF"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("返回一个 Promise 对象，可以调用"),s("code",[t._v("then")]),t._v("方法添加回调函数")]),t._v(" "),s("h3",{attrs:{id:"co-模块的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#co-模块的原理","aria-hidden":"true"}},[t._v("#")]),t._v(" co 模块的原理")]),t._v(" "),s("p",[t._v("其实，Generator 函数能够自动执行异步任务只需要达到两点要求，能够叫出函数的执行权，当异步操作有了结果，能够将控制权返还给 Generator 函数")]),t._v(" "),s("p",[t._v("两个方法可以做到这一点：")]),t._v(" "),s("ol",[s("li",[t._v("回调函数：将异步操作包装成 Thunk 函数，在回调函数里面执行 Generator 函数的"),s("code",[t._v("next")]),t._v("方法，交回控制权")]),t._v(" "),s("li",[t._v("Promise 对象，将异步操作包装成 Promise 对象，在"),s("code",[t._v("then")]),t._v("方法里面调用 Generator 函数的"),s("code",[t._v("next")]),t._v("方法，交回控制权")])]),t._v(" "),s("h3",{attrs:{id:"基于-promise-对象的自动执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于-promise-对象的自动执行","aria-hidden":"true"}},[t._v("#")]),t._v(" 基于 Promise 对象的自动执行")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("run")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gen"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" g "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("gen")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" g"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("if")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("done"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    result"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("then")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{attrs:{class:"token function"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{attrs:{class:"token function"}},[t._v("next")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("gen")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{attrs:{class:"token function"}},[t._v("run")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("g"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在"),s("code",[t._v("then")]),t._v("回调参数里面调用"),s("code",[t._v("next")]),t._v("方法执行下一步操作")]),t._v(" "),s("h3",{attrs:{id:"处理并发的一步操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#处理并发的一步操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 处理并发的一步操作")]),t._v(" "),s("p",[t._v("有时候我们需要进行一些并发的异步操作，等每一个异步操作都完成之后再进行下一步操作。")]),t._v(" "),s("p",[t._v("这是，只要把并发的异步操作方法封装到数组或者对象里面，放到"),s("code",[t._v("yield")]),t._v("后面就可以了")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 数组的写法")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("co")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    Promise"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("resolve")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    Promise"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("resolve")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("onerror"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 对象的写法")]),t._v("\n"),s("span",{attrs:{class:"token function"}},[t._v("co")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token keyword"}},[t._v("function")]),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" res "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Promise"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("resolve")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("1")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Promise"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("resolve")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("onerror"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h3",{attrs:{id:"实例：-处理-stream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实例：-处理-stream","aria-hidden":"true"}},[t._v("#")]),t._v(" 实例： 处理 Stream")]),t._v(" "),s("ul",[s("li",[t._v("Node 提供 Stream 流的方式读写数据，这在处理大文件的时候是非常有利的，将数据分成一块一块去读写，Stream 流使用 EventEmitter API，会释放三个事件")])]),t._v(" "),s("p",[t._v("1."),s("code",[t._v("data")]),t._v("事件：下一块数据已经准备好\n2."),s("code",[t._v("end")]),t._v("事件：整个读写已经完成\n3."),s("code",[t._v("error")]),t._v("事件：读写发生错误")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("Promise.race()")]),t._v("可以判断那一个先发生，只有当"),s("code",[t._v("data")]),t._v("事件先进入的时候，才进行下一块数据的读写，从而我们通过"),s("code",[t._v("while")]),t._v("循环可以完成整个数据的读写")])])}],!1,null,null,null);o.options.__file="generator-async.md";a.default=o.exports}}]);