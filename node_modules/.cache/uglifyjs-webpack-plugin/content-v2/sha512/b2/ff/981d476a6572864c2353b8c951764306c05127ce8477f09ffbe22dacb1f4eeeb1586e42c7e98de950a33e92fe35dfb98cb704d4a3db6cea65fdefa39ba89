{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{249:function(t,s,a){\"use strict\";a.r(s);var e=a(0),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"content\"},[t._m(0),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"正则表达式一种文本匹配的模式。\"),a(\"a\",{attrs:{href:\"http://javascript.ruanyifeng.com/stdlib/regexp.html#toc5\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"参考\"),a(\"OutboundLink\")],1)])]),t._v(\" \"),t._m(1),t._v(\" \"),t._m(2),t._m(3),t._v(\" \"),t._m(4),t._v(\" \"),t._m(5),t._m(6),t._v(\" \"),t._m(7),t._m(8),t._v(\" \"),t._m(9),t._v(\" \"),t._m(10),t._v(\" \"),a(\"p\",[t._v(\"返回布尔值，当前模式是否匹配参数字符串\")]),t._v(\" \"),t._m(11),t._v(\" \"),t._m(12),t._v(\" \"),t._m(13),t._v(\" \"),t._m(14),t._m(15),t._v(\" \"),t._m(16),t._v(\" \"),t._m(17),t._v(\" \"),t._m(18),t._v(\" \"),t._m(19),t._v(\" \"),t._m(20),t._v(\" \"),t._m(21),t._v(\" \"),t._m(22),t._v(\" \"),t._m(23),t._v(\" \"),t._m(24),t._v(\" \"),t._m(25),t._v(\" \"),t._m(26),t._v(\" \"),t._m(27),t._v(\" \"),t._m(28),t._v(\" \"),t._m(29),t._m(30),t._v(\" \"),a(\"p\",[t._v(\"正则表达式为一些不能打印的字符，提供了一些表达方法\")]),t._v(\" \"),t._m(31),t._v(\" \"),t._m(32),t._v(\" \"),t._m(33),t._v(\" \"),a(\"p\",[t._v(\"有两个字符在字符类中有特殊含义\")]),t._v(\" \"),t._m(34),t._v(\" \"),t._m(35),t._v(\" \"),t._m(36),t._v(\" \"),t._m(37),t._v(\" \"),t._m(38),t._v(\" \"),t._m(39),t._v(\" \"),t._m(40),t._v(\" \"),t._m(41),t._v(\" \"),t._m(42),t._v(\" \"),t._m(43),t._v(\" \"),t._m(44),t._v(\" \"),t._m(45),t._v(\" \"),t._m(46),t._v(\" \"),t._m(47),t._v(\" \"),t._m(48),t._v(\" \"),t._m(49),t._v(\" \"),t._m(50),t._v(\" \"),t._m(51),t._v(\" \"),t._m(52),t._v(\" \"),t._m(53),t._m(54),t._v(\" \"),t._m(55),t._v(\" \"),t._m(56),t._m(57),t._v(\" \"),t._m(58),t._v(\" \"),t._m(59)])},[function(){var t=this.$createElement,s=this._self._c||t;return s(\"h1\",{attrs:{id:\"正则表达式-3\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#正则表达式-3\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 正则表达式 (3)\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"新建正则表达式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#新建正则表达式\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 新建正则表达式\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" regexp \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token class-name\"}},[t._v(\"RegExp\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'xyz'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" regexp \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token regex\"}},[t._v(\"/xyz/\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"实例属性\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实例属性\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 实例属性\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"ul\",[s(\"li\",[this._v(\"只读属性，修饰符\")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[t._v(\"RegExp\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"ignoreCase  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 忽略大小写\")]),t._v(\"\\nRegExp\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"global  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 全局匹配\")]),t._v(\"\\nRegExp\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"multiline  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 多行模式匹配\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"ul\",[s(\"li\",[this._v(\"其他属性\")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[t._v(\"RegExp\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"lastIndex  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 返回一个数值，表示下一次搜索开始的位置，可写，当使用 g 修饰符的时候，该属性才发挥作用\")]),t._v(\"\\nRegExp\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"source  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 返回正则表达式的字符串形式，不包括反斜杠，只读\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"可以通过手动指定\"),s(\"code\",[this._v(\"lastIndex\")]),this._v(\"属性来设置匹配的起始位置\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"实例方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实例方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 实例方法\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"regexp-prototype-test\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#regexp-prototype-test\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" RegExp.prototype.test\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"regexp-prototype-exec\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#regexp-prototype-exec\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" RegExp.prototype.exec\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[t._v(\"正则匹配字符串，如果匹配上，返回包含结果的类数组的对象；如果没有结果，返回\"),a(\"code\",[t._v(\"null\")])]),t._v(\" \"),a(\"li\",[t._v(\"返回类数组对象第一个成员为匹配成功的子串，第二个成员是圆括号匹配的结果\")]),t._v(\" \"),a(\"li\",[t._v(\"返回的类数组对象包含\"),a(\"code\",[t._v(\"input\")]),t._v(\"和\"),a(\"code\",[t._v(\"index\")]),t._v(\"两个属性，分别表示原字符串和匹配成功子串在原字符串的起始位置\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"字符串的实例方法\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字符串的实例方法\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 字符串的实例方法\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[t._v(\"String\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"match\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 返回一个数组，包含所有匹配到的子串，没有返回 null\")]),t._v(\"\\nString\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"search\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 返回一个整数，表示匹配成功开始的位置，没有返回 -1\")]),t._v(\"\\nString\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"replace\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 按照给定的正则表达式替换字符串，返回替换后的字符串\")]),t._v(\"\\nString\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"split\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 按照给定的正则表达式对字符串进行分割，返回一个包含分割后子串的数组\")]),t._v(\"\\n\")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[t._v(\"设置正则表达式的\"),a(\"code\",[t._v(\"lastIndex\")]),t._v(\"属性，对\"),a(\"code\",[t._v(\"match()\")]),t._v(\"方法无效，每次匹配都是从第 0 个位置开始的\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"replace()\")]),t._v(\"方法第二个参数可以是替换后的字符串，也可以是正则表达是的分组表达式\"),a(\"code\",[t._v(\"$(1)\")]),t._v(\"，也可以是一个函数，替换每一个匹配的返回值\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"split()\")]),t._v(\"方法的第二个参数可以是一个数值，表示返回数组的最大成员数\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h2\",{attrs:{id:\"匹配规则\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#匹配规则\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 匹配规则\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"字面量字符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字面量字符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 字面量字符\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"blockquote\",[s(\"p\",[this._v(\"在正则表达式中，某个字符只表示它字面的含义，比如\"),s(\"code\",[this._v(\"/z/\")]),this._v(\",\"),s(\"code\",[this._v(\"/a/\")]),this._v(\"分别匹配 a 和 b，就叫他字面量字符\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"元字符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#元字符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 元字符\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"blockquote\",[s(\"p\",[this._v(\"具有特殊含义的字符\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"点字符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#点字符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 点字符 (.)\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"p\",[t._v(\"匹配除开回车 (\"),a(\"code\",[t._v(\"\\\\r\")]),t._v(\")、换行 (\"),a(\"code\",[t._v(\"\\\\n\")]),t._v(\")、行分割符 (\"),a(\"code\",[t._v(\"\\\\u2028\")]),t._v(\") 和段分割符 (\"),a(\"code\",[t._v(\"\\\\u2029\")]),t._v(\") 之外任意一个字符\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"位置字符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#位置字符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 位置字符\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"ul\",[s(\"li\",[s(\"code\",[this._v(\"^\")]),this._v(\"表示字符串的开始位置\")]),this._v(\" \"),s(\"li\",[s(\"code\",[this._v(\"$\")]),this._v(\"表示字符串的结束位置\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"选择符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#选择符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 选择符 (|)\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"竖线符号\"),s(\"code\",[this._v(\"|\")]),this._v(\"在正则表达式中，表示或 (\"),s(\"code\",[this._v(\"OR\")]),this._v(\") 的关系，可以联合使用\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"转义符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#转义符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 转义符 ()\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"正则表达式中有一些特殊含义的元字符，如果要表达他们本身，则需要在字符前加上\"),s(\"code\",[this._v(\"\\\\\")]),this._v(\"进行转义\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token regex\"}},[t._v(\"/\\\\+/\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"test\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'a+b'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"特殊字符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#特殊字符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 特殊字符\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"[\\\\b]\")]),t._v(\"匹配退格键，不要与\"),a(\"code\",[t._v(\"\\\\b\")]),t._v(\"混淆\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\n\")]),t._v(\"匹配换行键\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\r\")]),t._v(\"匹配回车键\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\t\")]),t._v(\"匹配制表符\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\v\")]),t._v(\"匹配垂直制表符\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\f\")]),t._v(\"匹配换页符\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\0\")]),t._v(\"匹配\"),a(\"code\",[t._v(\"null\")]),t._v(\"字符\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\xhh\")]),t._v(\"匹配\"),a(\"code\",[t._v(\"\\\\u00\")]),t._v(\"和\"),a(\"code\",[t._v(\"\\\\uFF\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\uhhhh\")]),t._v(\"匹配\"),a(\"code\",[t._v(\"\\\\u0000\")]),t._v(\"和\"),a(\"code\",[t._v(\"\\\\uFFFF\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"字符类\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字符类\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 字符类\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[this._v(\"字符类 class 表示一些可供选择的字符，只要匹配一个就可以，把所有待匹配的字符放入方括号类，组成一个字符类，\"),s(\"code\",[this._v(\"/[abc]/\")]),this._v(\"可以匹配带有 a, b, c 字符的字符串\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"脱字符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#脱字符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 脱字符 (^)\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"ul\",[s(\"li\",[this._v(\"表示除开方括号字符的任意字符都可以匹配，\"),s(\"code\",[this._v(\"[^abc]\")]),this._v(\"表示匹配除开 a, b, c 之外的任意字符\")]),this._v(\" \"),s(\"li\",[this._v(\"[^] 表示匹配一切字符，范围比点字符 (.) 要大\")]),this._v(\" \"),s(\"li\",[this._v(\"脱字符只有在字符类的第一位才有效，否则就是字面字符\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"连字符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#连字符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 连字符 (-)\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"/[0-9]/\")]),t._v(\"表示\"),a(\"code\",[t._v(\"[0123456789]\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"/[a-z]/\")]),t._v(\"表示 26 个小写字母\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"/[A-Z]/\")]),t._v(\"表示 26 个大写字母\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"预定义模式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#预定义模式\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 预定义模式\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"blockquote\",[s(\"p\",[this._v(\"常见匹配模式的简写\")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"\\\\d\")]),t._v(\"等同于\"),a(\"code\",[t._v(\"[0-9]\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\D\")]),t._v(\"等同于\"),a(\"code\",[t._v(\"[^0-9]\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\w\")]),t._v(\"等同于\"),a(\"code\",[t._v(\"[a-zA-Z0-9_]\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\W\")]),t._v(\"等同于\"),a(\"code\",[t._v(\"[^a-zA-Z0-9_]\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\s\")]),t._v(\"等同于\"),a(\"code\",[t._v(\"[\\\\r\\\\n\\\\t\\\\v\\\\f]\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\S\")]),t._v(\"等同于\"),a(\"code\",[t._v(\"[^\\\\r\\\\n\\\\t\\\\v\\\\f]\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\b\")]),t._v(\"匹配词的边界\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"\\\\B\")]),t._v(\"匹配非词边界，即在词的内部\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"重复类\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#重复类\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 重复类\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"a{n}\")]),this._v(\"匹配 a 字符重复 n 次\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"量字符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#量字符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 量字符\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"?\")]),t._v(\"匹配 0 次或 1 次，等同于\"),a(\"code\",[t._v(\"{0, 1}\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"*\")]),t._v(\"匹配 任意次，等同于\"),a(\"code\",[t._v(\"{0,}\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"+\")]),t._v(\"匹配 1 次或多次，等同于\"),a(\"code\",[t._v(\"{1,}\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"贪婪模式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#贪婪模式\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 贪婪模式\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[t._v(\"量字符的原则是最大可能匹配，知道下一个字符不匹配为止，我们称这种匹配模式为贪婪模式\")]),t._v(\" \"),a(\"li\",[t._v(\"如果想讲贪婪模式改为非贪婪模式，则在量字符后面加上\"),a(\"code\",[t._v(\"?\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"*?\")]),t._v(\"表示某个模式出现 0 次或多次，采用非贪婪模式\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"+?\")]),t._v(\"表示某个模式出现 1 次或者多次匹配，采用非贪婪模式\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"修饰符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#修饰符\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 修饰符\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"g\")]),t._v(\"修饰符，全局匹配，主要用于搜索和替换\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"i\")]),t._v(\"修饰符，忽略大小写进行匹配\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"m\")]),t._v(\"修饰符，多行匹配模式\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h3\",{attrs:{id:\"组匹配\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组匹配\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 组匹配\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ul\",[a(\"li\",[t._v(\"正则表达式的括号表示分组匹配，括号中的模式可以用来匹配分组的内容\")]),t._v(\" \"),a(\"li\",[t._v(\"使用组匹配的时候，不宜使用\"),a(\"code\",[t._v(\"g\")]),t._v(\"修饰符，否则\"),a(\"code\",[t._v(\"match()\")]),t._v(\"方法不回获取分组的内容，可以使用循环配合\"),a(\"code\",[t._v(\"RegExp.prototype.exec()\")]),t._v(\"获取每一轮的组捕获\")]),t._v(\" \"),a(\"li\",[t._v(\"正则表达式内部可以使用\"),a(\"code\",[t._v(\"\\\\1\")]),t._v(\",\"),a(\"code\",[t._v(\"、2\")]),t._v(\"，来获取括号匹配的内容，\"),a(\"code\",[t._v(\"\\\\1\")]),t._v(\"表示获取第一个括号匹配的内容\")])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"非组捕获\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#非组捕获\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 非组捕获\")])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"p\",[s(\"code\",[this._v(\"(?:x)\")]),this._v(\"称为非组捕获，表示不返回该组捕获的内容\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" m \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'abc'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"match\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token regex\"}},[t._v(\"/(?:.)b(.)/\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nm \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v('// [\"abc\", \"c\"];')]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"先行断言\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#先行断言\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 先行断言\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"p\",[a(\"code\",[t._v(\"x(?=y)\")]),t._v(\"称为先行断言，\"),a(\"code\",[t._v(\"x\")]),t._v(\"只有在\"),a(\"code\",[t._v(\"y\")]),t._v(\"前面才匹配，\"),a(\"code\",[t._v(\"y\")]),t._v(\"不计入匹配结果\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" m \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'xy'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"match\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token regex\"}},[t._v(\"/x(?:y)/\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nm \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// ['x']\")]),t._v(\"\\n\")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s(\"h4\",{attrs:{id:\"先行否定断言\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#先行否定断言\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 先行否定断言\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"p\",[a(\"code\",[t._v(\"x(?!y)\")]),t._v(\"称为先行否定断言，只有不再\"),a(\"code\",[t._v(\"y\")]),t._v(\"前面的\"),a(\"code\",[t._v(\"x\")]),t._v(\"才匹配，\"),a(\"code\",[t._v(\"y\")]),t._v(\"不计入匹配结果\")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" m \"),a(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'abcdca'\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{attrs:{class:\"token function\"}},[t._v(\"match\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{attrs:{class:\"token regex\"}},[t._v(\"/c(?!a)/\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nm \"),a(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// ['c']\")]),t._v(\"\\n\")])])])}],!1,null,null,null);n.options.__file=\"regexp.md\";s.default=n.exports}}]);","extractedComments":[]}