{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{203:function(t,a,s){\"use strict\";s.r(a);var n=s(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"div\",{staticClass:\"content\"},[s(\"h1\",{attrs:{id:\"symbol-2\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#symbol-2\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Symbol(2)\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"JavaScript 第七种数据类型，表示独一无二的值\")]),t._v(\" \"),s(\"li\",[t._v(\"Symbol 值通过\"),s(\"code\",[t._v(\"Symbol函数\")]),t._v(\"生成，对象的属性可以是字符串类型，也可以是 Symbol 类型\")]),t._v(\" \"),s(\"li\",[t._v(\"调用\"),s(\"code\",[t._v(\"Symbol函数\")]),t._v(\"不能使用\"),s(\"code\",[t._v(\"new\")]),t._v(\"命令，接受一个字符串作为函数的参数，主要是对 Symbol 值的描述，在控制台显示\")]),t._v(\" \"),s(\"li\",[t._v(\"Symbol 值不能参与运算\")]),t._v(\" \"),s(\"li\",[t._v(\"Symbol 可以转化为布尔值，但是不能转化为数值\")]),t._v(\" \"),s(\"li\",[t._v(\"Symbol 不是私有属性\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"作为属性名的-symbol\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#作为属性名的-symbol\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 作为属性名的 Symbol\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"每个\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"值都是唯一的，意味着\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"可以作为标识符\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-javascript extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" mySymbol \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"Symbol\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//第一种写法\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\na\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"mySymbol\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'hello'\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//第二种写法\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"mySymbol\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'hello'\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//第三种写法\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nObject\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"defineProperty\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" mySymbol\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"value\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token string\"}},[t._v(\"'hello'\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\")])])]),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"Symbol\")]),t._v(\"作为属性名时，不能用点运算符\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"实例：消除魔术字符串\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实例：消除魔术字符串\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 实例：消除魔术字符串\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"魔术字符串：在代码中多次出现，与代码形成强耦合的某一具体的字符串或值。\")])]),t._v(\" \"),s(\"p\",[t._v(\"在代码编写过程中，尽量用\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"值来代替魔术字符串\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"属性名的遍历\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#属性名的遍历\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 属性名的遍历\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"通过\"),s(\"code\",[t._v(\"Object.getOwnPropertySymbols\")]),t._v(\"和\"),s(\"code\",[t._v(\"Reflect.ownKeys()\")]),t._v(\"可以获取对象的\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"属性\")]),t._v(\" \"),s(\"li\",[t._v(\"可以利用\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"属性的特性可以定义一些非私有，但又只希望用于内部的方法\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"symbol-for-symbol-keyfor\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#symbol-for-symbol-keyfor\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" Symbol.for(), Symbol.keyFor()\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"可以通过\"),s(\"code\",[t._v(\"Symbol.for()\")]),t._v(\"方法定义相同的\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"值，以相同\"),s(\"code\",[t._v(\"key\")]),t._v(\"生成的\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"值为同一个\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"值\")]),t._v(\" \"),s(\"li\",[s(\"code\",[t._v(\"Symbol.keyFor()\")]),t._v(\"，参数为一个\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"值，返回一个已经登记\"),s(\"code\",[t._v(\"Symbol\")]),t._v(\"值的\"),s(\"code\",[t._v(\"key\")]),t._v(\"，简单来说，利用\"),s(\"code\",[t._v(\"Symbol()\")]),t._v(\"生成的值，\"),s(\"code\",[t._v(\"key\")]),t._v(\"都不会相同\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"内置的-symbol-值\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#内置的-symbol-值\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 内置的 Symbol 值\")])])}],!1,null,null,null);o.options.__file=\"symbol.md\";a.default=o.exports}}]);","extractedComments":[]}