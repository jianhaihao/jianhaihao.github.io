{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{264:function(t,a,s){\"use strict\";s.r(a);var n=s(0),v=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"div\",{staticClass:\"content\"},[s(\"h1\",{attrs:{id:\"函数的扩展（2-5）\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数的扩展（2-5）\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 函数的扩展（2.5）\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"函数参数的默认值\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数参数的默认值\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 函数参数的默认值\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"es6\")]),t._v(\"允许直接为函数参数指定默认值\")]),t._v(\" \"),s(\"li\",[t._v(\"与解构赋值默认值结合使用\")]),t._v(\" \"),s(\"li\",[t._v(\"建议将带有默认值的参数放在尾部，因为如果放在前面或者中间，在调用函数的时候就必须传该参数，否则会报错\")]),t._v(\" \"),s(\"li\",[t._v(\"函数的length属性返回函数不但默认值参数的个数\")]),t._v(\" \"),s(\"li\",[t._v(\"一旦设置了参数的默认值，参数会形成一个单独的作用域，等初始化完成，这个作用域消失\")]),t._v(\" \"),s(\"li\",[t._v(\"应用：指定一个参数不得省略，省略则抛出错误\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"rest参数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#rest参数\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" rest参数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"可以理解为\"),s(\"code\",[t._v(\"arguments\")]),t._v(\"的替代品，\"),s(\"code\",[t._v(\"arguments\")]),t._v(\"为类数组对象，\"),s(\"code\",[t._v(\"rest参数\")]),t._v(\"则是真正的数组\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-javascript extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 求和函数\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"add\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"values\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" values\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"reduce\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" b\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" a \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" b\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"严格模式\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#严格模式\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 严格模式\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"函数参数使用了默认值、解构赋值、扩展运算符，那么在函数内部不能显示设定为严格模式，否则会报错\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"name属性\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#name属性\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" name属性\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"返回函数的函数名\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"箭头函数\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#箭头函数\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 箭头函数\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"code\",[t._v(\"es6\")]),t._v(\"允许使用箭头\"),s(\"code\",[t._v(\"=>\")]),t._v(\"定义函数，也是我本人用的比较爽的\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-javascript extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"f\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" v \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" v\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 等同于\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function-variable function\"}},[t._v(\"f\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"v\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" v\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"使用圆括号代替参数部分\")]),t._v(\" \"),s(\"li\",[t._v(\"函数代码块多余一条语句，则用大括号括起来，加上return;如果只有一行语句，则可省去大括号\")]),t._v(\" \"),s(\"li\",[t._v(\"如果要返回一个对象，则用圆括号将对象包裹起来s\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-javascipt extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[t._v(\"var f = (v) => ({result: v+ 1});\\nf(5)\\t//{result: 6}\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"使用注意点\")])]),t._v(\" \"),s(\"ol\",[s(\"li\",[t._v(\"函数体的\"),s(\"code\",[t._v(\"this\")]),t._v(\"对象，不是使用时所在的对象，而是始终指向声明箭头函数所在的作用域，固定了\"),s(\"code\",[t._v(\"this\")]),t._v(\"的指向，极大解决了\"),s(\"code\",[t._v(\"this\")]),t._v(\"对象指向不明确的问题\")]),t._v(\" \"),s(\"li\",[t._v(\"不可以作为构造函数\")]),t._v(\" \"),s(\"li\",[t._v(\"不可以使用\"),s(\"code\",[t._v(\"arguments\")]),t._v(\"对象，可以使用\"),s(\"code\",[t._v(\"rest参数\")]),t._v(\"代替\")]),t._v(\" \"),s(\"li\",[t._v(\"不可以使用\"),s(\"code\",[t._v(\"yield命令\")]),t._v(\"，因此箭头函数不能用做\"),s(\"code\",[t._v(\"Generator函数\")]),t._v(\"，\"),s(\"em\",[t._v(\"待学习\")])])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"双冒号运算符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#双冒号运算符\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 双冒号运算符\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"apply``call``bind\")]),t._v(\" 的替代方案，显示指定函数的上下文对象\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-javascript extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[t._v(\"foo\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\"bar\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//\\t等同于\")]),t._v(\"\\nbar\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"bind\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"foo\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nfoo\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\":\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"bar\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"arguments\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//\\t等同于\")]),t._v(\"\\nbar\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\".\")]),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"apply\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"foo\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" arguments\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),s(\"h2\",{attrs:{id:\"尾调用优化\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#尾调用优化\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 尾调用优化\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"尾调用：函数的最后一步调用其他函数\")])]),t._v(\" \"),s(\"p\",[t._v(\"在不再用到外部函数内部变量的情况下，会去掉外层函数的调用帧，只保留最后一个执行函数的调用帧，大大减少内存的使用量\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"尾递归优化\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-javascript extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[s(\"code\",[s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//\\t计算阶乘\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"factorial\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"if\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"\\n  \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" n \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"factorial\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//\\t上面这种方法会一直保留上一调用帧的变量，非常耗费内存，进过尾递归优化之后变成：\")]),t._v(\"\\n\\n\"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"f\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" total\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"if\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" total\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),s(\"span\",{attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token function\"}},[t._v(\"f\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),s(\"span\",{attrs:{class:\"token number\"}},[t._v(\"1\")]),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" n \"),s(\"span\",{attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" total\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"//\\t把变量放到下一调用帧，删除上一调用帧，节省内存开销\")]),t._v(\"\\n\"),s(\"span\",{attrs:{class:\"token comment\"}},[t._v(\"// 练习：使用尾递归优化计算斐波拉切竖列前n项和\")]),t._v(\"\\n\")])])]),s(\"ul\",[s(\"li\",[t._v(\"递归函数的改写\")])]),t._v(\" \"),s(\"p\",[t._v(\"确保最后一步调用自身，把中间变量改写成函数的参数，就像上面例子中的 total\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"尾调用优化只在严格模式下起作用，是因为正常模式通过\"),s(\"code\",[t._v(\"func.arguments``func.caller\")]),t._v(\" 跟踪函数的调用栈，在严格模式下，这两个变量会失真，自然就减少了函数的调用栈，也就实现不了函数的尾调用优化\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"函数参数的尾逗号\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#函数参数的尾逗号\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 函数参数的尾逗号\")]),t._v(\" \"),s(\"p\",[t._v(\"为了在参数写成多行的时候，增加参数在上一行多加一个逗号，那么上一行也会被视为版本发生了变动，这看上去有点冗余，所以\"),s(\"code\",[t._v(\"es6\")]),t._v(\"允许在函数最后一个参数后面可以加上逗号，保持一致性\")])])}],!1,null,null,null);v.options.__file=\"function.md\";a.default=v.exports}}]);","extractedComments":[]}