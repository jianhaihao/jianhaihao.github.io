{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{215:function(t,e,n){\"use strict\";n.r(e);var i=n(0),s=Object(i.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n(\"div\",{staticClass:\"content\"},[t._m(0),t._v(\" \"),t._m(1),t._v(\" \"),n(\"p\",[t._v(\"栈的应用：\")]),t._v(\" \"),t._m(2),t._v(\" \"),t._m(3),t._v(\" \"),n(\"p\",[t._v(\"ArrayStack\"),n(\"E\")],1),t._v(\" \"),t._m(4),t._v(\" \"),t._m(5)])},[function(){var t=this.$createElement,e=this._self._c||t;return e(\"h1\",{attrs:{id:\"栈\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#栈\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 栈\")])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"blockquote\",[e(\"p\",[this._v(\"栈也是一种线性结构\\n相比数组，栈对应的操作是数组的子集\\n只能从一端添加元素，也只能从一端取出元素，这一端称为栈顶\\n栈是一种先进后出的数据结构，Last In First Out (LIFO)\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"blockquote\",[e(\"p\",[this._v(\"undo 操作 - 编辑器\\n系统调用栈 - 操作系统\\n括号匹配 - 编译器\")])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"h2\",{attrs:{id:\"栈的复杂度分析\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#栈的复杂度分析\",\"aria-hidden\":\"true\"}},[this._v(\"#\")]),this._v(\" 栈的复杂度分析\")])},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n(\"blockquote\",[n(\"ul\",[n(\"li\",[t._v(\"void push(E)     O(1) 均摊\")]),t._v(\" \"),n(\"li\",[t._v(\"E pop()          O(1) 均摊\")]),t._v(\" \"),n(\"li\",[t._v(\"E peek()         O(1)\")]),t._v(\" \"),n(\"li\",[t._v(\"int getSize()    O(1)\")]),t._v(\" \"),n(\"li\",[t._v(\"boolean isEmpty  O(1)\")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e(\"blockquote\",[e(\"p\",[this._v(\"栈顶元素反映了在嵌套的层次关系中，最近的需要匹配的元素\")])])}],!1,null,null,null);s.options.__file=\"stack.md\";e.default=s.exports}}]);","extractedComments":[]}