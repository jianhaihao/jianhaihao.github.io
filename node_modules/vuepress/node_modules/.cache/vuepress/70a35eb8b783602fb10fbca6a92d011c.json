{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/path.md?vue&type=template&id=abc956bc&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/path.md","mtime":1537408168000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"path-模块\\\"><a href=\\\"#path-模块\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> path 模块</h1> <p>提供一些操作文件和目录的函数，某些函数在 windows 和 POSIX 上的返回会有所不同</p> <blockquote><p><code>POSIX</code>表示可移植操作系统接口（Portable Operating System Interface of UNIX，缩写为 POSIX</p></blockquote> <p><strong>path.basename(path[, ext])</strong></p> <p>返回一个<code>path</code>的最后一部分，没有尾部文件分割符</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">basename</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/bar/foo/q.html'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>  <span class=\\\"token comment\\\">// q.html</span>\\npath<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">basename</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/bar/foo/q.html'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'.html'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// q</span>\\n</code></pre></div><p><strong>path.delimiter</strong></p> <p>返回系统的分隔符</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>path<span class=\\\"token punctuation\\\">.</span>delimiter <span class=\\\"token comment\\\">// ; Windows</span>\\npath<span class=\\\"token punctuation\\\">.</span>delimiter <span class=\\\"token comment\\\">// : POSIX</span>\\n</code></pre></div><p><strong>path.dirname(path)</strong></p> <p>返回一个<code>path</code>的目录名</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dirname</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/bar/foo/a.html'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// /bar/foo</span>\\n</code></pre></div><p>如果<code>path</code>不是一个字符串，则抛出<code>TypeError</code></p> <p><strong>path.extname(path)</strong></p> <p>返回<code>path</code>的扩展名，即最后一个<code>.</code>到字符串结尾的部分，如果第<code>path</code>中唯一一个<code>.</code>在字符串开头或者没有<code>.</code>，返回空字符串</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">extname</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/bar/foo/a.html'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// .html</span>\\n</code></pre></div><p><strong>path.format(pathObject)</strong></p> <p>将一个<code>pathObject</code>转换成路径字符串返回</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>pathObject <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  dir<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n  root<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n  base<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n  name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n  ext<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre></div><p>这些属性会有优先级关系存在</p> <ul><li>如果有<code>pathObject.dir</code>存在，<code>pathObject.root</code>属性会失效</li> <li>如果有<code>pathObject.base</code>存在，<code>pathObject.name</code>和<code>pathObject.ext</code>属性会失效</li></ul> <p><strong>path.isAbsolute(path)</strong></p> <p>判断<code>path</code>是否是一个绝对路径</p> <p><strong>path.join([...paths])</strong></p> <p>利用操作系统的分隔符将多个<code>path</code>拼接起来，生成一个规范的路径</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// 'a/b/c'</span>\\npath<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">join</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'b'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'c'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'..'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// 'a/b'</span>\\n</code></pre></div><p><strong>path.normalize(path)</strong></p> <p>规范化给定的<code>path</code></p> <ul><li>POSIX</li></ul> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/bar//foo/a/b/..'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// '/bar/foo/a'</span>\\n</code></pre></div><ul><li>windows</li></ul> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'c:\\\\\\\\bar\\\\\\\\foo\\\\\\\\..\\\\\\\\\\\\\\\\a'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// 'c:\\\\\\\\bar\\\\a'</span>\\n</code></pre></div><p><strong>path.parse(path)</strong></p> <p>返回一个<code>pathObject</code>对象，元素表示<code>path</code></p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>┌─────────────────────┬────────────┐\\n│          dir        │    base    │\\n├──────┬              ├──────┬─────┤\\n│ root │              │ name │ ext │\\n<span class=\\\"token string\\\">&quot;  /    home/user/dir / file  .txt &quot;</span>\\n└──────┴──────────────┴──────┴─────┘\\n</code></pre></div><p><strong>path.posix</strong></p> <p>提供<code>path</code>针对 POSIX 的实现</p> <p><strong>path.relative(from, to)</strong></p> <p>返回从<code>from</code>到<code>to</code>的相对路径</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">relative</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/bar/foo/a/b'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'/bar/c'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// '../../../c'</span>\\n</code></pre></div><p><strong>path.resolve([...paths])</strong></p> <p>把一个路径或者路径片段解析为绝对路径，从右向左解析，直到构成一个完成的绝对路径，如果最后全部处理完不是一个绝对路径，则当前的工作目录会被用上，末尾的斜杠会被删除，如果没有参数，则返回当前工作目录</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/dir'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'foo'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// '/dir/foo/a'</span>\\npath<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'/dir'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'/foo'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'a'</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\">// '/foo/a'</span>\\n</code></pre></div><p><strong>path.sep</strong></p> <p>返回操作系统的路径片段分隔符</p> <ul><li>POSIX 返回<code>/</code></li> <li>Windows 返<code>\\\\</code></li></ul> <p><strong>path.toNamespacedPath(path)</strong></p> <p>仅仅在 Windows 上使用</p> <p><strong>path.win32</strong></p> <p>提供了<code>path</code>针对 Windows 的实现</p>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}