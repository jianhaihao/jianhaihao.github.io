{"remainingRequest":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\Products\\jianhaihao.github.io\\docs\\linux\\demo2.md?vue&type=template&id=4e0efae2&","dependencies":[{"path":"D:\\Products\\jianhaihao.github.io\\docs\\linux\\demo2.md","mtime":1552483032809},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1552483045256},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1552483045254},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1552483045520}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"搭建linux应用\"><a class=\"header-anchor\" href=\"#搭建linux应用\" aria-hidden=\"true\">#</a> 搭建Linux应用</h1>\n<p>工具：<code>yum</code> <code>docker</code><br>\n服务端：<code>swoft</code><br>\n应用端：<code>yii2.0</code></p>\n<h2 id=\"安装基础组件\"><a class=\"header-anchor\" href=\"#安装基础组件\" aria-hidden=\"true\">#</a> 安装基础组件</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\nyum update\n\nyum -y <span class=\"token function\">install</span> lrzsz   <span class=\"token comment\"># 安装rz/sz命令</span>\n\nyum -y <span class=\"token function\">install</span> <span class=\"token function\">git</span>  <span class=\"token comment\"># 安装git</span>\n\n<span class=\"token comment\"># 安装 composer</span>\n<span class=\"token function\">curl</span> -sS https://getcomposer.org/installer <span class=\"token operator\">|</span> php   <span class=\"token comment\"># 下载 composer.phar 文件（注意要关闭翻墙）</span>\n\n<span class=\"token function\">mv</span> composer.phar /usr/local/bin/composer   <span class=\"token comment\"># 设置为全局可访问</span>\n\n<span class=\"token comment\"># 如果报错以下问题</span>\n/usr/bin/env: php: No such <span class=\"token function\">file</span> or directory\n<span class=\"token comment\"># 执行下面命令</span>\n<span class=\"token function\">ln</span> -s /home/php/bin/php /usr/local/bin/php   <span class=\"token comment\"># 将php的实际安装目录指向/usr/local/bin/php</span>\n\ncomposer -v    <span class=\"token comment\"># 查看composer版本，确定是否安装成功</span>\n\ncomposer selfupdate   <span class=\"token comment\"># 升级composer</span>\n\n<span class=\"token comment\"># 更换composer镜像源:</span>\ncomposer config -g repo.packagist composer https://packagist.laravel-china.org\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"安装php7\"><a class=\"header-anchor\" href=\"#安装php7\" aria-hidden=\"true\">#</a> 安装php7</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token comment\"># 如果之前已经安装我们先卸载一下</span>\nyum -y remove php*\n\n<span class=\"token comment\"># 更改yum源</span>\nrpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \nrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\n\n<span class=\"token comment\"># 安装php72w和各种拓展</span>\nyum -y <span class=\"token function\">install</span> php72w php72w-cli php72w-common php72w-devel php72w-embedded php72w-fpm php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml\n\n<span class=\"token comment\"># 查看当前php版本</span>\nphp -v\n\n<span class=\"token comment\"># 开启php-fpm</span>\nsystemctl start php-fpm\n<span class=\"token comment\"># 关闭php-fpm</span>\nsystemctl stop php-fpm\n<span class=\"token comment\"># 重启php-fpm</span>\nsystemctl restart php-fpm\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"安装nginx\"><a class=\"header-anchor\" href=\"#安装nginx\" aria-hidden=\"true\">#</a> 安装nginx</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token comment\"># 添加yum源</span>\nrpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\n\nyum <span class=\"token function\">install</span> -y nginx\n\n<span class=\"token comment\"># 启动Nginx并设置开机自动运行</span>\nsystemctl start nginx.service\nsystemctl <span class=\"token function\">enable</span> nginx.service\n\n<span class=\"token comment\"># 开启nginx</span>\nsystemctl start nginx\n<span class=\"token comment\"># 关闭nginx</span>\nsystemctl stop nginx\n<span class=\"token comment\"># 重启nginx</span>\nsystemctl restart nginx\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"安装mysql\"><a class=\"header-anchor\" href=\"#安装mysql\" aria-hidden=\"true\">#</a> 安装mysql</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token comment\"># 添加yum源</span>\nrpm -Uvh http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm\n\nyum <span class=\"token function\">install</span> mysql-community-server\n\n<span class=\"token comment\"># 启动mysql服务</span>\n<span class=\"token function\">service</span> mysqld start\n\n<span class=\"token comment\"># 第一次启动后，mysql5.7会生成一个随机root密码，并放到了/var/log/mysqld.log日志中</span>\n<span class=\"token comment\"># 使用 grep 'temporary password'  /var/log/mysqld.log 这个命令读取root初始密码</span>\n2018-11-26T15:08:41.595259Z 1 <span class=\"token punctuation\">[</span>Note<span class=\"token punctuation\">]</span> A temporary password is generated <span class=\"token keyword\">for</span> root@localhost: owMP7Z<span class=\"token punctuation\">(</span>obmB-\n<span class=\"token comment\"># 初始密码为 owMP7Z(obmB-</span>\n\n<span class=\"token comment\"># 使用 mysql -u root -p 然后输入上面的密码进入</span>\nALTER USER USER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> IDENTIFIED BY <span class=\"token string\">'123456'</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 修改登录的用户密码改成123456</span>\n<span class=\"token comment\"># mysql5.7默认对密码进行强校验，建议设置为一个较为复杂的密码，否则会报错</span>\n\n<span class=\"token comment\"># mysql5.7密码校验</span>\n<span class=\"token comment\"># 0 or LOW\tLength</span>\n<span class=\"token comment\"># 1 or MEDIUM\tLength; numeric, lowercase/uppercase, and special characters</span>\n<span class=\"token comment\"># 2 or STRONG\tLength; numeric, lowercase/uppercase, and special characters; dictionary file</span>\n<span class=\"token comment\"># (默认validate_password_policy = 1)</span>\n\n<span class=\"token comment\"># 如果需要把密码设置的简单一些，执行以下命令：</span>\n<span class=\"token keyword\">set</span> global validate_password_policy<span class=\"token operator\">=</span>0<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 设置简单的密码：</span>\nALTER USER USER<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> IDENTIFIED BY <span class=\"token string\">'12345678'</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\"># 默认需要密码长度为8位</span>\n\n<span class=\"token comment\"># 如需再次进入mysql, 重新设置密码</span>\n\n<span class=\"token comment\"># 切换到mysql数据表</span>\nuse mysql\n<span class=\"token comment\"># 修改密码</span>\nupdate mysql.user <span class=\"token keyword\">set</span> authentication_string<span class=\"token operator\">=</span>PASSWORD<span class=\"token punctuation\">(</span><span class=\"token string\">'12345678'</span><span class=\"token punctuation\">)</span> where user<span class=\"token operator\">=</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\"># 修改密码后，需要重新启动mysql，新密码才会生效</span>\n\n<span class=\"token comment\"># 重启mysql服务</span>\n<span class=\"token function\">service</span> mysqld stop\n<span class=\"token function\">service</span> mysqld start\n\n<span class=\"token comment\"># 设置外网可访问</span>\nuse mysql<span class=\"token punctuation\">;</span>\nupdate user <span class=\"token keyword\">set</span> host <span class=\"token operator\">=</span> <span class=\"token string\">'%'</span> where user <span class=\"token operator\">=</span> <span class=\"token string\">'root'</span><span class=\"token punctuation\">;</span> \n<span class=\"token keyword\">select</span> host,user from user<span class=\"token punctuation\">;</span> \nflush privileges<span class=\"token punctuation\">;</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"安装docker\"><a class=\"header-anchor\" href=\"#安装docker\" aria-hidden=\"true\">#</a> 安装docker</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token comment\"># 移除旧的版本：</span>\n<span class=\"token function\">sudo</span> yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine\n\n<span class=\"token comment\"># 安装一些必要的系统工具：</span>\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y yum-utils device-mapper-persistent-data lvm2\n\n<span class=\"token comment\"># 添加软件源信息：</span>\n<span class=\"token function\">sudo</span> yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n<span class=\"token comment\"># 更新 yum 缓存：</span>\n<span class=\"token function\">sudo</span> yum makecache fast\n\n<span class=\"token comment\"># 安装 Docker-ce：</span>\n<span class=\"token function\">sudo</span> yum -y <span class=\"token function\">install</span> docker-ce\n\n<span class=\"token comment\"># 启动 Docker 后台服务</span>\n<span class=\"token function\">sudo</span> systemctl start docker\n\n<span class=\"token comment\"># 镜像加速</span>\n<span class=\"token function\">vi</span> /etc/docker/daemon.json     <span class=\"token comment\"># 如没有该文件，请先新建一个</span>\n\n<span class=\"token comment\"># 新建daemon.json文件</span>\n<span class=\"token comment\">###############################################################</span>\n<span class=\"token function\">cd</span> /etc/docker/\n<span class=\"token function\">touch</span> daemon.json\n<span class=\"token comment\">###############################################################</span>\n\n<span class=\"token comment\"># 文件内容</span>\n<span class=\"token comment\">###############################################################</span>\n<span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"registry-mirrors\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"http://hub-mirror.c.163.com\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">###############################################################</span>\n\n<span class=\"token comment\"># 如需删除Docker CE，执行以下命令</span>\n<span class=\"token function\">sudo</span> yum remove docker-ce\n<span class=\"token function\">sudo</span> <span class=\"token function\">rm</span> -rf /var/lib/docker\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"安装swoft\"><a class=\"header-anchor\" href=\"#安装swoft\" aria-hidden=\"true\">#</a> 安装swoft</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\ndocker pull swoft/swoft\n\ndocker run -p 8080:80 --name swoft  --rm -d swoft/swoft:latest\n\n<span class=\"token comment\"># 拷贝容器文件到本地</span>\n<span class=\"token function\">cd</span> /home/\ndocker <span class=\"token function\">cp</span> swoft:/var/www/swoft <span class=\"token keyword\">.</span>  <span class=\"token comment\"># 注意点号，表示拷贝到当前目录</span>\n\n<span class=\"token comment\"># 从本地文件运行swoft容器：</span>\ndocker run -p 8080:80 --name swoft -v /home/swoft/:/var/www/swoft --rm -d swoft/swoft:latest\n\ndocker run -p 8080:80 --name swoft -v /home/WancllMS-Server/swoft/:/var/www/swoft --rm -d swoft/swoft:latest\n\n<span class=\"token comment\"># 查看运行的容器</span>\ndocker <span class=\"token function\">ps</span>\n\n<span class=\"token comment\"># 停止容器</span>\ndocker stop swoft\n\n<span class=\"token comment\"># 重启容器</span>\ndocker restart swoft\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"配置nginx虚拟机\"><a class=\"header-anchor\" href=\"#配置nginx虚拟机\" aria-hidden=\"true\">#</a> 配置nginx虚拟机</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token comment\"># 配置Http</span>\n\nserver <span class=\"token punctuation\">{</span>\n    listen 80<span class=\"token punctuation\">;</span>\n    server_name www.demo.com<span class=\"token punctuation\">;</span>\n    root   /home/demo/yii/web/<span class=\"token punctuation\">;</span>\n\n    location / <span class=\"token punctuation\">{</span>\n        index index.html index.htm index.php<span class=\"token punctuation\">;</span>\n        autoindex off<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>-e <span class=\"token variable\">$request_filename</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            rewrite  ^<span class=\"token punctuation\">(</span>.*<span class=\"token punctuation\">)</span>$  /index.php?s<span class=\"token operator\">=</span>/<span class=\"token variable\">$1</span>  last<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    location ~ \\.php<span class=\"token punctuation\">(</span>.*<span class=\"token punctuation\">)</span>$ <span class=\"token punctuation\">{</span>\n        fastcgi_pass 127.0.0.1:9000<span class=\"token punctuation\">;</span>\n        fastcgi_index index.php<span class=\"token punctuation\">;</span>\n        fastcgi_split_path_info ^<span class=\"token punctuation\">((</span>?U<span class=\"token punctuation\">)</span>.+\\.php<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>/?.+<span class=\"token punctuation\">)</span>$<span class=\"token punctuation\">;</span>\n        fastcgi_param SCRIPT_FILENAME <span class=\"token variable\">$document_root</span><span class=\"token variable\">$fastcgi_script_name</span><span class=\"token punctuation\">;</span>\n        fastcgi_param PATH_INFO <span class=\"token variable\">$fastcgi_path_info</span><span class=\"token punctuation\">;</span>\n        fastcgi_param PATH_TRANSLATED <span class=\"token variable\">$document_root</span><span class=\"token variable\">$fastcgi_path_info</span><span class=\"token punctuation\">;</span>\n        include  fastcgi_params<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">#############################分割线##################################</span>\n\n<span class=\"token comment\"># 配置Https</span>\n\nserver <span class=\"token punctuation\">{</span>\n    listen 80<span class=\"token punctuation\">;</span>\n    server_name www.demo.com<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> 301 https://<span class=\"token variable\">$server_name</span><span class=\"token variable\">$request_uri</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span>\n\nserver <span class=\"token punctuation\">{</span>\n    listen 443<span class=\"token punctuation\">;</span>\n    server_name www.demo.com<span class=\"token punctuation\">;</span>\n    root   /home/demo/yii/web/<span class=\"token punctuation\">;</span>\n\n    ssl on<span class=\"token punctuation\">;</span>\n    ssl_certificate  /etc/nginx/ssl/1_www.demo.com_bundle.crt<span class=\"token punctuation\">;</span>\n    ssl_certificate_key  /etc/nginx/ssl/2_www.demo.com.key<span class=\"token punctuation\">;</span>\n\n    location / <span class=\"token punctuation\">{</span>\n        index index.html index.htm index.php<span class=\"token punctuation\">;</span>\n        autoindex off<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>-e <span class=\"token variable\">$request_filename</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            rewrite  ^<span class=\"token punctuation\">(</span>.*<span class=\"token punctuation\">)</span>$  /index.php?s<span class=\"token operator\">=</span>/<span class=\"token variable\">$1</span>  last<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    location ~ \\.php<span class=\"token punctuation\">(</span>.*<span class=\"token punctuation\">)</span>$ <span class=\"token punctuation\">{</span>\n        fastcgi_pass 127.0.0.1:9000<span class=\"token punctuation\">;</span>\n        fastcgi_index index.php<span class=\"token punctuation\">;</span>\n        fastcgi_split_path_info ^<span class=\"token punctuation\">((</span>?U<span class=\"token punctuation\">)</span>.+\\.php<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>/?.+<span class=\"token punctuation\">)</span>$<span class=\"token punctuation\">;</span>\n        fastcgi_param SCRIPT_FILENAME <span class=\"token variable\">$document_root</span><span class=\"token variable\">$fastcgi_script_name</span><span class=\"token punctuation\">;</span>\n        fastcgi_param PATH_INFO <span class=\"token variable\">$fastcgi_path_info</span><span class=\"token punctuation\">;</span>\n        fastcgi_param PATH_TRANSLATED <span class=\"token variable\">$document_root</span><span class=\"token variable\">$fastcgi_path_info</span><span class=\"token punctuation\">;</span>\n        include  fastcgi_params<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"设置文件权限\"><a class=\"header-anchor\" href=\"#设置文件权限\" aria-hidden=\"true\">#</a> 设置文件权限</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token comment\"># 修改文件上传权限</span>\n<span class=\"token function\">cd</span> /home/demo/yii/web/\n<span class=\"token function\">chmod</span> 757 uploads\n\n<span class=\"token comment\"># 修改缓存文件权限</span>\n<span class=\"token function\">cd</span> /home/demo/yii/runtime/\n<span class=\"token function\">chmod</span> 757 cache\n\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}