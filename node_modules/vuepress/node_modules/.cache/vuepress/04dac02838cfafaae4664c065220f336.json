{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/php/attention.md?vue&type=template&id=876c3288&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/php/attention.md","mtime":1543729482862},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543635518223},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1543635521090},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543635518223},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1543635521089},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1543635521178}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"php注意事项\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#php注意事项\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" PHP注意事项\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"尽量静态化\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#尽量静态化\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 尽量静态化\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"如果函数可以静态化，就尽量静态化\"),\n        _c(\"br\"),\n        _vm._v(\"\\n区别主要体现是内存的处理上:\"),\n        _c(\"br\"),\n        _vm._v(\n          \"\\n静态方法在程序开始的时候分配内存，而实例方法在实例化的时候才会分配内存\"\n        ),\n        _c(\"br\"),\n        _vm._v(\"\\n静态方法可以直接调用，而实例方法要先生成实例，在通过实例调用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [_c(\"p\", [_vm._v(\"静态方法过多，会占用内存\")])]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"echo-vs-print\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#echo-vs-print\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" echo VS print\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"echo的性能高于print，因为echo没有返回值，而print返回一个整型\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [_vm._v(\"echo 大字符串的时候需要在服务器进行对应的配置\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"echo-多个字符串\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#echo-多个字符串\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" echo 多个字符串\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"echo 多个字符串是采用\"),\n        _c(\"code\", [_vm._v(\",\")]),\n        _vm._v(\"代替\"),\n        _c(\"code\", [_vm._v(\".\")]),\n        _vm._v(\"来连接字符串\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"错误屏蔽\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#错误屏蔽\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" @ 错误屏蔽\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"用 @ 掩盖错误会降低脚本运行速度，特别是不要在循环中使用@\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"row-‘id’-row-id-row-1\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#row-‘id’-row-id-row-1\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" $row[‘id’] & $row[id] & $row[1]\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"'id'\")]),\n        _vm._v(\"会直接查找key为\"),\n        _c(\"code\", [_vm._v(\"'id'\")]),\n        _vm._v(\"的值，而没有引号如变量、常量在解析的时候会先判断类型在取值\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"isset-empty\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#isset-empty\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" isset() & empty()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"isset()是测试变量是否被赋值\"),\n        _c(\"br\"),\n        _vm._v(\n          \"\\nempty()是测试变量是否为空，该变量已经赋值。如果变量没被赋值就引用是被允许的,但会有notice提示\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"如果变量被赋予空值 \"),\n        _c(\"code\", [_vm._v('$t = \"\";')]),\n        _vm._v(\" \"),\n        _c(\"code\", [_vm._v(\"$t = 0;\")]),\n        _vm._v(\" \"),\n        _c(\"code\", [_vm._v(\"$t = false;\")]),\n        _vm._v(\"，\"),\n        _c(\"code\", [_vm._v(\"empty($t)\")]),\n        _vm._v(\"返回真，\"),\n        _c(\"code\", [_vm._v(\"isset($t)\")]),\n        _vm._v(\"也返回真\"),\n        _c(\"br\"),\n        _vm._v(\"\\n如果要注销一个变量采用 \"),\n        _c(\"code\", [_vm._v(\"unset($t)\")]),\n        _vm._v(\" \"),\n        _c(\"code\", [_vm._v(\"$t = NULL\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"循环前确认最大次数\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#循环前确认最大次数\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 循环前确认最大次数\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在执行for循环前确认最大字数，不要每次循环的时候都重新计算最大值\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 不要这样做\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"for\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$i\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\"0\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$i\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<=\")]),\n            _vm._v(\"count\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$array\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$i\")]),\n            _vm._v(\"++\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 应该这样做\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$len\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" count\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$array\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"for\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$i\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\"0\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$i\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<=\")]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$len\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$i\")]),\n            _vm._v(\"++\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"不要随便复制变量\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#不要随便复制变量\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 不要随便复制变量\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"把变量复制到另一个变量会增加一倍的内存消耗\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"if-else-switch-case\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#if-else-switch-case\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" if else & switch case\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"switch case好于使用多个if，else if语句，并且代码更加容易阅读和维护\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"并不是事必面向对象\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#并不是事必面向对象\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 并不是事必面向对象\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"面向对象往往开销很大，每个方法和对象的调用都会消耗内存\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"不要把方法细分得过多\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#不要把方法细分得过多\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 不要把方法细分得过多\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"每个方法的调用都会消耗内存\")]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"尽量采用的PHP内置函数\"),\n          _c(\"br\"),\n          _vm._v(\"\\n循环内部不要声明变量，尤其是大变量：对象\"),\n          _c(\"br\"),\n          _vm._v(\n            \"\\n销毁变量释放内存，特别是大的数组\\n字符串函数代替正则表达式\\nsplit比exploade快\"\n          )\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}