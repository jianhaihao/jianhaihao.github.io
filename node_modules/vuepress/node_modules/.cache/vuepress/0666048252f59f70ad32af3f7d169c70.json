{"remainingRequest":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\Products\\jianhaihao.github.io\\docs\\php\\design_pattern.md?vue&type=template&id=12000ebe&","dependencies":[{"path":"D:\\Products\\jianhaihao.github.io\\docs\\php\\design_pattern.md","mtime":1553181076784},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1552483045256},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1552483045254},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1552483045520}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"php设计模式\"><a class=\"header-anchor\" href=\"#php设计模式\" aria-hidden=\"true\">#</a> PHP设计模式</h1>\n<h2 id=\"类自动载入\"><a class=\"header-anchor\" href=\"#类自动载入\" aria-hidden=\"true\">#</a> 类自动载入</h2>\n<blockquote>\n<p>目录结构：<br>\n/root/test.php<br>\n/root/Test1.php<br>\n/root/Test2.php</p>\n</blockquote>\n<p><code>写法1</code></p>\n<!--beforebegin--><div class=\"language-php extra-class\"><!--afterbegin--><pre v-pre class=\"language-php\"><code>\nTest1<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nTest2<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">__autoload</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$class</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">require</span> <span class=\"token constant\">__DIR__</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'/'</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$class</span> <span class=\"token class-name\"><span class=\"token punctuation\">.</span></span> <span class=\"token single-quoted-string string\">'.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 弊端：多个框架__autoload函数使用时不能重复定义</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><code>写法2</code></p>\n<p>php5.3之后引入了<code>spl_autoload_register</code>函数</p>\n<!--beforebegin--><div class=\"language-php extra-class\"><!--afterbegin--><pre v-pre class=\"language-php\"><code>\n<span class=\"token function\">spl_autoload_register</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'autoload1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">spl_autoload_register</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'autoload2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nTest1<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nTest2<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">autoload1</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$class</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">require</span> <span class=\"token constant\">__DIR__</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'/'</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$class</span> <span class=\"token class-name\"><span class=\"token punctuation\">.</span></span> <span class=\"token single-quoted-string string\">'.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">autoload2</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$class</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">require</span> <span class=\"token constant\">__DIR__</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">'/'</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$class</span> <span class=\"token class-name\"><span class=\"token punctuation\">.</span></span> <span class=\"token single-quoted-string string\">'.php'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"psr-0规范\"><a class=\"header-anchor\" href=\"#psr-0规范\" aria-hidden=\"true\">#</a> PSR-0规范</h2>\n<ol>\n<li>命名空间必须与绝对路径一致</li>\n<li>类名首字母必须大写</li>\n<li>除入口文件外，其他&quot;.php&quot;必须只有一个类</li>\n</ol>\n<h2 id=\"spl标准库\"><a class=\"header-anchor\" href=\"#spl标准库\" aria-hidden=\"true\">#</a> SPL标准库</h2>\n<p><code>栈</code></p>\n<!--beforebegin--><div class=\"language-php extra-class\"><!--afterbegin--><pre v-pre class=\"language-php\"><code>\n<span class=\"token variable\">$stack</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SplStack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 入栈</span>\n<span class=\"token variable\">$stack</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'data1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 出栈</span>\n<span class=\"token variable\">$stack</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><code>队列</code></p>\n<!--beforebegin--><div class=\"language-php extra-class\"><!--afterbegin--><pre v-pre class=\"language-php\"><code>\n<span class=\"token variable\">$queue</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SplQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 入队列</span>\n<span class=\"token variable\">$queue</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">enqueue</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'data1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 出队列</span>\n<span class=\"token variable\">$queue</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">dequeue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><code>堆</code></p>\n<!--beforebegin--><div class=\"language-php extra-class\"><!--afterbegin--><pre v-pre class=\"language-php\"><code>\n<span class=\"token variable\">$heap</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SplMinHeap</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 入堆</span>\n<span class=\"token variable\">$heap</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'data1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 出堆</span>\n<span class=\"token variable\">$heap</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">extract</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><code>固定长度的数组</code></p>\n<!--beforebegin--><div class=\"language-php extra-class\"><!--afterbegin--><pre v-pre class=\"language-php\"><code>\n<span class=\"token variable\">$array</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SplFixedArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"链式操作\"><a class=\"header-anchor\" href=\"#链式操作\" aria-hidden=\"true\">#</a> 链式操作</h2>\n<p>返回当前实例</p>\n<!--beforebegin--><div class=\"language-php extra-class\"><!--afterbegin--><pre v-pre class=\"language-php\"><code>\n<span class=\"token comment\">/**\n * demo\n */</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Database</span>\n<span class=\"token punctuation\">{</span>\n\t\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">where</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$where</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">order</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$order</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">function</span> <span class=\"token function\">limit</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$limit</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token variable\">$this</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}