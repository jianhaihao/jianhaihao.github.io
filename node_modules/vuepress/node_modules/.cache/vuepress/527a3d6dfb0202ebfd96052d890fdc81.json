{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/querystring.md?vue&type=template&id=99e1b214&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/querystring.md","mtime":1537408168000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"querystring\\\"><a href=\\\"#querystring\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> querystring</h1> <blockquote><p>解析和格式化 url 查询字符串</p></blockquote> <p><strong>querystring.escape(str)</strong></p> <p>对给定的 str 进行 url 编码,不直接使用,提供给<code>querystring.stringify()</code>使用</p> <p><strong>querystring.parse(str[,sep[,eq[,options]]])</strong></p> <ul><li><code>str</code>要解析的字符串</li> <li><code>sep</code>用于界定查询字符串中键值对的字符串,默认为<code>&amp;</code></li> <li><code>eq</code>用于界定查询字符串中键与值的子字符串</li> <li><code>options</code> <ul><li><code>decodeURIComponent</code>解码查询字符串的字符所使用的函数,默认为<code>querystring.unescape()</code></li> <li><code>maxKeys</code>解析的最大键值对的数量</li></ul></li></ul> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> str <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'foo=bar&amp;abc=xyz&amp;abc=123'</span>\\n\\nquerystring<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">parse</span><span class=\\\"token punctuation\\\">(</span>str<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// {foo: 'bar', abc: ['xyz', '123']}</span>\\n</code></pre></div><p><strong>querystring.stringify(obj[,sep[,eq[,options]]])</strong></p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code>querystring<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">stringify</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> foo<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'bar'</span><span class=\\\"token punctuation\\\">,</span> baz<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'qux'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'quux'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> corge<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">''</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// 'foo=bar&amp;baz=qux&amp;baz=quux&amp;corge='</span>\\n</code></pre></div><p><strong>querystring.unescape(str)</strong></p> <p>对给定的<code>str</code>进行解码,不直接使用,提供给<code>querystring.parse()</code>使用</p>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}