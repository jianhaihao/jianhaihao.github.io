{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/event/event-model.md?vue&type=template&id=5987bd4a&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/event/event-model.md","mtime":1537408168000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"事件模型\"><a class=\"header-anchor\" href=\"#事件模型\" aria-hidden=\"true\">#</a> 事件模型</h1>\n<p>浏览器的事件模型，就是通过监听函数响应事件。事件发生后，浏览器监听到了这个时间，然后执行对应的监听函数，这是事件驱动编程模式的主要编程方式。</p>\n<p>JavaScript 有三种方式为事件绑定监听函数</p>\n<ul>\n<li>设置 HTML 元素的<code>on-</code>属性</li>\n<li>元素节点的事件属性</li>\n<li>通过节点的<code>addEventListener()</code>添加事件</li>\n</ul>\n<p><strong>this 的指向</strong></p>\n<p>监听函数内部的<code>this</code>指向触发事件的那个元素节点</p>\n<p><strong>事件的传播</strong></p>\n<p>一个事件发生后，会在子元素和父元素之间传播 (propagation)，分为三个阶段</p>\n<ul>\n<li>第一阶段：从<code>window</code>对象传导到目标节点（上层传底层），称为捕获阶段 (capture phase)</li>\n<li>第二阶段：从目标节点向上触发，称为目标阶段 (target phase)</li>\n<li>第三阶段：从目标阶段传导回<code>window</code>（从底层传回上层），称为冒泡阶段 (bubbling phase)</li>\n</ul>\n<p><strong>事件的代理</strong></p>\n<p>由于事件在传播的过程中会冒泡到父节点，因此可以把子节点的监听函数定义到父节点上面，由父节点统一监听处理多个子元素的事件，这种方式称为事件的代理</p>\n<p>可以通过<code>Event.stopPropagation()</code>方法阻止事件继续向下传播</p>\n<h2 id=\"参考\"><a class=\"header-anchor\" href=\"#参考\" aria-hidden=\"true\">#</a> 参考</h2>\n<p><a href=\"https://wangdoc.com/javascript/events/model.html\" target=\"_blank\" rel=\"noopener noreferrer\">网道（WangDoc.com）是一个文档网站，提供互联网开发文档<OutboundLink/></a></p>\n</div>\n",null]}