{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/string.md?vue&type=template&id=1b38462f&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/string.md","mtime":1537408168000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"字符串的扩展-2\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#字符串的扩展-2\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 字符串的扩展 (2)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"字符的-unicode-表示法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#字符的-unicode-表示法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 字符的 unicode 表示法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"JavaScript 利用\"),\n        _c(\"code\", [_vm._v(\"\\\\uxxxx\")]),\n        _vm._v(\"(UTF-16) 表示一个字符，\"),\n        _c(\"code\", [_vm._v(\"xxxx\")]),\n        _vm._v(\"表示 unicode 码点，一个字符包括两个字节，表示范围只能是\"),\n        _c(\"code\", [_vm._v(\"\\\\u0000\")]),\n        _vm._v(\"~\"),\n        _c(\"code\", [_vm._v(\"\\\\uFFFF\")]),\n        _vm._v(\"，如果超出\"),\n        _c(\"code\", [_vm._v(\"\\\\uFFFF\")]),\n        _vm._v(\"的范围， ES5 就利用双字符表示，也就是四个字节，比如 \"),\n        _c(\"code\", [_vm._v(\"\\\\uD842\\\\uDFB7\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"ES6 则支持将大于四位的码点放入大括号，可以当成一个字符识别，比如 \"\n        ),\n        _c(\"code\", [_vm._v(\"\\\\u{20BB7}\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"charpointat\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#charpointat\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" charPointAt()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\"因为扩展了字符的 unicode 表示法，所以字符串的\"),\n            _c(\"code\", [_vm._v(\"charAt()\")]),\n            _vm._v(\"和\"),\n            _c(\"code\", [_vm._v(\"charCodeAt()\")]),\n            _vm._v(\"方法会失真，在对码点大于\"),\n            _c(\"code\", [_vm._v(\"0xFFFF\")]),\n            _vm._v(\"的字符的时候，这两个方法会把它当作两个字符处理\")\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\"ES6 新增了\"),\n            _c(\"code\", [_vm._v(\"charPointAt()\")]),\n            _vm._v(\"方法，来正确识别\"),\n            _c(\"code\", [_vm._v(\"4\")]),\n            _vm._v(\"个字节储存的字符\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n            _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n              _c(\"code\", [\n                _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n                  _vm._v(\"let\")\n                ]),\n                _vm._v(\" s \"),\n                _c(\"span\", { attrs: { class: \"token operator\" } }, [\n                  _vm._v(\"=\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { attrs: { class: \"token string\" } }, [\n                  _vm._v(\"'𠮷a'\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\";\")\n                ]),\n                _vm._v(\"\\n\\ns\"),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\".\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token function\" } }, [\n                  _vm._v(\"codePointAt\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\"(\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"0\")]),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\")\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                  _vm._v(\"// 134071\")\n                ]),\n                _vm._v(\"\\ns\"),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\".\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token function\" } }, [\n                  _vm._v(\"codePointAt\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\"(\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"1\")]),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\")\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                  _vm._v(\"// 57271\")\n                ]),\n                _vm._v(\"\\n\\ns\"),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\".\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token function\" } }, [\n                  _vm._v(\"codePointAt\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\"(\")\n                ]),\n                _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"2\")]),\n                _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                  _vm._v(\")\")\n                ]),\n                _vm._v(\" \"),\n                _c(\"span\", { attrs: { class: \"token comment\" } }, [\n                  _vm._v(\"// 97\")\n                ]),\n                _vm._v(\"\\n\")\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"上面代码中，JavaScript 会把\"),\n        _c(\"code\", [_vm._v(\"𠮷a\")]),\n        _vm._v(\"视为三个字符，\"),\n        _c(\"code\", [_vm._v(\"charPointAt(0)\")]),\n        _vm._v(\" 正确识别了\"),\n        _c(\"code\", [_vm._v(\"𠮷\")]),\n        _vm._v(\"的码点，\"),\n        _c(\"code\", [_vm._v(\"charPointAt(1)\")]),\n        _vm._v(\" 则识别了\"),\n        _c(\"code\", [_vm._v(\"𠮷\")]),\n        _vm._v(\"字符后面两个字节的码点，\"),\n        _c(\"code\", [_vm._v(\"charPointAt(2)\")]),\n        _vm._v(\"则识别了\"),\n        _c(\"code\", [_vm._v(\"a\")]),\n        _vm._v(\"字符的码点\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"经过测试发现，上面的方法还是不正确的，表面上看在\"),\n          _c(\"code\", [_vm._v(\"𠮷a\")]),\n          _vm._v(\"中，\"),\n          _c(\"code\", [_vm._v(\"a\")]),\n          _vm._v(\" 字符在第二个位置，正确的位置序号应该是\"),\n          _c(\"code\", [_vm._v(\"1\")]),\n          _vm._v(\"，解决办法为使用 \"),\n          _c(\"code\", [_vm._v(\"for...of\")]),\n          _vm._v(\"循环，它可以正确识别 32 位的 UTF-16 字符\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"charPointAt(n)\")]),\n          _vm._v(\"返回的是十进制数据，可以通过\"),\n          _c(\"code\", [_vm._v(\"toString(16)\")]),\n          _vm._v(\"将其转换成 16 进制数据\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"string-fromcodepoint\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#string-fromcodepoint\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" String.fromCodePoint()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"ES5 提供的\"),\n          _c(\"code\", [_vm._v(\"fromCharCode()\")]),\n          _vm._v(\n            \"方法，用于从码点返回字符，但这个方法不能识别 32 位的 UTF-16 字符\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"ES6 新增的\"),\n          _c(\"code\", [_vm._v(\"String.fromCodePoint()\")]),\n          _vm._v(\"方法则解决了上述问题，与\"),\n          _c(\"code\", [_vm._v(\"charPointAt()\")]),\n          _vm._v(\"方法的作用正好相反，需要注意的是\"),\n          _c(\"code\", [_vm._v(\"fromCodePoint()\")]),\n          _vm._v(\"方法定义在\"),\n          _c(\"code\", [_vm._v(\"String\")]),\n          _vm._v(\"上面，而\"),\n          _c(\"code\", [_vm._v(\"charPointAt()\")]),\n          _vm._v(\"方法定义在字符串实例上面\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"字符串的遍历接口\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#字符串的遍历接口\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 字符串的遍历接口\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"可以使用\"),\n        _c(\"code\", [_vm._v(\"for...of\")]),\n        _vm._v(\"遍历字符串，并且可以正确识别 32 位的 UTF-16 的字符\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"at\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#at\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" at()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"替代 ES5 的\"),\n        _c(\"code\", [_vm._v(\"charAt()\")]),\n        _vm._v(\"方法，增加对  32 位的 UTF-16 的字符的识别\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"判断一个字符串是否包含在另外一个字符串内\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#判断一个字符串是否包含在另外一个字符串内\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 判断一个字符串是否包含在另外一个字符串内\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"indexOf\")]), _vm._v(\"ES5\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"includes\")]), _vm._v(\"ES6 返回布尔值\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"startsWith\")]),\n          _vm._v(\"ES6 返回布尔值\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"endWith\")]), _vm._v(\"ES6 返回布尔值\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"repeat\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#repeat\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" repeat()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"返回一个新的字符串，将原字符串重复n次\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'x'\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"repeat\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"3\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\t\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 'xxx'\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"padstart-padend\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#padstart-padend\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" padStart(), padEnd()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"字符串补齐\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'c'\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"padStart\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"4\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'ab'\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\t\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 'abac'\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"matchall\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#matchall\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" matchAll()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [_c(\"p\", [_vm._v(\"参见《正则表达式》\")])]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"字符串模版\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#字符串模版\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 字符串模版\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [_vm._v(\"反引号,大括号里面可以写任意表达式\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"let\")]),\n            _vm._v(\" name \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'Tom'\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token template-string\" } }, [\n              _c(\"span\", { attrs: { class: \"token string\" } }, [\n                _vm._v(\"`this is \")\n              ]),\n              _c(\"span\", { attrs: { class: \"token interpolation\" } }, [\n                _c(\n                  \"span\",\n                  {\n                    attrs: {\n                      class: \"token interpolation-punctuation punctuation\"\n                    }\n                  },\n                  [_vm._v(\"${\")]\n                ),\n                _vm._v(\"name\"),\n                _c(\n                  \"span\",\n                  {\n                    attrs: {\n                      class: \"token interpolation-punctuation punctuation\"\n                    }\n                  },\n                  [_vm._v(\"}\")]\n                )\n              ]),\n              _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"`\")])\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\t\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 'this is Tom'\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\n        \"h2\",\n        {\n          attrs: {\n            id: \"剩余内容：模板编译、标签模板、-string-raw-、模板字符串的限制\"\n          }\n        },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: {\n                href:\n                  \"#剩余内容：模板编译、标签模板、-string-raw-、模板字符串的限制\",\n                \"aria-hidden\": \"true\"\n              }\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\n            \" 剩余内容：模板编译、标签模板、 String.raw() 、模板字符串的限制\"\n          )\n        ]\n      )\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}