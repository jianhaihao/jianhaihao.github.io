{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/path.md?vue&type=template&id=5c8c5711&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/path.md","mtime":1537944817444},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537944820671}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"path-模块\"><a class=\"header-anchor\" href=\"#path-模块\" aria-hidden=\"true\">#</a> path 模块</h1>\n<p>提供一些操作文件和目录的函数，某些函数在 windows 和 POSIX 上的返回会有所不同</p>\n<blockquote>\n<p><code>POSIX</code>表示可移植操作系统接口（Portable Operating System Interface of UNIX，缩写为 POSIX</p>\n</blockquote>\n<p><strong>path.basename(path[, ext])</strong></p>\n<p>返回一个<code>path</code>的最后一部分，没有尾部文件分割符</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>path<span class=\"token punctuation\">.</span><span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bar/foo/q.html'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// q.html</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">basename</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bar/foo/q.html'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.html'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// q</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>path.delimiter</strong></p>\n<p>返回系统的分隔符</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>path<span class=\"token punctuation\">.</span>delimiter <span class=\"token comment\">// ; Windows</span>\npath<span class=\"token punctuation\">.</span>delimiter <span class=\"token comment\">// : POSIX</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>path.dirname(path)</strong></p>\n<p>返回一个<code>path</code>的目录名</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>path<span class=\"token punctuation\">.</span><span class=\"token function\">dirname</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bar/foo/a.html'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// /bar/foo</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>如果<code>path</code>不是一个字符串，则抛出<code>TypeError</code></p>\n<p><strong>path.extname(path)</strong></p>\n<p>返回<code>path</code>的扩展名，即最后一个<code>.</code>到字符串结尾的部分，如果第<code>path</code>中唯一一个<code>.</code>在字符串开头或者没有<code>.</code>，返回空字符串</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>path<span class=\"token punctuation\">.</span><span class=\"token function\">extname</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bar/foo/a.html'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// .html</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>path.format(pathObject)</strong></p>\n<p>将一个<code>pathObject</code>转换成路径字符串返回</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>pathObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  dir<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  root<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  base<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n  ext<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p>这些属性会有优先级关系存在</p>\n<ul>\n<li>如果有<code>pathObject.dir</code>存在，<code>pathObject.root</code>属性会失效</li>\n<li>如果有<code>pathObject.base</code>存在，<code>pathObject.name</code>和<code>pathObject.ext</code>属性会失效</li>\n</ul>\n<p><strong>path.isAbsolute(path)</strong></p>\n<p>判断<code>path</code>是否是一个绝对路径</p>\n<p><strong>path.join([...paths])</strong></p>\n<p>利用操作系统的分隔符将多个<code>path</code>拼接起来，生成一个规范的路径</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'a/b/c'</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'a/b'</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>path.normalize(path)</strong></p>\n<p>规范化给定的<code>path</code></p>\n<ul>\n<li>POSIX</li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>path<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bar//foo/a/b/..'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// '/bar/foo/a'</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><ul>\n<li>windows</li>\n</ul>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>path<span class=\"token punctuation\">.</span><span class=\"token function\">normalize</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c:\\\\bar\\\\foo\\\\..\\\\\\\\a'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 'c:\\\\bar\\a'</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>path.parse(path)</strong></p>\n<p>返回一个<code>pathObject</code>对象，元素表示<code>path</code></p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>┌─────────────────────┬────────────┐\n│          dir        │    base    │\n├──────┬              ├──────┬─────┤\n│ root │              │ name │ ext │\n<span class=\"token string\">\"  /    home/user/dir / file  .txt \"</span>\n└──────┴──────────────┴──────┴─────┘\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>path.posix</strong></p>\n<p>提供<code>path</code>针对 POSIX 的实现</p>\n<p><strong>path.relative(from, to)</strong></p>\n<p>返回从<code>from</code>到<code>to</code>的相对路径</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>path<span class=\"token punctuation\">.</span><span class=\"token function\">relative</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/bar/foo/a/b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/bar/c'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// '../../../c'</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>path.resolve([...paths])</strong></p>\n<p>把一个路径或者路径片段解析为绝对路径，从右向左解析，直到构成一个完成的绝对路径，如果最后全部处理完不是一个绝对路径，则当前的工作目录会被用上，末尾的斜杠会被删除，如果没有参数，则返回当前工作目录</p>\n<!--beforebegin--><div class=\"language-javascript extra-class\"><!--afterbegin--><pre v-pre class=\"language-javascript\"><code>path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/dir'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// '/dir/foo/a'</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/dir'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// '/foo/a'</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--><p><strong>path.sep</strong></p>\n<p>返回操作系统的路径片段分隔符</p>\n<ul>\n<li>POSIX 返回<code>/</code></li>\n<li>Windows 返<code>\\</code></li>\n</ul>\n<p><strong>path.toNamespacedPath(path)</strong></p>\n<p>仅仅在 Windows 上使用</p>\n<p><strong>path.win32</strong></p>\n<p>提供了<code>path</code>针对 Windows 的实现</p>\n</div>\n",null]}