{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/buffer.md?vue&type=template&id=f0982654&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/buffer.md","mtime":1537926977705},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926978403},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537926981332},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926978403},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537926981332},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537926981441}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"buffer-缓冲\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buffer-缓冲\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer 缓冲\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [_c(\"p\", [_vm._v(\"Buffer 用来处理二进制数据流\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Buffer 实例类似于整数数组,但是大小是固定的,创建之后无法调整,Buffer 在 Node 中是一个全局变量,无须\"\n        ),\n        _c(\"code\", [_vm._v(\"require\")]),\n        _vm._v(\"即可使用，在 V8 堆外分配内存\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"buffer-类静态方法和属性\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buffer-类静态方法和属性\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer 类静态方法和属性\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-alloc-size-fill-encoding\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#buffer-alloc-size-fill-encoding\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.alloc(size[, fill[, encoding]])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"size\")]),\n          _vm._v(\"新建 Buffer 期望的长度\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"fill\")]),\n          _vm._v(\"预填充新 Buffer 的值，默认\"),\n          _c(\"code\", [_vm._v(\"0\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"encoding\")]),\n          _vm._v(\"如果\"),\n          _c(\"code\", [_vm._v(\"fille\")]),\n          _vm._v(\"是字符串，则该值为它的编码格式，默认\"),\n          _c(\"code\", [_vm._v(\"utf8\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"分配一个大小为\"),\n        _c(\"code\", [_vm._v(\"size\")]),\n        _vm._v(\"长度的 Buffer，如果\"),\n        _c(\"code\", [_vm._v(\"size\")]),\n        _vm._v(\"大于\"),\n        _c(\"code\", [_vm._v(\"Buffer.contants.MAX_LENGTH\")]),\n        _vm._v(\"或者小于\"),\n        _c(\"code\", [_vm._v(\"0\")]),\n        _vm._v(\"，则抛出\"),\n        _c(\"code\", [_vm._v(\"RangeError\")]),\n        _vm._v(\"错误\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-allocunsave-size\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buffer-allocunsave-size\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.allocUnSave(size)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"size\")]),\n          _vm._v(\"新建 Buffer 期望的长度\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"以这种方式创建的 Buffer 实例底层内存是未被初始化的，所以可能存在一些历史敏感数据，可以通过\"\n        ),\n        _c(\"code\", [_vm._v(\"Buffer.fill(0)\")]),\n        _vm._v(\"填充，性能会比\"),\n        _c(\"code\", [_vm._v(\"Buffer.alloc()\")]),\n        _vm._v(\"要高\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"这种方式创建会使用 Buffer 实例预分配大小为\"),\n        _c(\"code\", [_vm._v(\"Buffer.poolSize\")]),\n        _vm._v(\"的内存池，当\"),\n        _c(\"code\", [_vm._v(\"size\")]),\n        _vm._v(\"的大小小于或等于\"),\n        _c(\"code\", [_vm._v(\"Buffer.poolSize >> 1\")]),\n        _vm._v(\"的时候，\"),\n        _c(\"code\", [_vm._v(\"Buffer.allocUnSave()\")]),\n        _vm._v(\"会直接使用内存池里面的内存\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-bytelength-string-encoding\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#buffer-bytelength-string-encoding\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.byteLength(string[, encoding])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"返回字符串实际的字节长度，默认\"),\n        _c(\"code\", [_vm._v(\"utf8\")]),\n        _vm._v(\"编码\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-compare-buf1-buf2\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buffer-compare-buf1-buf2\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.compare(buf1, buf2)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"比较\"),\n        _c(\"code\", [_vm._v(\"buf1\")]),\n        _vm._v(\"和\"),\n        _c(\"code\", [_vm._v(\"buf2\")]),\n        _vm._v(\"，通常用于 Buffer 实例数组的排序，相当于\"),\n        _c(\"code\", [_vm._v(\"buf1.compare(buf2)\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-concat-list-totallength\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#buffer-concat-list-totallength\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.concat(list[, totalLength])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"合并 Buffer 实例组成的数组，形成一个新的 Buffer 实例\")]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-from-array\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buffer-from-array\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.from(array)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"通过一个八位字节的\"),\n        _c(\"code\", [_vm._v(\"array\")]),\n        _vm._v(\"创建一个新的 Buffer\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-from-string-encoding\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#buffer-from-string-encoding\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.from(string[, encoding])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"新建一个包含所给的 JavaScript 字符串的 Buffer 实例，默认编码为\"\n        ),\n        _c(\"code\", [_vm._v(\"utf8\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-from-buffer\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buffer-from-buffer\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.from(buffer)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"拷贝 Buffer 对象\")]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-isbuffer-obj\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buffer-isbuffer-obj\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.isBuffer(obj)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"返回一个对象是否是 Buffer 实例\")]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-isencoding-encoding\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#buffer-isencoding-encoding\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.isEncoding(encoding)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"如果\"),\n        _c(\"code\", [_vm._v(\"encoding\")]),\n        _vm._v(\"是一个字符编码，返回\"),\n        _c(\"code\", [_vm._v(\"true\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buffer-poolsize\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buffer-poolsize\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer.poolSize\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"预分配、内部 Buffer 实例池的大小的字节数\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"buffer-实例方法和属性\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buffer-实例方法和属性\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Buffer 实例方法和属性\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buf-index\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buf-index\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" buf[index]\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"可以用来获取或者设置制定\"),\n        _c(\"code\", [_vm._v(\"index\")]),\n        _vm._v(\"位置的单个字节\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buf-buffer\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buf-buffer\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" buf.buffer\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"指向该 Buffer 实例底层的 \"),\n        _c(\"code\", [_vm._v(\"ArrayBuffer\")]),\n        _vm._v(\" 对象\")\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"buf-copy-target-targetstart-sourcestart-sourceend\" } },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: {\n                href: \"#buf-copy-target-targetstart-sourcestart-sourceend\",\n                \"aria-hidden\": \"true\"\n              }\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\" buf.copy(target[, targetStart[, sourceStart[, sourceEnd]]])\")\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"拷贝\"),\n        _c(\"code\", [_vm._v(\"buf\")]),\n        _vm._v(\"至\"),\n        _c(\"code\", [_vm._v(\"target\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buf-entries\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buf-entries\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" buf.entries()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"返回\"),\n        _c(\"code\", [_vm._v(\"[index, byte]\")]),\n        _vm._v(\"迭代器\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buf-equals-otherbuf\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buf-equals-otherbuf\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" buf.equals(otherBuf)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"比较两个 Buffer 实例，如果完全相同返回\"),\n        _c(\"code\", [_vm._v(\"true\")]),\n        _vm._v(\"，否则返回\"),\n        _c(\"code\", [_vm._v(\"false\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buf-fill-value-offset-end-coding\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#buf-fill-value-offset-end-coding\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" buf.fill(value[, offset[, end]][, coding])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"使用\"),\n        _c(\"code\", [_vm._v(\"value\")]),\n        _vm._v(\"填充\"),\n        _c(\"code\", [_vm._v(\"buf\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buf-includes-value-byteoffset-encoding\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#buf-includes-value-byteoffset-encoding\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" buf.includes(value[, byteOffset][, encoding])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"value\")]), _vm._v(\"搜索的值\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"byteOffset\")]),\n          _vm._v(\"开始搜索的位置\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"encoding\")]),\n          _vm._v(\"如果\"),\n          _c(\"code\", [_vm._v(\"value\")]),\n          _vm._v(\"是一个字符串，该值为字符编码，默认\"),\n          _c(\"code\", [_vm._v(\"utf8\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"相当于\"), _c(\"code\", [_vm._v(\"buf.indexOf() !== -1\")])]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buf-indexof-value-byteoffset-encoding\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#buf-indexof-value-byteoffset-encoding\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" buf.indexOf(value[, byteOffset][, encoding])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"搜索\"),\n        _c(\"code\", [_vm._v(\"value\")]),\n        _vm._v(\"在\"),\n        _c(\"code\", [_vm._v(\"buf\")]),\n        _vm._v(\"所在的位置，如果没有返回\"),\n        _c(\"code\", [_vm._v(\"-1\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buf-keys\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buf-keys\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" buf.keys()\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"返回\"),\n        _c(\"code\", [_vm._v(\"buf\")]),\n        _vm._v(\"键名组成的迭代器\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"buf-length\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#buf-length\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" buf.length\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"buf\")]), _vm._v(\"的内存量\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}