{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/prototype.md?vue&type=template&id=de7e766e&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/prototype.md","mtime":1537944817431},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537944820671}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"继承时面向对象的一个很重要的概念，子类通过继承父类的方法可以提高代码的复用率，JavaScript 通过原型对象（prototype）来实现继承\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"当访问一个对象的属性或者方法的时候，如果在对象上面没有找到，则在它的原型上面去找，找到为止\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"让子类构造函数完全继承父类构造函数的属性和方法分为下面两步\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._m(19),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"如果是只要继承某个方法，可以使用下面的方法\")]),\n    _vm._v(\" \"),\n    _vm._m(20),\n    _vm._m(21),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://juejin.im/post/5a944f485188257a804aba6d\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"万物皆空之 JavaScript 原型\"), _c(\"OutboundLink\")],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"对象的继承\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#对象的继承\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 对象的继承\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\n          \"构造函数的原型对象（prototype）的作用是定义所有实例对象共享的属性和方法\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"实例对象的原型也就是构造函数的原型对象（prototype）\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"Fruit\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"name\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"name \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" name\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" apple \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Fruit\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'apple'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" pear \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Fruit\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'pear'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\nFruit\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"getName\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"name\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\\napple\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"getName\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v('// \"apple\"')\n          ]),\n          _vm._v(\"\\npear\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"getName\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v('// \"pear\"')\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"原型链\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#原型链\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 原型链\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在 JavaScript里面，每一个对象都有自己的原型\"),\n      _c(\"code\", [_vm._v(\"__proto__\")]),\n      _vm._v(\n        \"，指向构造函数的原型对象（prototype），同时，构造函数也有自己的原型，这样就形成了一个原型链（prototype chain）：对象到原型，再到原型的原型\"\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"所有的对象的原型一层一层回溯都可以找到\"),\n      _c(\"code\", [_vm._v(\"Object.prototype\")]),\n      _vm._v(\"，也就是说，所有对象都继承了定义在\"),\n      _c(\"code\", [_vm._v(\"Object.prototype\")]),\n      _vm._v(\"上面的属性和方法，比如\"),\n      _c(\"code\", [_vm._v(\"valueOf()\")]),\n      _vm._v(\"、\"),\n      _c(\"code\", [_vm._v(\"toString()\")]),\n      _vm._v(\"，\"),\n      _c(\"code\", [_vm._v(\"Object.prototype\")]),\n      _vm._v(\"也是一个对象，它的原型是\"),\n      _c(\"code\", [_vm._v(\"null\")]),\n      _vm._v(\"，所以说，原型链的尽头为\"),\n      _c(\"code\", [_vm._v(\"null\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"constructor-属性\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#constructor-属性\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" constructor 属性\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"prototype\")]),\n      _vm._v(\"属性默认有一个\"),\n      _c(\"code\", [_vm._v(\"constructor\")]),\n      _vm._v(\"属性，指向\"),\n      _c(\"code\", [_vm._v(\"prototype\")]),\n      _vm._v(\"所在的构造函数，所以，\"),\n      _c(\"code\", [_vm._v(\"constructor\")]),\n      _vm._v(\"对象会被实例对象继承\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"Parent\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" p \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Parent\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\\np\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"constructor \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"===\")]),\n          _vm._v(\" Parent \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// true\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"constructor\")]),\n      _vm._v(\"属性表示构造函数与\"),\n      _c(\"code\", [_vm._v(\"prototype\")]),\n      _vm._v(\"属性之间的关联关系，一般我们在修改原型的时候，要同事修改\"),\n      _c(\"code\", [_vm._v(\"constructor\")]),\n      _vm._v(\"属性，可以通过\"),\n      _c(\"code\", [_vm._v(\"constructor\")]),\n      _vm._v(\"的\"),\n      _c(\"code\", [_vm._v(\"name\")]),\n      _vm._v(\"属性检查构造函数\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"F\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [_vm._v(\"F\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype  \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Array\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" f \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [_vm._v(\"F\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\nf\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"constructor \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"===\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [_vm._v(\"F\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// false\")\n          ]),\n          _vm._v(\"\\nf\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"constructor \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"===\")]),\n          _vm._v(\" Array \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// true\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [_vm._v(\"F\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"constructor \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [_vm._v(\"F\")]),\n          _vm._v(\"\\nf\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"constructor \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"===\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [_vm._v(\"F\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// true\")\n          ]),\n          _vm._v(\"\\n\\nf\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"constructor\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"name \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [_vm._v('// \"F\"')]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"instanceof-运算符\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#instanceof-运算符\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" instanceof 运算符\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"code\", [_vm._v(\"instanceof\")]),\n      _vm._v(\"运算符返回一个布尔值，表示后者对象是否在前者对象的原型链上面\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"原始类型的对象不能使用\"),\n        _c(\"code\", [_vm._v(\"instanceof\")]),\n        _vm._v(\"运算符，返回\"),\n        _c(\"code\", [_vm._v(\"false\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"code\", [_vm._v(\"null\")]),\n        _vm._v(\"、\"),\n        _c(\"code\", [_vm._v(\"undefined\")]),\n        _vm._v(\"使用\"),\n        _c(\"code\", [_vm._v(\"instanceof\")]),\n        _vm._v(\"运算符返回\"),\n        _c(\"code\", [_vm._v(\"false\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"一个对象可以对多个构造函数使用\"),\n        _c(\"code\", [_vm._v(\"instanceof\")]),\n        _vm._v(\"返回\"),\n        _c(\"code\", [_vm._v(\"true\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"F\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" f \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [_vm._v(\"F\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\nf \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"instanceof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [_vm._v(\"F\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// true\")\n          ]),\n          _vm._v(\"\\nf \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"instanceof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Object\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// true\")\n          ]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"123\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"instanceof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Number\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// false\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"null\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"instanceof\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Object\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// flase\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"应用\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [_vm._v(\"判断对象的数据类型\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"判断函数是否使用\"),\n        _c(\"code\", [_vm._v(\"new\")]),\n        _vm._v(\"命令调用\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"构造函数的继承\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#构造函数的继承\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 构造函数的继承\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"Parent\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"name\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"name \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" name\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\nParent\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"getName\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"name\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 第一步，继承父类的属性\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"Child\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"name\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  Parent\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"call\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" name\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 第二步，继承父类的方法\")\n          ]),\n          _vm._v(\"\\nChild\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" Object\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"create\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"Parent\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\nChild\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"constructor \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" Child\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 调用\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n          _vm._v(\" child \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"Child\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'hello'\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\nchild\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"getName\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v('// \"hello\"')\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"使用\"),\n      _c(\"code\", [_vm._v(\"Object.create()\")]),\n      _vm._v(\"的目的是对\"),\n      _c(\"code\", [_vm._v(\"prototype\")]),\n      _vm._v(\"对象进行深拷贝，防止在改变\"),\n      _c(\"code\", [_vm._v(\"Child\")]),\n      _vm._v(\"的原型对象的时候无意改变了\"),\n      _c(\"code\", [_vm._v(\"Parent\")]),\n      _vm._v(\"的原型对象\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n        _c(\"code\", [\n          _vm._v(\"Child\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function-variable function\" } }, [\n            _vm._v(\"f\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n  Parent\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"prototype\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\"f\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"call\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"this\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"阅读\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#阅读\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 阅读\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}