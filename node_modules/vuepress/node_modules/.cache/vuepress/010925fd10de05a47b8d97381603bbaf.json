{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/linux/redis.md?vue&type=template&id=77b65843&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/linux/redis.md","mtime":1538043547782},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1538043548579},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1538043551495},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1538043548579},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1538043551494},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1538043551590}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"redis\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#redis\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Redis\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"redis-基本操作\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#redis-基本操作\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Redis 基本操作\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"源码编译安装\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"redis-server start/restart # 启动\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"redis-server stop # 停止\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"redis-client # 客户端\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"redis-扩展知识\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#redis-扩展知识\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Redis 扩展知识\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"不仅仅支持简单的 k/v 类型的数据，同时还支持 list, set, map 等数据结构的存储\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"redis 支持数据的存储，即 master-slave 模式的数据备份\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"redis 支持数据的持久化，可将内存中的数据保存在磁盘中，重启的时候可以再次加载使用\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"redis-安装\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#redis-安装\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Redis 安装\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"wget http://download.redis.io/releases/redis-4.0.9.tar.gz # 获取源码\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"yum install gcc # 安装 gcc\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"make MALLOC=libc\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"make install\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"redis-使用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#redis-使用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Redis 使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"p\", [_vm._v(\"redis-server # Redis 服务端启动程序\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [\n            _vm._v(\n              \"redis-cli # Redis 客户端操作工具。也可以使用 telnet 使用纯文本协议操作\"\n            )\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_vm._v(\"redis-benchmark # Redis 性能测试工具\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_vm._v(\"redis-check-aof # 数据恢复工具\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_vm._v(\"redis-check-dump # 检查导出工具\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_vm._v(\"./src/redis-server # 启动 redis\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"memcached-基本操作\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#memcached-基本操作\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Memcached 基本操作\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"yum \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"install\")\n            ]),\n            _vm._v(\" memcached \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 安装\")\n            ]),\n            _vm._v(\"\\nmemcached -d -l -m -p \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 启动 -d 后台方式运行 -m 内存分配 -l 监听的 ip ， -p 端口号\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"kill\")\n            ]),\n            _vm._v(\" pid \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 关闭\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}