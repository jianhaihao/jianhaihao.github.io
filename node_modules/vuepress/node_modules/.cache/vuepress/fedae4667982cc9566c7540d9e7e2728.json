{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/swoft/basic.md?vue&type=template&id=708edf4e&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/swoft/basic.md","mtime":1541779074853},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1541779075605},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1541779077743},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1541779075605},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1541779077743},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1541779077815}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"swoft-基础知识\"><a class=\"header-anchor\" href=\"#swoft-基础知识\" aria-hidden=\"true\">#</a> Swoft 基础知识</h1>\n<p><a href=\"https://www.swoft.org\" target=\"_blank\" rel=\"noopener noreferrer\">官网<OutboundLink/></a> <a href=\"https://doc.swoft.org\" target=\"_blank\" rel=\"noopener noreferrer\">文档<OutboundLink/></a></p>\n<p><a href=\"http://blog.sina.com.cn/s/blog_802a2d1f0102xn26.html\" target=\"_blank\" rel=\"noopener noreferrer\">初期可能踩到的坑<OutboundLink/></a></p>\n<p><a href=\"http://www.jtthink.com/course/65\" target=\"_blank\" rel=\"noopener noreferrer\">推荐资源<OutboundLink/></a></p>\n<h3 id=\"特点\"><a class=\"header-anchor\" href=\"#特点\" aria-hidden=\"true\">#</a> 特点</h3>\n<ul>\n<li>基于 Swoole 扩展</li>\n<li>内置协程网络服务器</li>\n<li>WebSocket 服务器</li>\n<li>MVC 分层设计</li>\n<li>高性能路由</li>\n<li>强大的 AOP (面向切面编程)</li>\n<li>灵活的注解功能</li>\n<li>全局的依赖注入容器</li>\n<li>基于 PSR-7 的 HTTP 消息实现</li>\n<li>基于 PSR-11 的容器规范实现</li>\n<li>基于 PSR-14 的事件管理器</li>\n<li>基于 PSR-15 的中间件</li>\n<li>基于 PSR-16 的缓存设计</li>\n<li>可扩展的高性能 RPC</li>\n<li>RESTful 支持</li>\n<li>国际化(i18n)支持</li>\n<li>快速灵活的参数验证器</li>\n<li>完善的服务治理，熔断、降级、负载、注册与发现</li>\n<li>通用连接池 Mysql、Redis、RPC</li>\n<li>数据库 ORM</li>\n<li>协程、异步任务投递</li>\n<li>自定义用户进程</li>\n<li>协程和同步阻塞客户端无缝自动切换</li>\n<li>别名机制</li>\n<li>跨平台热更新自动 Reload</li>\n<li>强大的日志系统</li>\n</ul>\n</div>\n",null]}