{"remainingRequest":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\Products\\jianhaihao.github.io\\docs\\linux\\demo2.md?vue&type=template&id=4e0efae2&","dependencies":[{"path":"D:\\Products\\jianhaihao.github.io\\docs\\linux\\demo2.md","mtime":1552483032809},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1552483045256},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1552483045254},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1552483045520}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"搭建linux应用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#搭建linux应用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 搭建Linux应用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"工具：\"),\n        _c(\"code\", [_vm._v(\"yum\")]),\n        _vm._v(\" \"),\n        _c(\"code\", [_vm._v(\"docker\")]),\n        _c(\"br\"),\n        _vm._v(\"\\n服务端：\"),\n        _c(\"code\", [_vm._v(\"swoft\")]),\n        _c(\"br\"),\n        _vm._v(\"\\n应用端：\"),\n        _c(\"code\", [_vm._v(\"yii2.0\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"安装基础组件\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#安装基础组件\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 安装基础组件\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\nyum update\\n\\nyum -y \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"install\")\n            ]),\n            _vm._v(\" lrzsz   \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 安装rz/sz命令\")\n            ]),\n            _vm._v(\"\\n\\nyum -y \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"install\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"git\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 安装git\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 安装 composer\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"curl\")\n            ]),\n            _vm._v(\" -sS https://getcomposer.org/installer \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"|\")\n            ]),\n            _vm._v(\" php   \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 下载 composer.phar 文件（注意要关闭翻墙）\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"mv\")\n            ]),\n            _vm._v(\" composer.phar /usr/local/bin/composer   \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 设置为全局可访问\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 如果报错以下问题\")\n            ]),\n            _vm._v(\"\\n/usr/bin/env: php: No such \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"file\")\n            ]),\n            _vm._v(\" or directory\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 执行下面命令\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"ln\")\n            ]),\n            _vm._v(\" -s /home/php/bin/php /usr/local/bin/php   \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 将php的实际安装目录指向/usr/local/bin/php\")\n            ]),\n            _vm._v(\"\\n\\ncomposer -v    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看composer版本，确定是否安装成功\")\n            ]),\n            _vm._v(\"\\n\\ncomposer selfupdate   \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 升级composer\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 更换composer镜像源:\")\n            ]),\n            _vm._v(\n              \"\\ncomposer config -g repo.packagist composer https://packagist.laravel-china.org\\n\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"安装php7\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#安装php7\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 安装php7\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 如果之前已经安装我们先卸载一下\")\n            ]),\n            _vm._v(\"\\nyum -y remove php*\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 更改yum源\")\n            ]),\n            _vm._v(\n              \"\\nrpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \\nrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm\\n\\n\"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 安装php72w和各种拓展\")\n            ]),\n            _vm._v(\"\\nyum -y \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"install\")\n            ]),\n            _vm._v(\n              \" php72w php72w-cli php72w-common php72w-devel php72w-embedded php72w-fpm php72w-gd php72w-mbstring php72w-mysqlnd php72w-opcache php72w-pdo php72w-xml\\n\\n\"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看当前php版本\")\n            ]),\n            _vm._v(\"\\nphp -v\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 开启php-fpm\")\n            ]),\n            _vm._v(\"\\nsystemctl start php-fpm\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 关闭php-fpm\")\n            ]),\n            _vm._v(\"\\nsystemctl stop php-fpm\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 重启php-fpm\")\n            ]),\n            _vm._v(\"\\nsystemctl restart php-fpm\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"安装nginx\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#安装nginx\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 安装nginx\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 添加yum源\")\n            ]),\n            _vm._v(\n              \"\\nrpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm\\n\\nyum \"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"install\")\n            ]),\n            _vm._v(\" -y nginx\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 启动Nginx并设置开机自动运行\")\n            ]),\n            _vm._v(\"\\nsystemctl start nginx.service\\nsystemctl \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"enable\")\n            ]),\n            _vm._v(\" nginx.service\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 开启nginx\")\n            ]),\n            _vm._v(\"\\nsystemctl start nginx\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 关闭nginx\")\n            ]),\n            _vm._v(\"\\nsystemctl stop nginx\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 重启nginx\")\n            ]),\n            _vm._v(\"\\nsystemctl restart nginx\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"安装mysql\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#安装mysql\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 安装mysql\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 添加yum源\")\n            ]),\n            _vm._v(\n              \"\\nrpm -Uvh http://dev.mysql.com/get/mysql57-community-release-el7-7.noarch.rpm\\n\\nyum \"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"install\")\n            ]),\n            _vm._v(\" mysql-community-server\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 启动mysql服务\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"service\")\n            ]),\n            _vm._v(\" mysqld start\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 第一次启动后，mysql5.7会生成一个随机root密码，并放到了/var/log/mysqld.log日志中\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 使用 grep 'temporary password'  /var/log/mysqld.log 这个命令读取root初始密码\"\n              )\n            ]),\n            _vm._v(\"\\n2018-11-26T15:08:41.595259Z 1 \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"Note\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" A temporary password is generated \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"for\")\n            ]),\n            _vm._v(\" root@localhost: owMP7Z\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"obmB-\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 初始密码为 owMP7Z(obmB-\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 使用 mysql -u root -p 然后输入上面的密码进入\")\n            ]),\n            _vm._v(\"\\nALTER USER USER\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" IDENTIFIED BY \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'123456'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 修改登录的用户密码改成123456\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# mysql5.7默认对密码进行强校验，建议设置为一个较为复杂的密码，否则会报错\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# mysql5.7密码校验\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 0 or LOW\\tLength\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 1 or MEDIUM\\tLength; numeric, lowercase/uppercase, and special characters\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 2 or STRONG\\tLength; numeric, lowercase/uppercase, and special characters; dictionary file\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# (默认validate_password_policy = 1)\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 如果需要把密码设置的简单一些，执行以下命令：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"set\")\n            ]),\n            _vm._v(\" global validate_password_policy\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\"0\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 设置简单的密码：\")\n            ]),\n            _vm._v(\"\\nALTER USER USER\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" IDENTIFIED BY \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'12345678'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 默认需要密码长度为8位\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 如需再次进入mysql, 重新设置密码\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 切换到mysql数据表\")\n            ]),\n            _vm._v(\"\\nuse mysql\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 修改密码\")\n            ]),\n            _vm._v(\"\\nupdate mysql.user \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"set\")\n            ]),\n            _vm._v(\" authentication_string\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\"PASSWORD\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'12345678'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" where user\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'root'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 修改密码后，需要重新启动mysql，新密码才会生效\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 重启mysql服务\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"service\")\n            ]),\n            _vm._v(\" mysqld stop\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"service\")\n            ]),\n            _vm._v(\" mysqld start\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 设置外网可访问\")\n            ]),\n            _vm._v(\"\\nuse mysql\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\nupdate user \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"set\")\n            ]),\n            _vm._v(\" host \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'%'\")\n            ]),\n            _vm._v(\" where user \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'root'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"select\")\n            ]),\n            _vm._v(\" host,user from user\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \\nflush privileges\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"安装docker\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#安装docker\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 安装docker\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 移除旧的版本：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\n              \" yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine\\n\\n\"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 安装一些必要的系统工具：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" yum \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"install\")\n            ]),\n            _vm._v(\" -y yum-utils device-mapper-persistent-data lvm2\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 添加软件源信息：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\n              \" yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\\n\\n\"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 更新 yum 缓存：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" yum makecache fast\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 安装 Docker-ce：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" yum -y \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"install\")\n            ]),\n            _vm._v(\" docker-ce\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 启动 Docker 后台服务\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" systemctl start docker\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 镜像加速\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"vi\")\n            ]),\n            _vm._v(\" /etc/docker/daemon.json     \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 如没有该文件，请先新建一个\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 新建daemon.json文件\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"###############################################################\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"cd\")\n            ]),\n            _vm._v(\" /etc/docker/\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"touch\")\n            ]),\n            _vm._v(\" daemon.json\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"###############################################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 文件内容\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"###############################################################\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"registry-mirrors\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v('\"http://hub-mirror.c.163.com\"')\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"###############################################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 如需删除Docker CE，执行以下命令\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" yum remove docker-ce\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"rm\")\n            ]),\n            _vm._v(\" -rf /var/lib/docker\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"安装swoft\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#安装swoft\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 安装swoft\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"\\ndocker pull swoft/swoft\\n\\ndocker run -p 8080:80 --name swoft  --rm -d swoft/swoft:latest\\n\\n\"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 拷贝容器文件到本地\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"cd\")\n            ]),\n            _vm._v(\" /home/\\ndocker \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"cp\")\n            ]),\n            _vm._v(\" swoft:/var/www/swoft \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 注意点号，表示拷贝到当前目录\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 从本地文件运行swoft容器：\")\n            ]),\n            _vm._v(\n              \"\\ndocker run -p 8080:80 --name swoft -v /home/swoft/:/var/www/swoft --rm -d swoft/swoft:latest\\n\\ndocker run -p 8080:80 --name swoft -v /home/WancllMS-Server/swoft/:/var/www/swoft --rm -d swoft/swoft:latest\\n\\n\"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看运行的容器\")\n            ]),\n            _vm._v(\"\\ndocker \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"ps\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 停止容器\")\n            ]),\n            _vm._v(\"\\ndocker stop swoft\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 重启容器\")\n            ]),\n            _vm._v(\"\\ndocker restart swoft\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"配置nginx虚拟机\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#配置nginx虚拟机\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 配置nginx虚拟机\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 配置Http\")\n            ]),\n            _vm._v(\"\\n\\nserver \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    listen 80\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    server_name www.demo.com\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    root   /home/demo/yii/web/\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n    location / \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        index index.html index.htm index.php\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        autoindex off\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"if\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"!\")\n            ]),\n            _vm._v(\"-e \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$request_filename\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            rewrite  ^\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$  /index.php?s\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\"/\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$1\")\n            ]),\n            _vm._v(\"  last\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"break\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n    location ~ \\\\.php\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$ \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        fastcgi_pass 127.0.0.1:9000\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_index index.php\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_split_path_info ^\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"((\")\n            ]),\n            _vm._v(\"?U\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\".+\\\\.php\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"/?.+\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param SCRIPT_FILENAME \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_script_name\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param PATH_INFO \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param PATH_TRANSLATED \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        include  fastcgi_params\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"#############################分割线##################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 配置Https\")\n            ]),\n            _vm._v(\"\\n\\nserver \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    listen 80\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    server_name www.demo.com\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" 301 https://\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$server_name\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$request_uri\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\nserver \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    listen 443\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    server_name www.demo.com\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    root   /home/demo/yii/web/\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n    ssl on\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\n              \"\\n    ssl_certificate  /etc/nginx/ssl/1_www.demo.com_bundle.crt\"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\n              \"\\n    ssl_certificate_key  /etc/nginx/ssl/2_www.demo.com.key\"\n            ),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n    location / \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        index index.html index.htm index.php\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        autoindex off\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"if\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"!\")\n            ]),\n            _vm._v(\"-e \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$request_filename\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            rewrite  ^\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$  /index.php?s\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\"/\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$1\")\n            ]),\n            _vm._v(\"  last\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"break\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n    location ~ \\\\.php\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$ \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        fastcgi_pass 127.0.0.1:9000\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_index index.php\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_split_path_info ^\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"((\")\n            ]),\n            _vm._v(\"?U\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\".+\\\\.php\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"/?.+\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param SCRIPT_FILENAME \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_script_name\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param PATH_INFO \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param PATH_TRANSLATED \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        include  fastcgi_params\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"设置文件权限\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#设置文件权限\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 设置文件权限\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 修改文件上传权限\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"cd\")\n            ]),\n            _vm._v(\" /home/demo/yii/web/\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"chmod\")\n            ]),\n            _vm._v(\" 757 uploads\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 修改缓存文件权限\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"cd\")\n            ]),\n            _vm._v(\" /home/demo/yii/runtime/\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"chmod\")\n            ]),\n            _vm._v(\" 757 cache\\n\\n\")\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}