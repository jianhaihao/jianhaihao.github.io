{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/function.md?vue&type=template&id=16f5ce48&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/function.md","mtime":1537944817434},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537944820671}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"函数的扩展（2-5）\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#函数的扩展（2-5）\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 函数的扩展（2.5）\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"函数参数的默认值\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#函数参数的默认值\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 函数参数的默认值\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"es6\")]),\n          _vm._v(\"允许直接为函数参数指定默认值\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"与解构赋值默认值结合使用\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"建议将带有默认值的参数放在尾部，因为如果放在前面或者中间，在调用函数的时候就必须传该参数，否则会报错\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"函数的length属性返回函数不但默认值参数的个数\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"一旦设置了参数的默认值，参数会形成一个单独的作用域，等初始化完成，这个作用域消失\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"应用：指定一个参数不得省略，省略则抛出错误\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"rest参数\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#rest参数\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" rest参数\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"可以理解为\"),\n          _c(\"code\", [_vm._v(\"arguments\")]),\n          _vm._v(\"的替代品，\"),\n          _c(\"code\", [_vm._v(\"arguments\")]),\n          _vm._v(\"为类数组对象，\"),\n          _c(\"code\", [_vm._v(\"rest参数\")]),\n          _vm._v(\"则是真正的数组\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 求和函数\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"add\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"...\")]),\n            _vm._v(\"values\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" values\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"reduce\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"a\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" b\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=>\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" a \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"+\")]),\n            _vm._v(\" b\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"严格模式\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#严格模式\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 严格模式\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"函数参数使用了默认值、解构赋值、扩展运算符，那么在函数内部不能显示设定为严格模式，否则会报错\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"name属性\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#name属性\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" name属性\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"返回函数的函数名\")])]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"箭头函数\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#箭头函数\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 箭头函数\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"es6\")]),\n          _vm._v(\"允许使用箭头\"),\n          _c(\"code\", [_vm._v(\"=>\")]),\n          _vm._v(\"定义函数，也是我本人用的比较爽的\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token function-variable function\" } },\n              [_vm._v(\"f\")]\n            ),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" v \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=>\")]),\n            _vm._v(\" v\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 等同于\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token function-variable function\" } },\n              [_vm._v(\"f\")]\n            ),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"v\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" v\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"使用圆括号代替参数部分\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"函数代码块多余一条语句，则用大括号括起来，加上return;如果只有一行语句，则可省去大括号\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"如果要返回一个对象，则用圆括号将对象包裹起来s\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascipt extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-text\" } }, [\n          _c(\"code\", [\n            _vm._v(\"var f = (v) => ({result: v+ 1});\\nf(5)\\t//{result: 6}\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"使用注意点\")])]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\"函数体的\"),\n          _c(\"code\", [_vm._v(\"this\")]),\n          _vm._v(\n            \"对象，不是使用时所在的对象，而是始终指向声明箭头函数所在的作用域，固定了\"\n          ),\n          _c(\"code\", [_vm._v(\"this\")]),\n          _vm._v(\"的指向，极大解决了\"),\n          _c(\"code\", [_vm._v(\"this\")]),\n          _vm._v(\"对象指向不明确的问题\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"不可以作为构造函数\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"不可以使用\"),\n          _c(\"code\", [_vm._v(\"arguments\")]),\n          _vm._v(\"对象，可以使用\"),\n          _c(\"code\", [_vm._v(\"rest参数\")]),\n          _vm._v(\"代替\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"不可以使用\"),\n          _c(\"code\", [_vm._v(\"yield命令\")]),\n          _vm._v(\"，因此箭头函数不能用做\"),\n          _c(\"code\", [_vm._v(\"Generator函数\")]),\n          _vm._v(\"，\"),\n          _c(\"em\", [_vm._v(\"待学习\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"双冒号运算符\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#双冒号运算符\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 双冒号运算符\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"apply``call``bind\")]),\n        _vm._v(\" 的替代方案，显示指定函数的上下文对象\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _vm._v(\"foo\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\"bar\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"//\\t等同于\")\n            ]),\n            _vm._v(\"\\nbar\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"bind\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"foo\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\nfoo\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"bar\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"...\")]),\n            _vm._v(\"arguments\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"//\\t等同于\")\n            ]),\n            _vm._v(\"\\nbar\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"apply\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"foo\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" arguments\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"尾调用优化\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#尾调用优化\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 尾调用优化\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [_vm._v(\"尾调用：函数的最后一步调用其他函数\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在不再用到外部函数内部变量的情况下，会去掉外层函数的调用帧，只保留最后一个执行函数的调用帧，大大减少内存的使用量\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"尾递归优化\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"//\\t计算阶乘\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"factorial\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"n \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"1\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"1\")]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" n \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"*\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"factorial\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"n \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"-\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"1\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"//\\t上面这种方法会一直保留上一调用帧的变量，非常耗费内存，进过尾递归优化之后变成：\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"f\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" total\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"n \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"1\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" total\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"f\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"n \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"-\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"1\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" n \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"*\")]),\n            _vm._v(\" total\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"//\\t把变量放到下一调用帧，删除上一调用帧，节省内存开销\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 练习：使用尾递归优化计算斐波拉切竖列前n项和\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"递归函数的改写\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"确保最后一步调用自身，把中间变量改写成函数的参数，就像上面例子中的 total\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"尾调用优化只在严格模式下起作用，是因为正常模式通过\"),\n          _c(\"code\", [_vm._v(\"func.arguments``func.caller\")]),\n          _vm._v(\n            \" 跟踪函数的调用栈，在严格模式下，这两个变量会失真，自然就减少了函数的调用栈，也就实现不了函数的尾调用优化\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"函数参数的尾逗号\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#函数参数的尾逗号\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 函数参数的尾逗号\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"为了在参数写成多行的时候，增加参数在上一行多加一个逗号，那么上一行也会被视为版本发生了变动，这看上去有点冗余，所以\"\n        ),\n        _c(\"code\", [_vm._v(\"es6\")]),\n        _vm._v(\"允许在函数最后一个参数后面可以加上逗号，保持一致性\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}