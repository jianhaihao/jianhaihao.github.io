{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/object-attribute.md?vue&type=template&id=4cb02e67&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/object-attribute.md","mtime":1537933948862},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537933952458},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537933952457},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537933952565}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"属性描述对象\\\"><a href=\\\"#属性描述对象\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 属性描述对象</h1> <p>JavaScript 为每个对象的属性提供一个描述对象，来表示属性的值，是否可写、是否可以枚举、是否可以配置、<code>getter</code>、<code>setter</code>函数，可以通过<code>Object.getOwnPropertyDescriptor()</code>来获取该属性</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  foo<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'123'</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nObject<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getOwnPropertyDescriptor</span><span class=\\\"token punctuation\\\">(</span>obj<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'foo'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\">// configurable: true</span>\\n<span class=\\\"token comment\\\">// enumerable: true</span>\\n<span class=\\\"token comment\\\">// value: &quot;123&quot;</span>\\n<span class=\\\"token comment\\\">// writable: true</span>\\n</code></pre></div><p><strong>value</strong></p> <p>表示该属性的值</p> <p><strong>writable</strong></p> <p>表示该属性值<code>value</code>是否可以改变</p> <p><strong>enumerable</strong></p> <p>表示该属性是否可以枚举，如果设置为<code>false</code>，则不可以被<code>Object.keys()</code>和<code>foo...of</code>遍历</p> <p><strong>configurable</strong></p> <p>表示该属性是否可以配置，如果设置为<code>false</code>，则不可以配置该属性的属性描述对象，不可以删除该属性</p> <p><strong>get</strong></p> <p>属性的取值函数<code>getter</code>，默认<code>undefined</code>，不能与<code>value</code>属性同时定义，不接受参数</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> bar <span class=\\\"token operator\\\">=</span> Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'foo'</span> <span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">get</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">'getter'</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\nbar<span class=\\\"token punctuation\\\">.</span>foo\\n<span class=\\\"token comment\\\">// &quot;getter&quot;</span>\\n</code></pre></div><p><strong>set</strong></p> <p>属性的存值函数<code>setter</code>，默认<code>undefined</code>，接受一个参数</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> bar <span class=\\\"token operator\\\">=</span> Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">defineProperty</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'foo'</span> <span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">set</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'setter'</span> <span class=\\\"token operator\\\">+</span> value<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\nbar<span class=\\\"token punctuation\\\">.</span>foo <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token comment\\\">// &quot;settertrue&quot;</span>\\n<span class=\\\"token comment\\\">// true</span>\\n</code></pre></div><p>可以直接在对象上面定义<code>get</code>和<code>set</code>，写法如下</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> obj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">get</span> <span class=\\\"token function\\\">p</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">'getter'</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token keyword\\\">set</span> <span class=\\\"token function\\\">p</span><span class=\\\"token punctuation\\\">(</span>value<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'setter: '</span> <span class=\\\"token operator\\\">+</span> value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre></div>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}