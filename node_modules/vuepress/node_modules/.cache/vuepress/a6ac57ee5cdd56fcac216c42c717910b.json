{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/markdown/grammar.md?vue&type=template&id=79943280&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/markdown/grammar.md","mtime":1539223083858},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1539223084698},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1539223086993},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1539223084698},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1539223086993},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1539223087078}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.jianshu.com/p/191d1e21f7ed\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"https://www.jianshu.com/p/191d1e21f7ed\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"三个或者三个以上的 - 或者 * 都可以\")]),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _c(\"p\", [\n      _vm._v(\"示例：\"),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://jianshu.com\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"简书\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://baidu.com\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"百度\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._v(\" \"),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"无序列表用 - + * 任何一种都可以\")]),\n    _vm._v(\" \"),\n    _vm._m(19),\n    _vm._m(20),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"数字加点\")]),\n    _vm._v(\" \"),\n    _vm._m(21),\n    _vm._m(22),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"上一级和下一级之间敲三个空格即可\")]),\n    _vm._v(\" \"),\n    _vm._m(23),\n    _vm._v(\" \"),\n    _vm._m(24),\n    _vm._m(25),\n    _vm._v(\" \"),\n    _vm._m(26)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"markdown-语法\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#markdown-语法\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Markdown 语法\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"标题\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#标题\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 标题\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\"一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 这是一级标题\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"## 这是二级标题\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"### 这是三级标题\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"#### 这是四级标题\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"##### 这是五级标题\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"###### 这是六级标题\")\n          ]),\n          _vm._v(\"\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"字体\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#字体\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 字体\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"加粗\"),\n        _c(\"br\"),\n        _vm._v(\"\\n要加粗的文字左右分别用两个*号包起来\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"斜体\"),\n        _c(\"br\"),\n        _vm._v(\"\\n要倾斜的文字左右分别用一个*号包起来\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"斜体加粗\"),\n        _c(\"br\"),\n        _vm._v(\"\\n要倾斜和加粗的文字左右分别用三个*号包起来\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"删除线\"),\n        _c(\"br\"),\n        _vm._v(\"\\n要加删除线的文字左右分别用两个~~号包起来\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"**这是加粗的文字**\\n*这是倾斜的文字*\\n***这是斜体加粗的文字***\\n~~这是加删除线的文字~~\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"引用\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#引用\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 引用\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"在引用的文字前加>即可\"),\n      _c(\"br\"),\n      _vm._v(\"\\n引用也可以嵌套，如加两个>>三个>>>n个...\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\"这是引用的内容\\n\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">>\")]),\n          _vm._v(\"这是引用的内容\\n\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">>\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">>\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">>\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">>\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">>\")]),\n          _vm._v(\"这是引用的内容\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"分割线\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#分割线\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 分割线\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [_vm._v(\"---\\n----\\n***\\n*****\\n\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"图片\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#图片\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 图片\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"图片alt\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"图片地址 \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"''\")]),\n          _vm._v(\"图片title\"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"''\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\n            \"\\n\\n图片alt就是显示在图片下面的文字，相当于对图片内容的解释。\\n图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"示例：\"),\n      _c(\"br\"),\n      _vm._v(\" \"),\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/u=702257389,1274025419&fm=27&gp=0.jpg\",\n          alt: \"blockchain\",\n          title: \"区块链\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"超链接\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#超链接\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 超链接\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"超链接名\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"超链接地址 \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [\n            _vm._v('\"超链接title\"')\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\ntitle可加可不加\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"列表\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#列表\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 列表\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"无序列表\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#无序列表\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 无序列表\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"- 列表内容\\n+ 列表内容\\n* 列表内容\\n\\n注意：- + * 跟内容之间都要有一个空格\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"有序列表\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#有序列表\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 有序列表\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"1.列表内容\\n2.列表内容\\n3.列表内容\\n\\n注意：序号跟内容之间要有空格\\n\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h4\", { attrs: { id: \"列表嵌套\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#列表嵌套\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 列表嵌套\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"表格\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#表格\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 表格\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"表头\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"表头\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"表头\\n---\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\":--:\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"---:\\n内容\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"内容\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"内容\\n内容\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\"内容\"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\n            \"内容\\n\\n第二行分割表头和内容。\\n- 有一个就行，为了对齐，多加了几个\\n文字默认居左\\n-两边加：表示文字居中\\n-右边加：表示文字居右\\n注：原生的语法两边都要用 \"\n          ),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n          _vm._v(\" 包起来。此处省略\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"代码\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#代码\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 代码\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"单行代码：代码之间分别用一个反引号包起来\"),\n      _c(\"br\"),\n      _vm._v(\n        \"\\n代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行\"\n      )\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}