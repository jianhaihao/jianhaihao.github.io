{"remainingRequest":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\Products\\jianhaihao.github.io\\docs\\data-structure\\queue.md?vue&type=template&id=c3c57568&","dependencies":[{"path":"D:\\Products\\jianhaihao.github.io\\docs\\data-structure\\queue.md","mtime":1552918739488},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1552483045256},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1552483045254},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1552483045520}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._m(0),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('p',[_vm._v(\"栈的应用：\")]),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_c('p',[_vm._v(\"ArrayQueue\"),_c('E')],1),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_vm._m(5)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{attrs:{\"id\":\"队列\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#队列\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 队列\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"队列也是一种线性结构\\n相比数组，队列对应的操作是数组的子集\\n只能从一端（队尾）添加元素，也只能从一端（队首）取出元素\\n队列是一种先进先出的数据结构，First In First Out (FIFO)\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"undo 操作 - 编辑器\\n系统调用栈 - 操作系统\\n括号匹配 - 编译器\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"数组队列的复杂度分析\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#数组队列的复杂度分析\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 数组队列的复杂度分析\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('ul',[_c('li',[_vm._v(\"void enqueue(E)     O(1) 均摊\")]),_vm._v(\" \"),_c('li',[_vm._v(\"E dequeue()         O(n)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"E front()           O(1)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"int getSize()       O(1)\")]),_vm._v(\" \"),_c('li',[_vm._v(\"boolean isEmpty     O(1)\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"栈顶元素反映了在嵌套的层次关系中，最近的需要匹配的元素\")])])}]\n\nexport { render, staticRenderFns }"]}