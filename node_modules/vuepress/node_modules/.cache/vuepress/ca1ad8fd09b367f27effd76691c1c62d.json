{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/regexp.md?vue&type=template&id=7d6932cf&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/regexp.md","mtime":1537933948863},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537933952458},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537933952457},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537933952565}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._m(0),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"正则表达式一种文本匹配的模式。\"),_c('a',{attrs:{\"href\":\"http://javascript.ruanyifeng.com/stdlib/regexp.html#toc5\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"参考\"),_c('OutboundLink')],1)])]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_vm._m(2),_vm._m(3),_vm._v(\" \"),_vm._m(4),_vm._v(\" \"),_vm._m(5),_vm._m(6),_vm._v(\" \"),_vm._m(7),_vm._m(8),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_vm._m(10),_vm._v(\" \"),_c('p',[_vm._v(\"返回布尔值，当前模式是否匹配参数字符串\")]),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),_vm._m(13),_vm._v(\" \"),_vm._m(14),_vm._m(15),_vm._v(\" \"),_vm._m(16),_vm._v(\" \"),_vm._m(17),_vm._v(\" \"),_vm._m(18),_vm._v(\" \"),_vm._m(19),_vm._v(\" \"),_vm._m(20),_vm._v(\" \"),_vm._m(21),_vm._v(\" \"),_vm._m(22),_vm._v(\" \"),_vm._m(23),_vm._v(\" \"),_vm._m(24),_vm._v(\" \"),_vm._m(25),_vm._v(\" \"),_vm._m(26),_vm._v(\" \"),_vm._m(27),_vm._v(\" \"),_vm._m(28),_vm._v(\" \"),_vm._m(29),_vm._m(30),_vm._v(\" \"),_c('p',[_vm._v(\"正则表达式为一些不能打印的字符，提供了一些表达方法\")]),_vm._v(\" \"),_vm._m(31),_vm._v(\" \"),_vm._m(32),_vm._v(\" \"),_vm._m(33),_vm._v(\" \"),_c('p',[_vm._v(\"有两个字符在字符类中有特殊含义\")]),_vm._v(\" \"),_vm._m(34),_vm._v(\" \"),_vm._m(35),_vm._v(\" \"),_vm._m(36),_vm._v(\" \"),_vm._m(37),_vm._v(\" \"),_vm._m(38),_vm._v(\" \"),_vm._m(39),_vm._v(\" \"),_vm._m(40),_vm._v(\" \"),_vm._m(41),_vm._v(\" \"),_vm._m(42),_vm._v(\" \"),_vm._m(43),_vm._v(\" \"),_vm._m(44),_vm._v(\" \"),_vm._m(45),_vm._v(\" \"),_vm._m(46),_vm._v(\" \"),_vm._m(47),_vm._v(\" \"),_vm._m(48),_vm._v(\" \"),_vm._m(49),_vm._v(\" \"),_vm._m(50),_vm._v(\" \"),_vm._m(51),_vm._v(\" \"),_vm._m(52),_vm._v(\" \"),_vm._m(53),_vm._m(54),_vm._v(\" \"),_vm._m(55),_vm._v(\" \"),_vm._m(56),_vm._m(57),_vm._v(\" \"),_vm._m(58),_vm._v(\" \"),_vm._m(59)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h1',{attrs:{\"id\":\"正则表达式-3\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#正则表达式-3\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 正则表达式 (3)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"新建正则表达式\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#新建正则表达式\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 新建正则表达式\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" regexp \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token class-name\"}},[_vm._v(\"RegExp\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'xyz'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" regexp \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token regex\"}},[_vm._v(\"/xyz/\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"实例属性\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#实例属性\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 实例属性\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"只读属性，修饰符\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_vm._v(\"RegExp\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"ignoreCase  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 忽略大小写\")]),_vm._v(\"\\nRegExp\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"global  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 全局匹配\")]),_vm._v(\"\\nRegExp\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"multiline  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 多行模式匹配\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"其他属性\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_vm._v(\"RegExp\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"lastIndex  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 返回一个数值，表示下一次搜索开始的位置，可写，当使用 g 修饰符的时候，该属性才发挥作用\")]),_vm._v(\"\\nRegExp\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"source  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 返回正则表达式的字符串形式，不包括反斜杠，只读\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"可以通过手动指定\"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\"属性来设置匹配的起始位置\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"实例方法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#实例方法\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 实例方法\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"regexp-prototype-test\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#regexp-prototype-test\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" RegExp.prototype.test\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"regexp-prototype-exec\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#regexp-prototype-exec\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" RegExp.prototype.exec\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"正则匹配字符串，如果匹配上，返回包含结果的类数组的对象；如果没有结果，返回\"),_c('code',[_vm._v(\"null\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"返回类数组对象第一个成员为匹配成功的子串，第二个成员是圆括号匹配的结果\")]),_vm._v(\" \"),_c('li',[_vm._v(\"返回的类数组对象包含\"),_c('code',[_vm._v(\"input\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"index\")]),_vm._v(\"两个属性，分别表示原字符串和匹配成功子串在原字符串的起始位置\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"字符串的实例方法\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#字符串的实例方法\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 字符串的实例方法\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_vm._v(\"String\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"match\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 返回一个数组，包含所有匹配到的子串，没有返回 null\")]),_vm._v(\"\\nString\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"search\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 返回一个整数，表示匹配成功开始的位置，没有返回 -1\")]),_vm._v(\"\\nString\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"replace\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 按照给定的正则表达式替换字符串，返回替换后的字符串\")]),_vm._v(\"\\nString\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"prototype\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"split\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 按照给定的正则表达式对字符串进行分割，返回一个包含分割后子串的数组\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"设置正则表达式的\"),_c('code',[_vm._v(\"lastIndex\")]),_vm._v(\"属性，对\"),_c('code',[_vm._v(\"match()\")]),_vm._v(\"方法无效，每次匹配都是从第 0 个位置开始的\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"replace()\")]),_vm._v(\"方法第二个参数可以是替换后的字符串，也可以是正则表达是的分组表达式\"),_c('code',[_vm._v(\"$(1)\")]),_vm._v(\"，也可以是一个函数，替换每一个匹配的返回值\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"split()\")]),_vm._v(\"方法的第二个参数可以是一个数值，表示返回数组的最大成员数\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"匹配规则\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#匹配规则\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 匹配规则\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"字面量字符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#字面量字符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 字面量字符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"在正则表达式中，某个字符只表示它字面的含义，比如\"),_c('code',[_vm._v(\"/z/\")]),_vm._v(\",\"),_c('code',[_vm._v(\"/a/\")]),_vm._v(\"分别匹配 a 和 b，就叫他字面量字符\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"元字符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#元字符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 元字符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"具有特殊含义的字符\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"点字符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#点字符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 点字符 (.)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"匹配除开回车 (\"),_c('code',[_vm._v(\"\\\\r\")]),_vm._v(\")、换行 (\"),_c('code',[_vm._v(\"\\\\n\")]),_vm._v(\")、行分割符 (\"),_c('code',[_vm._v(\"\\\\u2028\")]),_vm._v(\") 和段分割符 (\"),_c('code',[_vm._v(\"\\\\u2029\")]),_vm._v(\") 之外任意一个字符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"位置字符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#位置字符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 位置字符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('code',[_vm._v(\"^\")]),_vm._v(\"表示字符串的开始位置\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"$\")]),_vm._v(\"表示字符串的结束位置\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"选择符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#选择符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 选择符 (|)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"竖线符号\"),_c('code',[_vm._v(\"|\")]),_vm._v(\"在正则表达式中，表示或 (\"),_c('code',[_vm._v(\"OR\")]),_vm._v(\") 的关系，可以联合使用\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"转义符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#转义符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 转义符 ()\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"正则表达式中有一些特殊含义的元字符，如果要表达他们本身，则需要在字符前加上\"),_c('code',[_vm._v(\"\\\\\")]),_vm._v(\"进行转义\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token regex\"}},[_vm._v(\"/\\\\+/\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"test\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'a+b'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"  \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// true\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"特殊字符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#特殊字符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 特殊字符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('code',[_vm._v(\"[\\\\b]\")]),_vm._v(\"匹配退格键，不要与\"),_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\"混淆\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\n\")]),_vm._v(\"匹配换行键\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\r\")]),_vm._v(\"匹配回车键\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\t\")]),_vm._v(\"匹配制表符\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\v\")]),_vm._v(\"匹配垂直制表符\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\f\")]),_vm._v(\"匹配换页符\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\0\")]),_vm._v(\"匹配\"),_c('code',[_vm._v(\"null\")]),_vm._v(\"字符\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\xhh\")]),_vm._v(\"匹配\"),_c('code',[_vm._v(\"\\\\u00\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"\\\\uFF\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\uhhhh\")]),_vm._v(\"匹配\"),_c('code',[_vm._v(\"\\\\u0000\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"\\\\uFFFF\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"字符类\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#字符类\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 字符类\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_vm._v(\"字符类 class 表示一些可供选择的字符，只要匹配一个就可以，把所有待匹配的字符放入方括号类，组成一个字符类，\"),_c('code',[_vm._v(\"/[abc]/\")]),_vm._v(\"可以匹配带有 a, b, c 字符的字符串\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"脱字符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#脱字符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 脱字符 (^)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"表示除开方括号字符的任意字符都可以匹配，\"),_c('code',[_vm._v(\"[^abc]\")]),_vm._v(\"表示匹配除开 a, b, c 之外的任意字符\")]),_vm._v(\" \"),_c('li',[_vm._v(\"[^] 表示匹配一切字符，范围比点字符 (.) 要大\")]),_vm._v(\" \"),_c('li',[_vm._v(\"脱字符只有在字符类的第一位才有效，否则就是字面字符\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"连字符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#连字符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 连字符 (-)\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('code',[_vm._v(\"/[0-9]/\")]),_vm._v(\"表示\"),_c('code',[_vm._v(\"[0123456789]\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"/[a-z]/\")]),_vm._v(\"表示 26 个小写字母\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"/[A-Z]/\")]),_vm._v(\"表示 26 个大写字母\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"预定义模式\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#预定义模式\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 预定义模式\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('blockquote',[_c('p',[_vm._v(\"常见匹配模式的简写\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('code',[_vm._v(\"\\\\d\")]),_vm._v(\"等同于\"),_c('code',[_vm._v(\"[0-9]\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\D\")]),_vm._v(\"等同于\"),_c('code',[_vm._v(\"[^0-9]\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\w\")]),_vm._v(\"等同于\"),_c('code',[_vm._v(\"[a-zA-Z0-9_]\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\W\")]),_vm._v(\"等同于\"),_c('code',[_vm._v(\"[^a-zA-Z0-9_]\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\s\")]),_vm._v(\"等同于\"),_c('code',[_vm._v(\"[\\\\r\\\\n\\\\t\\\\v\\\\f]\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\S\")]),_vm._v(\"等同于\"),_c('code',[_vm._v(\"[^\\\\r\\\\n\\\\t\\\\v\\\\f]\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\b\")]),_vm._v(\"匹配词的边界\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"\\\\B\")]),_vm._v(\"匹配非词边界，即在词的内部\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"重复类\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#重复类\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 重复类\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"a{n}\")]),_vm._v(\"匹配 a 字符重复 n 次\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"量字符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#量字符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 量字符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('code',[_vm._v(\"?\")]),_vm._v(\"匹配 0 次或 1 次，等同于\"),_c('code',[_vm._v(\"{0, 1}\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"*\")]),_vm._v(\"匹配 任意次，等同于\"),_c('code',[_vm._v(\"{0,}\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"+\")]),_vm._v(\"匹配 1 次或多次，等同于\"),_c('code',[_vm._v(\"{1,}\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"贪婪模式\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#贪婪模式\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 贪婪模式\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"量字符的原则是最大可能匹配，知道下一个字符不匹配为止，我们称这种匹配模式为贪婪模式\")]),_vm._v(\" \"),_c('li',[_vm._v(\"如果想讲贪婪模式改为非贪婪模式，则在量字符后面加上\"),_c('code',[_vm._v(\"?\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"*?\")]),_vm._v(\"表示某个模式出现 0 次或多次，采用非贪婪模式\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"+?\")]),_vm._v(\"表示某个模式出现 1 次或者多次匹配，采用非贪婪模式\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"修饰符\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#修饰符\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 修饰符\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_c('code',[_vm._v(\"g\")]),_vm._v(\"修饰符，全局匹配，主要用于搜索和替换\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"i\")]),_vm._v(\"修饰符，忽略大小写进行匹配\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"m\")]),_vm._v(\"修饰符，多行匹配模式\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h3',{attrs:{\"id\":\"组匹配\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#组匹配\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 组匹配\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ul',[_c('li',[_vm._v(\"正则表达式的括号表示分组匹配，括号中的模式可以用来匹配分组的内容\")]),_vm._v(\" \"),_c('li',[_vm._v(\"使用组匹配的时候，不宜使用\"),_c('code',[_vm._v(\"g\")]),_vm._v(\"修饰符，否则\"),_c('code',[_vm._v(\"match()\")]),_vm._v(\"方法不回获取分组的内容，可以使用循环配合\"),_c('code',[_vm._v(\"RegExp.prototype.exec()\")]),_vm._v(\"获取每一轮的组捕获\")]),_vm._v(\" \"),_c('li',[_vm._v(\"正则表达式内部可以使用\"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\",\"),_c('code',[_vm._v(\"、2\")]),_vm._v(\"，来获取括号匹配的内容，\"),_c('code',[_vm._v(\"\\\\1\")]),_vm._v(\"表示获取第一个括号匹配的内容\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"非组捕获\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#非组捕获\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 非组捕获\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"(?:x)\")]),_vm._v(\"称为非组捕获，表示不返回该组捕获的内容\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" m \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'abc'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"match\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token regex\"}},[_vm._v(\"/(?:.)b(.)/\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nm \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// [\\\"abc\\\", \\\"c\\\"];\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"先行断言\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#先行断言\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 先行断言\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"x(?=y)\")]),_vm._v(\"称为先行断言，\"),_c('code',[_vm._v(\"x\")]),_vm._v(\"只有在\"),_c('code',[_vm._v(\"y\")]),_vm._v(\"前面才匹配，\"),_c('code',[_vm._v(\"y\")]),_vm._v(\"不计入匹配结果\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" m \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'xy'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"match\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token regex\"}},[_vm._v(\"/x(?:y)/\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nm \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// ['x']\")]),_vm._v(\"\\n\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h4',{attrs:{\"id\":\"先行否定断言\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#先行否定断言\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 先行否定断言\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',[_c('code',[_vm._v(\"x(?!y)\")]),_vm._v(\"称为先行否定断言，只有不再\"),_c('code',[_vm._v(\"y\")]),_vm._v(\"前面的\"),_c('code',[_vm._v(\"x\")]),_vm._v(\"才匹配，\"),_c('code',[_vm._v(\"y\")]),_vm._v(\"不计入匹配结果\")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" m \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'abcdca'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"match\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token regex\"}},[_vm._v(\"/c(?!a)/\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nm \"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// ['c']\")]),_vm._v(\"\\n\")])])])}]\n\nexport { render, staticRenderFns }"]}