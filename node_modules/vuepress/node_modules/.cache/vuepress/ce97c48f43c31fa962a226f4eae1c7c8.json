{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/docker/basic.md?vue&type=template&id=8515b8f0&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/docker/basic.md","mtime":1541724724875},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1541724725613},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1541724727750},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1541724725613},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1541724727749},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1541724727821}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _c(\"blockquote\", [\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"容器技术的代表（将程序隔离打包）\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"解决了软件包的问题，理顺了开发与运维的差异\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"打包、发布、运行\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"官网：\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://www.docker.com\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\"\n              }\n            },\n            [_vm._v(\"www.docker.com\"), _c(\"OutboundLink\")],\n            1\n          )\n        ])\n      ])\n    ]),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _vm._m(12),\n    _vm._v(\" \"),\n    _vm._m(13),\n    _vm._v(\" \"),\n    _vm._m(14),\n    _vm._v(\" \"),\n    _vm._m(15),\n    _vm._v(\" \"),\n    _vm._m(16),\n    _vm._v(\" \"),\n    _vm._m(17),\n    _vm._m(18),\n    _vm._v(\" \"),\n    _vm._m(19)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"docker-基础知识\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#docker-基础知识\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Docker 基础知识\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", { attrs: { src: \"/docker.png\", alt: \"/docker.png\" } })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"docker不是虚拟机\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#docker不是虚拟机\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Docker不是虚拟机\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: { src: \"/vm-vs-docker.png\", alt: \"/vm-vs-docker.png\" }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"术语\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#术语\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 术语\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"English\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"中文\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"host\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"宿主机\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"image\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"镜像\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"container\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"容器\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"registry\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"仓库\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"daemon\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"守护程序\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"client\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"客户端\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"架构图\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#架构图\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 架构图\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", { attrs: { src: \"/docker-01.png\", alt: \"/docker-01.png\" } }),\n      _vm._v(\" \"),\n      _c(\"img\", { attrs: { src: \"/docker-02.png\", alt: \"/docker-02.png\" } })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"常用命令\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#常用命令\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 常用命令\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"\\ndocker pull               \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 获取docker镜像\")\n          ]),\n          _vm._v(\"\\ndocker build              \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 创建docker镜像\")\n          ]),\n          _vm._v(\"\\ndocker images             \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 查看本地所有docker镜像\")\n          ]),\n          _vm._v(\"\\ndocker rmi \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"镜像ID\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"        \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 删除镜像\")\n          ]),\n          _vm._v(\"\\n\\ndocker run                \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 运行容器\")\n          ]),\n          _vm._v(\"\\ndocker \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"ps\")]),\n          _vm._v(\"                 \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 查看当前正在运行的docker容器\")\n          ]),\n          _vm._v(\"\\ndocker \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"ps\")]),\n          _vm._v(\" -a              \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 显示所有的容器\")\n          ]),\n          _vm._v(\"\\ndocker \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"rm\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"容器ID\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"         \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 删除容器\")\n          ]),\n          _vm._v(\"\\ndocker stop \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"容器ID\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"       \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 停止指定ID的docker容器\")\n          ]),\n          _vm._v(\"\\n\\ndocker \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cp\")]),\n          _vm._v(\"      \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 在host和container之间拷贝文件\")\n          ]),\n          _vm._v(\"\\ndocker commit  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 保存改动为新的image\")\n          ]),\n          _vm._v(\"\\neg. \\ndocker \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cp\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"文件名\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"容器ID\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\":\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"容器中的文件路径\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"     \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 拷贝文件到docker容器的指定路径中（暂时的，不会保存）\")\n          ]),\n          _vm._v(\"\\ndocker commit -m \"),\n          _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'test'\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"容器ID\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _vm._v(\"新的镜像名称\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"  \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 提交保存docker容器的修改\")\n          ]),\n          _vm._v(\"\\n\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"dockerfile语法\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#dockerfile语法\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Dockerfile语法\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"命令\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"用途\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"FROM\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"base image\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"RUN\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"执行命令\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"ADD\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"添加文件\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"COPY\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"拷贝文件\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"CMD\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"执行命令\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"EXPOSE\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"暴露端口\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"WORKDIR\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"指定路径\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"MAINTAINER\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"维护者\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"ENV\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"设定环境变量\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"ENTRYPOINT\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"容器入口\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"USER\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"指定用户\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"VOLUME\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"mount point\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [_vm._v(\"Dockerfile中的每一行都产生一个新层\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"volume\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#volume\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Volume\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"p\", [\n        _vm._v(\"提供\"),\n        _c(\"code\", [_vm._v(\"独立\")]),\n        _vm._v(\"与容器之外的\"),\n        _c(\"code\", [_vm._v(\"持久化\")]),\n        _vm._v(\"存储\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"registry\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#registry\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" Registry\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [_c(\"p\", [_vm._v(\"镜像仓库\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n        _c(\"code\", [\n          _vm._v(\"\\ndocker search whalesay        \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 搜索仓库\")\n          ]),\n          _vm._v(\"\\n\\ndocker pull whalesay          \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 拉取仓库\")\n          ]),\n          _vm._v(\"\\n\\ndocker push myname/whalesay   \"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"# 推送仓库\")\n          ]),\n          _vm._v(\"\\n\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"国内的一些仓库\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#国内的一些仓库\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 国内的一些仓库\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"daocloud\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"时速云\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"aliyun\")])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}