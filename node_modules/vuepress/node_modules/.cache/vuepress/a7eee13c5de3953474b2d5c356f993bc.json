{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/set-and-map.md?vue&type=template&id=f36344a2&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/set-and-map.md","mtime":1537926977697},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926978403},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537926981332},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926978403},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537926981332},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537926981441}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"set-和-map-数据结构\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#set-和-map-数据结构\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Set 和 Map 数据结构\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"set\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#set\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Set\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"类似于数组，成员唯一\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"可以接受一个数组作为构造函数的参数，可以实现数组的去重\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"set-实例的属性和方法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#set-实例的属性和方法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Set 实例的属性和方法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"Set 具有以下属性\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"Set.prototype.constructor\")]),\n          _vm._v(\"构造函数，默认就是\"),\n          _c(\"code\", [_vm._v(\"Set\")]),\n          _vm._v(\"函数\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"Set.prototype.size\")]),\n          _vm._v(\"返回\"),\n          _c(\"code\", [_vm._v(\"Set\")]),\n          _vm._v(\"实例的成员总数\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"Set 具有以下四个方法\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"add(value)\")]),\n          _vm._v(\"添加值，返回\"),\n          _c(\"code\", [_vm._v(\"Set\")]),\n          _vm._v(\"结构本身\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"delete(value)\")]),\n          _vm._v(\"删除值，返回布尔值，表示是否删除成功\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"has(value)\")]),\n          _vm._v(\"返回布尔值，表示\"),\n          _c(\"code\", [_vm._v(\"Set\")]),\n          _vm._v(\"是否含有该成员\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"clear()\")]),\n          _vm._v(\"清除所有成员，没有返回值\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"Array.from()\")]),\n        _vm._v(\" 可以将\"),\n        _c(\"code\", [_vm._v(\"Set\")]),\n        _vm._v(\"结构转化为数组\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"遍历操作\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#遍历操作\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 遍历操作\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"keys()\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"values()\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"entries()\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"forEach()\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"keys()\")]),\n        _vm._v(\" 与\"),\n        _c(\"code\", [_vm._v(\"values()\")]),\n        _vm._v(\"两个方法的行为完全一致，因为\"),\n        _c(\"code\", [_vm._v(\"Set\")]),\n        _vm._v(\"结构没有键，只有值\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"weakset\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#weakset\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" WeakSet\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"与 Set 类似，有两点不同\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"WeakSet 只能存对象\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"WeakSet 中的对象都是弱引用，即垃圾回收机制不考虑 WeakSet 对该对象的引用，也就是说，如果其他对象都不再引用该对象，那么垃圾回收机制会自动回收该对象所占用的内存，不考虑该对象还存在于 WeakSet 之中\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"map\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#map\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Map\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"键值对的数据结构，传统的 Object 只能采用\"),\n        _c(\"code\", [_vm._v(\"字符串-值\")]),\n        _vm._v(\"的形式存储数据，Map 可以采用\"),\n        _c(\"code\", [_vm._v(\"值-值\")]),\n        _vm._v(\"的形式存储数据，是更完善的\"),\n        _c(\"code\", [_vm._v(\"hash\")]),\n        _vm._v(\"结构\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"实例的属性和方法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#实例的属性和方法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 实例的属性和方法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"size\")]), _vm._v(\"返回成员的个数\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"set(key, value)\")]),\n          _vm._v(\"添加键值对，如果键已经存在，则覆盖\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"get(key)\")]),\n          _vm._v(\"获取\"),\n          _c(\"code\", [_vm._v(\"key\")]),\n          _vm._v(\"对应的值，如果不存在则返回 \"),\n          _c(\"code\", [_vm._v(\"undefined\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"hasKey(key)\")]),\n          _vm._v(\"返回布尔值，某个键是否在该\"),\n          _c(\"code\", [_vm._v(\"Map\")]),\n          _vm._v(\"结构中\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"delete(key)\")]),\n          _vm._v(\"删除一个键，返回 \"),\n          _c(\"code\", [_vm._v(\"true\")]),\n          _vm._v(\"，\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"clear()\")]), _vm._v(\"清除所有键值对\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"weakset-2\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#weakset-2\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" WeakSet\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"参考 WeakSet\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}