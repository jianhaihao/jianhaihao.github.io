{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/class-inherit.md?vue&type=template&id=6e0a5294&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/class-inherit.md","mtime":1537933948864},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537933952458},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537933952457},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537933952565}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"class-的继承-待补充\"><a class=\"header-anchor\" href=\"#class-的继承-待补充\" aria-hidden=\"true\">#</a> Class 的继承 (待补充)</h1>\n<h2 id=\"简介\"><a class=\"header-anchor\" href=\"#简介\" aria-hidden=\"true\">#</a> 简介</h2>\n<ul>\n<li>Class 可以通过<code>extend</code>关键字继承，比<code>ES5</code>修改原型链继承容易得多</li>\n<li>子类必须在<code>constructor</code>方法中调用<code>super()</code>方法，只有在使用<code>super</code>方法后，才能使用<code>this</code>关键字，否则会报错</li>\n<li>子类实例的构建时对父类实例的加工</li>\n<li>父类的静态方法也能被子类继承</li>\n<li>可以通过<code>Object.getPropotypeOf()</code>来判断一个类是否为另一个类的子类</li>\n</ul>\n<h2 id=\"super-关键字\"><a class=\"header-anchor\" href=\"#super-关键字\" aria-hidden=\"true\">#</a> super 关键字</h2>\n<p>*<code>super</code>即可作为对象使用也可作为函数使用，作为函数使用时，也可以当作对象使用</p>\n<ol>\n<li>ES6 要求必须在子类的构造函数中调用<code>super</code>方法</li>\n<li><code>super</code>虽然代表父类的构造函数，但却指向子类的实例</li>\n<li>作为对象时，<code>super</code>在普通方法中，相当于 指向父类的<code>prototype</code>对象</li>\n<li>ES6 规定，子类方法通过<code>super</code>调用父类的方法的时候，<code>this</code>指向子类的实例</li>\n</ol>\n<h2 id=\"类的-prototype-属性和-proto-属性\"><a class=\"header-anchor\" href=\"#类的-prototype-属性和-proto-属性\" aria-hidden=\"true\">#</a> 类的 prototype 属性和 <strong><strong>proto</strong></strong> 属性</h2>\n</div>\n",null]}