{"remainingRequest":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\Products\\jianhaihao.github.io\\docs\\data-structure\\stack.md?vue&type=template&id=47ebb404&","dependencies":[{"path":"D:\\Products\\jianhaihao.github.io\\docs\\data-structure\\stack.md","mtime":1553174919245},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1552483045256},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1552483045254},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1552483045520}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"栈\"><a class=\"header-anchor\" href=\"#栈\" aria-hidden=\"true\">#</a> 栈</h1>\n<blockquote>\n<p>栈也是一种线性结构\n相比数组，栈对应的操作是数组的子集\n只能从一端添加元素，也只能从一端取出元素，这一端称为栈顶\n栈是一种先进后出的数据结构，Last In First Out (LIFO)</p>\n</blockquote>\n<p>栈的应用：</p>\n<blockquote>\n<p>undo 操作 - 编辑器\n系统调用栈 - 操作系统\n括号匹配 - 编译器</p>\n</blockquote>\n<h2 id=\"栈的复杂度分析\"><a class=\"header-anchor\" href=\"#栈的复杂度分析\" aria-hidden=\"true\">#</a> 栈的复杂度分析</h2>\n<p>ArrayStack<E></p>\n<blockquote>\n<ul>\n<li>void push(E)     O(1) 均摊</li>\n<li>E pop()          O(1) 均摊</li>\n<li>E peek()         O(1)</li>\n<li>int getSize()    O(1)</li>\n<li>boolean isEmpty  O(1)</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>栈顶元素反映了在嵌套的层次关系中，最近的需要匹配的元素</p>\n</blockquote>\n</div>\n",null]}