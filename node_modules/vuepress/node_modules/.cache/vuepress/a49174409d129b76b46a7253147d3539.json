{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/wrapper.md?vue&type=template&id=50be9758&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/wrapper.md","mtime":1537926977693},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926978403},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537926981332},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926978403},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537926981332},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537926981441}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"wrapper-包装对象\\\"><a href=\\\"#wrapper-包装对象\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> wrapper 包装对象</h1> <h2 id=\\\"概述\\\"><a href=\\\"#概述\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 概述</h2> <p>JavaScript 三种基本数据类型，布尔值、字符串、数值，在一定情况下会自动转化为对象，也就是包装对象</p> <p>所谓包装对象，也就是分别与布尔值、字符串、数值对应的<code>Boolean</code>、<code>String</code>、<code>Number</code>对象，这三个原生对象可以把原始数据类型的值包装成对象使用</p> <p>JavaScript 这么做的目的是为了践行一切事物可以当作对象处理的思想，可以用处理对象的思维处理任何变量</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">// 也可以去掉 new 生成包装对象</span>\\n<span class=\\\"token keyword\\\">var</span> v1 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Boolean</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> v2 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">String</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'hello world'</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">var</span> v3 <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Number</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">123</span><span class=\\\"token punctuation\\\">)</span>\\n\\nv1 <span class=\\\"token operator\\\">===</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token comment\\\">// false</span>\\nv2 <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">'hello word'</span> <span class=\\\"token comment\\\">// false</span>\\nv3 <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">123</span> <span class=\\\"token comment\\\">// false</span>\\n</code></pre></div><h2 id=\\\"实例方法\\\"><a href=\\\"#实例方法\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 实例方法</h2> <p>从 <code>Object</code> 对象继承而来</p> <p><strong>valueOf()</strong></p> <p>返回包装对象原始的值</p> <p><strong>toString()</strong></p> <p>返回包装对象的字符串表达形式</p> <h2 id=\\\"原始类型与实例对象的自动转换\\\"><a href=\\\"#原始类型与实例对象的自动转换\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> 原始类型与实例对象的自动转换</h2> <p>对于原始类型的值，JavaScript 会自动将其转换为包装对象，可直接使用包装对象的属性和方法</p> <p>举个🌰</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">var</span> a <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'123'</span>\\na<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token comment\\\">// 3</span>\\n</code></pre></div><p><code>a</code>变量是一个字符串，它本身是没有任何属性和方法，在执行的过程中，JavaScript 引擎会将<code>a</code>变量转化成一个<code>String</code>类型的包装对象，<code>String</code>对象包含很多可以操作字符串的方法和属性，所以可以直接使用<code>a.length</code></p> <ul><li>可以通过在包装对象的<code>prototype</code>属性上面添加自定义方法和属性，与之对应的基本数据类型的变量就可以使用自定义的方法和属性</li></ul>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}