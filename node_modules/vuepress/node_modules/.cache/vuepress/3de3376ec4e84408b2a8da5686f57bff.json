{"remainingRequest":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js??ref--1-2!D:\\Products\\jianhaihao.github.io\\docs\\linux-up\\manager.md?vue&type=template&id=06b69316&","dependencies":[{"path":"D:\\Products\\jianhaihao.github.io\\docs\\linux-up\\manager.md","mtime":1552483032807},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1552483045256},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1552483034552},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vue-loader\\lib\\index.js","mtime":1552483045254},{"path":"D:\\Products\\jianhaihao.github.io\\node_modules\\vuepress\\lib\\webpack\\markdownLoader.js","mtime":1552483045520}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"系统管理\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#系统管理\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 系统管理\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"有计划的重启，是服务器维护的基本原则\"),\n          _c(\"br\"),\n          _vm._v(\"\\n硬盘的速度远比内存低，内存的速度远比CPU低\"),\n          _c(\"br\"),\n          _vm._v(\n            \"\\nCPU在同一个时钟周期内只能运算一个指令（多核CPU时指具体的一个核）\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"进程管理\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#进程管理\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 进程管理\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [_c(\"p\", [_vm._v(\"进程：正在运行的程序或命令\")])]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [_vm._v(\"判断服务器健康状态\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"查看系统中的所有进程\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"杀死进程\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"进程查看\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#进程查看\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 进程查看\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看系统中的所有进程，使用BSD操纵系统格式\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"ps\")\n            ]),\n            _vm._v(\" aux\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看系统中的所有进程，使用Linux标准命令格式\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"ps\")\n            ]),\n            _vm._v(\" -le\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 选项:\")\n            ]),\n            _vm._v(\"\\n- a \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 显示一个终端的所有进程，除了会话引线\")\n            ]),\n            _vm._v(\"\\n- u \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 显示进程的归属用户及内存的使用情况\")\n            ]),\n            _vm._v(\"\\n- x \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 显示没有控制终端的进程\")\n            ]),\n            _vm._v(\"\\n- -l \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 长格式显示，显示更加详细的信息\")\n            ]),\n            _vm._v(\"\\n- -e \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 显示所有进程，和-A作用一样 \")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 示例：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"ps\")\n            ]),\n            _vm._v(\" aux \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"|\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"grep\")\n            ]),\n            _vm._v(\" httpd  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看httpd进程\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"####################分割线######################\")\n            ]),\n            _vm._v(\"\\n\\npstree \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"选项\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 选项:\")\n            ]),\n            _vm._v(\"\\n- p \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 显示进程的PID\")\n            ]),\n            _vm._v(\"\\n- u \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 显示进程的所属用户\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"####################分割线######################\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"top\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"选项\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"\\n\\n- d 秒数 \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 指定top命令每隔几秒更新，默认是3秒\")\n            ]),\n            _vm._v(\"\\n- n 次数 \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v('# 指定top命令执行从次数，一般和\"-b\"选项合用')\n            ]),\n            _vm._v(\"\\n- b  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v('# 使用批处理模式输出，一般和\"-n\"选项合用')\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 在top命令的交互模式当中可以执行的命令：\")\n            ]),\n            _vm._v(\"\\n\\n- ?或h \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 显示交互模式的帮助\")\n            ]),\n            _vm._v(\"\\n- P  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 以CPU使用率排序，默认是此项\")\n            ]),\n            _vm._v(\"\\n- M  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 以内存的使用率排序\")\n            ]),\n            _vm._v(\"\\n- N  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 以PID排序\")\n            ]),\n            _vm._v(\"\\n- q  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 退出top\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 使用top查看所有进程\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"top\")\n            ]),\n            _vm._v(\" -b -n 1 \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\">\")\n            ]),\n            _vm._v(\" /root/top.log\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"####################分割线######################\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"kill\")\n            ]),\n            _vm._v(\" -l  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看可用的进程信号\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"kill\")\n            ]),\n            _vm._v(\" -1 2235  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 重启进程\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"kill\")\n            ]),\n            _vm._v(\" -9 2236  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 强制杀死进程\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"####################分割线######################\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"killall\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"选项\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"信号\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" 进程名  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 按照进程名杀死进程\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 选项:\")\n            ]),\n            _vm._v(\"\\n- i  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 交互式，询问是否要杀死某个进程\")\n            ]),\n            _vm._v(\"\\n- I  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 忽略进程名的大小写\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"####################分割线######################\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"pkill\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"选项\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"信号\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" 进程名  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 按照进程名杀死进程\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 选项:\")\n            ]),\n            _vm._v(\"\\n- t 终端号 \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 按照终端号踢出用户\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"####################分割线######################\")\n            ]),\n            _vm._v(\"\\n\\nw  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 使用w命令查询本机已经登录的用户\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"pkill\")\n            ]),\n            _vm._v(\" -9 -t pts/1   \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 强制杀死从pts/1虚拟终端登录的进程\")\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _c(\"img\", {\n          attrs: { src: \"/ps-commend-out_1.jpg\", alt: \"/ps-commend-out_1.jpg\" }\n        }),\n        _vm._v(\" \"),\n        _c(\"img\", {\n          attrs: { src: \"/ps-commend-out_2.jpg\", alt: \"/ps-commend-out_2.jpg\" }\n        }),\n        _vm._v(\" \"),\n        _c(\"img\", { attrs: { src: \"/top_1.jpg\", alt: \"/top_1.jpg\" } }),\n        _vm._v(\" \"),\n        _c(\"img\", { attrs: { src: \"/top_2.jpg\", alt: \"/top_2.jpg\" } }),\n        _vm._v(\" \"),\n        _c(\"img\", { attrs: { src: \"/top_3.jpg\", alt: \"/top_3.jpg\" } }),\n        _vm._v(\" \"),\n        _c(\"img\", { attrs: { src: \"/top_4.jpg\", alt: \"/top_4.jpg\" } }),\n        _vm._v(\" \"),\n        _c(\"img\", { attrs: { src: \"/top_5.jpg\", alt: \"/top_5.jpg\" } })\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"工作管理\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#工作管理\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 工作管理\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"系统资源查看\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#系统资源查看\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 系统资源查看\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"系统定时任务\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#系统定时任务\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 系统定时任务\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}