{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/fs.md?vue&type=template&id=58c2c4ae&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/fs.md","mtime":1537933948876},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537933952458},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537933952457},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537933952565}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"fs-文件系统\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#fs-文件系统\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs 文件系统\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [_c(\"p\", [_vm._v(\"提供了一些与系统文件交互的 api\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"所有的系统文件操作都提供同步和异步两种方式\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"文件路径\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#文件路径\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 文件路径\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"可以是以下三种\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"字符串(相对路径、绝对路径)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Buffer\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"file:\")]), _vm._v(\"协议的 url 对象\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"线程池的使用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#线程池的使用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 线程池的使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"除了\"),\n        _c(\"code\", [_vm._v(\"fs.FSWatcher()\")]),\n        _vm._v(\"和显示同步的方法外,都是用了线程池去操作\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"文件描述符\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#文件描述符\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 文件描述符\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在 POSIX 系统中内核为所有进程维护者一张当前打开着的文件与资源的表格,每个打开的文件都会分配一个名为文件描述符的数值标识,可以根据这些数值标识来追踪每个文件,Windows 也适用了类似的机制来追踪资源,为了方便,Node 抽象了不同操作系统之间的差异,为所有打开的文件分配了数值的文件描述符\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"fs.open()\")]),\n        _vm._v(\n          \"方法用于分配一个新的文件描述符.一旦分配了,可以利用文件描述符读取数据,写入数据或者查看文件信息\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"大多数操作系统都会限制打开文件描述符的数量,所以当操作完成时须关闭文件描述符,否则造成内存泄漏,应用崩溃\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-fswatcher-类\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#fs-fswatcher-类\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.FSWatcher 类\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"fs.watch()\")]),\n        _vm._v(\"会返回一个\"),\n        _c(\"code\", [_vm._v(\"fs.FSWatcher\")]),\n        _vm._v(\"对象,每当监视的文件发生变化,都会出发\"),\n        _c(\"code\", [_vm._v(\"change\")]),\n        _vm._v(\"事件\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"change 事件\")])]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"eventType\")]), _vm._v(\"事件类型\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"filename\")]), _vm._v(\"改变的文件名\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"当被监视的目录和文件发生改变时触发\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"error 事件\")])]),\n      _vm._v(\" \"),\n      _c(\"ul\", [_c(\"li\", [_c(\"code\", [_vm._v(\"error\")])])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"当监视文件发生错误时触发\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"watch.close()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"停止监视文件的变化\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-readstream-类\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#fs-readstream-类\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.ReadStream 类\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"成功调起\"),\n        _c(\"code\", [_vm._v(\"fs.createReadStream()\")]),\n        _vm._v(\"会返回一个\"),\n        _c(\"code\", [_vm._v(\"fs.readStream\")]),\n        _vm._v(\"对象\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"close 事件\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"fs.readStream\")]),\n        _vm._v(\"底层的文件描述符被关闭时触发\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"open 事件\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"fs.readStream\")]),\n        _vm._v(\"文件描述符被打开时触发\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"ready 事件\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"fs.readStream\")]), _vm._v(\"准备好时触发\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"readStream.bytesRead\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"已读取的字节数\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"readStream.path\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"流正在读取文件的路径\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-stats-类\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#fs-stats-类\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.stats 类\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"fs.stats\")]), _vm._v(\"类提供了文件的信息\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"获取\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"fs.stat()\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"fs.lstat()\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"fs.fstat()\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"如果传入函数的\"),\n        _c(\"code\", [_vm._v(\"options\")]),\n        _vm._v(\"的\"),\n        _c(\"code\", [_vm._v(\"bigint\")]),\n        _vm._v(\"属性为\"),\n        _c(\"code\", [_vm._v(\"true\")]),\n        _vm._v(\",则数值则会使\"),\n        _c(\"code\", [_vm._v(\"bitint\")]),\n        _vm._v(\"型,而不是\"),\n        _c(\"code\", [_vm._v(\"number\")]),\n        _vm._v(\"型\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"method\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"desc\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.isCharacterDevice()\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"是否是一个字符设备\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.isDirectory()\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"是否是一个目录\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.isFIFO()\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"是否是一个先进先出的管道\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.isFile()\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"是否是一个文件\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.isSocket\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"是否是一个 socket\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.isSymbolicLink()\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [\n              _vm._v(\"是否是一个符号链接,只有在使用\"),\n              _c(\"code\", [_vm._v(\"fs.lstat()\")]),\n              _vm._v(\"有用\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"attribute\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"desc\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.dev\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"包含文件设备的数值标识\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.ino\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件系统特定的文件索引节点数值\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.mode\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"标识文件类型与模式的位域\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.nlink\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件硬链接的数量\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.uid\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件拥有者的数值型用户标识\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.gid\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件拥有者所在群组数值型群组标识\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.size\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件的字节大小\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.blksize\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件用语 I/O 操作块的大小\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.block\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"分配给文件块的数量\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.atimeMs\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件最后一次被访问的时间戳\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.mtimeMs\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件最后一次被修改的时间戳\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.ctimeMs\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件状态最后一次被改变的时间戳\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.birthtimeMs\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件创建时间的时间戳\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.atime\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件最后一次被访问的时间\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.mtime\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件最后一次被修改的时间\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.ctime\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件状态最后一次被改变的时间\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"stats.birthtime\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"文件的创建时间\")])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"stat-时间的值\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#stat-时间的值\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" stat 时间的值\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"时间戳均精确到毫秒,精度与平台相关\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-writestream-类\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#fs-writestream-类\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.WriteStream 类\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"是一个可写流\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"close 事件\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"WriteStream\")]),\n        _vm._v(\"底层的文件描述符被关闭时触发\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"open 事件\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"文件被打开时触发\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"ready 事件\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"fs.WriteStream\")]),\n        _vm._v(\"准备好的时候触发\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"writeStream.bytesWritten\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"已经写入的字节数\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"writeStream.path\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"流正在写入的文件的路径,指定在\"),\n        _c(\"code\", [_vm._v(\"fs.createWriteStream()\")]),\n        _vm._v(\"的第一个参数\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-access-path-mode-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-access-path-mode-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.access(path[, mode], callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"测试\"),\n        _c(\"code\", [_vm._v(\"path\")]),\n        _vm._v(\"指定目录或文件的用户权限\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"参数\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"path\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"mode\")]),\n          _vm._v(\"默认\"),\n          _c(\"code\", [_vm._v(\"fs.constants.F_OK\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"callback\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [_c(\"li\", [_vm._v(\"error\")])])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"不建议在打开,写入,读取文件的时候调用此方法\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"fs.accessSync()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"fs.access()\")]), _vm._v(\"方法的同步版本\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-appendfile-path-data-options-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-appendfile-path-data-options-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.appendFile(path, data[, options], callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"异步追加数据到文件,如果文件不存在则创建文件\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"fs.appendFileSync()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"fs.appendFile()\")]),\n        _vm._v(\"方法的同步版本\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-chmod-path-mode-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-chmod-path-mode-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.chmod(path, mode, callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"改变文件的权限\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"mode 常量\")]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"mode\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"Octal\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"desc\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"fs.constants.S_IRUSR\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0o400\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"read by owner\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"fs.constants.S_IWUSR\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0o200\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"write by owner\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"fs.constants.S_IXUSR\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0o100\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"execute/search by owner\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"fs.constants.S_IRGRP\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0o40\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"read by group\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"fs.constants.S_IWGRP\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0o20\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"write by group\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"fs.constants.S_IXGRP\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0o10\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"execute/search by group\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"fs.constants.S_IROTH\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0o4\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"read by others\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"fs.constants.S_IWOTH\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0o2\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"white by others\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"fs.constants.S_IXOTH\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"0o1\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"execute/search by others\")])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"fs.chmodSync()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"fs.chmod()\")]), _vm._v(\"的同步版本\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-chown-path-uid-gid-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-chown-path-uid-gid-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.chown(path, uid, gid, callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"问遍文件所有者和群组\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"fs.chownSync()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"fs.chown()\")]), _vm._v(\"的同步版本\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-constants\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#fs-constants\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.constants\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"包含常用文件操作系统的常量\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-copyfile-src-dest-flags-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-copyfile-src-dest-flags-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.copyFile(src, dest[, flags], callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"复制文件\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"fs.copyFileSync()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"fs.copyFile()\")]), _vm._v(\"的同步版本\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-createreadstream-path-options\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-createreadstream-path-options\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.createReadStream(path[, options])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"创建一个文件读入流\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"参数\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"path\")]), _vm._v(\"文件路径\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"options\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"flags\")]),\n              _vm._v(\"支持的文件系统 flag,默认为\"),\n              _c(\"code\", [_vm._v(\"r\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"encoding\")]),\n              _vm._v(\"默认为\"),\n              _c(\"code\", [_vm._v(\"null\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"fd\")]),\n              _vm._v(\"默认为\"),\n              _c(\"code\", [_vm._v(\"null\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"mode\")]),\n              _vm._v(\"默认为\"),\n              _c(\"code\", [_vm._v(\"0o666\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"autoClose\")]),\n              _vm._v(\"默认为\"),\n              _c(\"code\", [_vm._v(\"true\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"start\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"end\")]),\n              _vm._v(\"默认\"),\n              _c(\"code\", [_vm._v(\"Infinity\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"highWaterMark\")]),\n              _vm._v(\"默认\"),\n              _c(\"code\", [_vm._v(\"64*1024\")])\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-createwritestream-path-options\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-createwritestream-path-options\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.createWriteStream(path[, options])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"创建一个文件写入流\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"参数\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"path\")]), _vm._v(\"文件路径\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"options\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [_c(\"code\", [_vm._v(\"flags\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"encoding\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"fd\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"mode\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"autoClose\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"start\")])])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-existsync-path\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#fs-existsync-path\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.existSync(path)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"同步判断路径是否存在\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-readdir-path-options-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-readdir-path-options-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.readdir(path[, options], callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"读取一个目录的内容\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"参数\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"path\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"options\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [_c(\"li\", [_c(\"code\", [_vm._v(\"encoding\")])])])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"callback\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [_c(\"code\", [_vm._v(\"err\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"files\")]),\n              _vm._v(\"不包括\"),\n              _c(\"code\", [_vm._v(\".\")]),\n              _vm._v(\"和\"),\n              _c(\"code\", [_vm._v(\"..\")]),\n              _vm._v(\"文件名的数组\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"fs.readdir()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"fs.readdir()\")]), _vm._v(\"同步版本\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-readfile-path-options-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-readfile-path-options-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.readFile(path[, options], callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"读取文件\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"参数\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"path\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"options\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"encoding\")]),\n              _vm._v(\"编码格式,默认为\"),\n              _c(\"code\", [_vm._v(\"null\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"flags\")])])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"callback\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [_c(\"code\", [_vm._v(\"err\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"data\")]), _vm._v(\"文件数据\")])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"优先使用\"),\n        _c(\"code\", [_vm._v(\"fs.createReadStream()\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"fs.readFileSync()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"fs.readFile()\")]), _vm._v(\"同步版本\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-unlink-path-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#fs-unlink-path-callback\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.unlink(path, callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"删除文件\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"提供同步的\"),\n        _c(\"code\", [_vm._v(\"fs.unlinkSync()\")]),\n        _vm._v(\"版本\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-rename-oldpath-newpath-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-rename-oldpath-newpath-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.rename(oldPath, newPath, callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"重命名文件\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"提供同步的\"),\n        _c(\"code\", [_vm._v(\"fs.renameSync()\")]),\n        _vm._v(\"版本\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-mkdir-path-mode-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-mkdir-path-mode-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.mkdir(path[, mode], callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"异步创建目录\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"提供同步的\"),\n        _c(\"code\", [_vm._v(\"fs.mkdirSync()\")]),\n        _vm._v(\"方法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-rmdir-path-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#fs-rmdir-path-callback\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.rmdir(path, callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"异步删除目录\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"提供同步的\"),\n        _c(\"code\", [_vm._v(\"fs.rmdir()\")]),\n        _vm._v(\"方法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-writefile-path-data-options-callback\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-writefile-path-data-options-callback\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.writeFile(path, data[, options], callback)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"将数据写入文件,若文件已经存在,则覆盖\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"参数\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"path\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"data\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"options\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [_c(\"code\", [_vm._v(\"encoding\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"mode\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"flag\")])])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"callback\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [_c(\"li\", [_c(\"code\", [_vm._v(\"err\")])])])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"fs.writeFileSync()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"code\", [_vm._v(\"fs.writeFile()\")]), _vm._v(\"的同步版本\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"fs-watch-filename-options-listener\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#fs-watch-filename-options-listener\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" fs.watch(filename[, options[, listener]])\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"监视\"),\n        _c(\"code\", [_vm._v(\"filename\")]),\n        _vm._v(\"的变化,对象可以是一个目录或者文件,返回一个\"),\n        _c(\"code\", [_vm._v(\"fs.FSWatcher\")]),\n        _vm._v(\"对象\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"参数\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"filename\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"options\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"persistent\")]),\n              _vm._v(\"如果文件正在被监视,进程是否继续运行,默认为\"),\n              _c(\"code\", [_vm._v(\"true\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"recursive\")]),\n              _vm._v(\"是否全部子目录应该被监视,默认为\"),\n              _c(\"code\", [_vm._v(\"false\")])\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [\n              _c(\"code\", [_vm._v(\"encoding\")]),\n              _vm._v(\"用于传给监听器的文件名的编码,默认\"),\n              _c(\"code\", [_vm._v(\"utf8\")])\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"listener\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [_c(\"code\", [_vm._v(\"eventType\")])]),\n            _vm._v(\" \"),\n            _c(\"li\", [_c(\"code\", [_vm._v(\"filename\")])])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"监听器的回调是绑定在\"),\n        _c(\"code\", [_vm._v(\"fs.FSWatcher\")]),\n        _vm._v(\"的\"),\n        _c(\"code\", [_vm._v(\"change\")]),\n        _vm._v(\"事件上面\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}