{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/linux/demo.md?vue&type=template&id=0c2b0a78&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/linux/demo.md","mtime":1543633370672},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543633371632},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1543633374007},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543633371632},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1543633374006},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1543633374107}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"linux服务器搭建完整应用\"><a class=\"header-anchor\" href=\"#linux服务器搭建完整应用\" aria-hidden=\"true\">#</a> linux服务器搭建完整应用</h1>\n<p>服务器环境：CentOS7.5(64位)</p>\n<h2 id=\"安装docker\"><a class=\"header-anchor\" href=\"#安装docker\" aria-hidden=\"true\">#</a> 安装Docker</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> -qO- https://get.docker.com <span class=\"token operator\">|</span> sh\n\n<span class=\"token comment\">#########################</span>\n<span class=\"token comment\"># 若提示wget命令不存在，执行下面命令安装wget</span>\nyum -y <span class=\"token function\">install</span> <span class=\"token function\">wget</span>\n<span class=\"token comment\">#########################</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">usermod</span> -aG docker root\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> docker start\n\ndocker info\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"安装swoft\"><a class=\"header-anchor\" href=\"#安装swoft\" aria-hidden=\"true\">#</a> 安装swoft</h2>\n<p><a href=\"https://hub.docker.com/r/swoft/swoft/\" target=\"_blank\" rel=\"noopener noreferrer\">swoft镜像<OutboundLink/></a></p>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token comment\"># 确保docker开启，如未开启，执行以下命令：</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">service</span> docker start\n\ndocker pull swoft/swoft   <span class=\"token comment\"># 获取swoft镜像</span>\n\ndocker images     <span class=\"token comment\"># 查看本地docker镜像</span>\n\ndocker run -p 80:80 --name swoft  --rm -d swoft/swoft:latest   <span class=\"token comment\"># 运行swoft容器</span>\n\ndocker <span class=\"token function\">ps</span> <span class=\"token comment\"># 查看当前正在运行的docker容器</span>\n\n<span class=\"token function\">curl</span> localhost  <span class=\"token comment\"># 访问本地，查看swoft是否正常运行</span>\n\n\n<span class=\"token comment\"># 拷贝容器文件到本地</span>\n<span class=\"token function\">cd</span> /home/\n\ndocker <span class=\"token function\">cp</span> swoft:/var/www/swoft <span class=\"token keyword\">.</span>  <span class=\"token comment\"># 注意点号，表示拷贝到当前目录</span>\n\n<span class=\"token comment\"># 从本地文件运行swoft容器：</span>\ndocker run -p 80:80 --name swoft --rm -d -v /home/swoft/:/var/www/swoft swoft/swoft:latest\n\n<span class=\"token comment\"># 停止容器</span>\ndocker stop swoft\n\n<span class=\"token comment\"># 重启容器</span>\ndocker restart swoft\n\n<span class=\"token comment\"># 查看docker日志</span>\ndocker logs swoft\n\n<span class=\"token comment\"># 在docker容器执行其他语言命令</span>\ndocker <span class=\"token function\">exec</span> -it swoft <span class=\"token punctuation\">[</span>命令<span class=\"token punctuation\">]</span>   <span class=\"token comment\"># 执行[命令]</span>\n\ndocker <span class=\"token function\">exec</span> -it swoft php -m   <span class=\"token comment\"># 执行 php -m 命令</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"安装php\"><a class=\"header-anchor\" href=\"#安装php\" aria-hidden=\"true\">#</a> 安装php</h2>\n<blockquote>\n<p>PHP官网：<a href=\"http://php.net\" target=\"_blank\" rel=\"noopener noreferrer\">http://php.net<OutboundLink/></a></p>\n</blockquote>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token comment\"># 安装文件上传与下载命令</span>\nyum -y <span class=\"token function\">install</span> lrzsz\nrz    <span class=\"token comment\"># 上传文件</span>\nsz    <span class=\"token comment\"># 下载文件</span>\n\n<span class=\"token comment\"># 从php官网下载安装包，这里下载了 php-7.2.11.tar.gz</span>\n\n<span class=\"token function\">tar</span> -zxvf php-7.2.11.tar.gz    <span class=\"token comment\"># 解压缩文件</span>\n\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> gcc gcc+ libxml2-devel  <span class=\"token comment\"># 安装所需扩展命令</span>\n\n./configure --prefix<span class=\"token operator\">=</span>/home/php --enable-fpm  <span class=\"token comment\"># 指定PHP安装路径</span>\n\n<span class=\"token comment\">###############################################################</span>\n当配置PHP时出现  make: *** <span class=\"token punctuation\">[</span>ext/fileinfo/libmagic/apprentice.lo<span class=\"token punctuation\">]</span> Error 1 时\n是因为服务器内存不足1G。\n只需要在配置命令中添加 --disable-fileinfo即可 \n<span class=\"token comment\">###############################################################</span>\n\n<span class=\"token function\">make</span> <span class=\"token comment\"># 通过make命令进行构建编译</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span>  <span class=\"token comment\"># 通过make install命令进行安装</span>\n\n<span class=\"token comment\">###############################################################</span>\n<span class=\"token comment\"># 简化PHP执行命令</span>\n<span class=\"token function\">vi</span> ~/.bash_profile     <span class=\"token comment\"># 编辑文件.bash_profile</span>\n<span class=\"token comment\"># 在.bash_profile文件末尾添加：</span>\n<span class=\"token function\">alias</span> php<span class=\"token operator\">=</span>/home/php/bin/php  <span class=\"token comment\"># 配置php的实际安装路径</span>\n<span class=\"token comment\"># 保存并退出</span>\n<span class=\"token comment\"># 执行以下命令使配置生效</span>\n<span class=\"token function\">source</span> ~/.bash_profile\n<span class=\"token comment\">###############################################################</span>\n\n<span class=\"token comment\">###############################################################</span>\n<span class=\"token comment\"># php.ini 文件设置</span>\n<span class=\"token function\">cd</span> /home/php-7.2.11      <span class=\"token comment\"># 进入解压后的php源码包中</span>\n<span class=\"token function\">cp</span> php.ini-development /home/php/lib/   <span class=\"token comment\"># 拷贝到php实际安装到的位置</span>\n<span class=\"token function\">mv</span> php.ini-development php.ini     <span class=\"token comment\"># 修改文件名称</span>\nphp -i <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> php.ini      <span class=\"token comment\"># 查看php.ini使用的文件是否正确</span>\n<span class=\"token comment\">###############################################################</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--><h2 id=\"安装mysql\"><a class=\"header-anchor\" href=\"#安装mysql\" aria-hidden=\"true\">#</a> 安装mysql</h2>\n<blockquote>\n<p>Mysql下载地址：<a href=\"https://dev.mysql.com/downloads/mysql/5.7.html#downloads\" target=\"_blank\" rel=\"noopener noreferrer\">https://dev.mysql.com/downloads/mysql/5.7.html#downloads<OutboundLink/></a></p>\n</blockquote>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>\n<span class=\"token comment\"># 从官网下载安装包，这里下载了 mysql-5.7.24.tar.gz</span>\n\n<span class=\"token function\">tar</span> -zxvf mysql-5.7.24.tar.gz    <span class=\"token comment\"># 解压缩文件</span>\n\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> cmake gcc-c++ ncurses-devel perl-Data-Dumper boost boost-doc boost-devel <span class=\"token comment\"># 安装所需扩展命令</span>\n\n<span class=\"token comment\"># 安装boost</span>\n<span class=\"token function\">cd</span> /home/boost/\n<span class=\"token function\">wget</span> http://www.sourceforge.net/projects/boost/files/boost/1.59.0/boost_1_59_0.tar.gz\n<span class=\"token function\">tar</span> -xvzf boost_1_59_0.tar.gz\n\n<span class=\"token comment\"># 进入mysql解压后的目录，执行下面命令</span>\ncmake \\\n-DCMAKE_INSTALL_PREFIX<span class=\"token operator\">=</span>/home/mysql \\\n-DMYSQL_DATADIR<span class=\"token operator\">=</span>/home/mysql-data/data \\\n-DSYSCONFDIR<span class=\"token operator\">=</span>/etc \\\n-DMYSQL_USER<span class=\"token operator\">=</span>mysql \\\n-DWITH_MYISAM_ST0RAGE_ENGINE<span class=\"token operator\">=</span>1 \\\n-DWITH_INN0BASE_ST0RAGE_ENGINE<span class=\"token operator\">=</span>1 \\\n-DWITH_ARCHIVE_ST0RAGE_ENGINE<span class=\"token operator\">=</span>1 \\\n-DWITH_MEM0RY_ST0RAGE_ENGINE<span class=\"token operator\">=</span>1 \\\n-DWITH_READLINE<span class=\"token operator\">=</span>1 \\\n-DMYSQL_UNIX_ADDR<span class=\"token operator\">=</span>/var/run/mysql/mysql.sock \\\n-DMYSQL_TCP_PORT<span class=\"token operator\">=</span>3306 \\\n-DENABLED_L0CAL_INFILE<span class=\"token operator\">=</span>1 \\\n-DENABLE_D0WNL0ADS<span class=\"token operator\">=</span>1 \\\n-DWITH_PARTITI0N_ST0RAGE_ENGINE<span class=\"token operator\">=</span>1 \\\n-DEXTRA_CHARSETS<span class=\"token operator\">=</span>all \\\n-DDEFAULT_CHARSET<span class=\"token operator\">=</span>utf8mb4 \\\n-DDEFAULT_C0LLATI0N<span class=\"token operator\">=</span>utf8mb4_general_ci \\\n-DWITH_DEBUG<span class=\"token operator\">=</span>0 \\\n-DMYSQL_MAINTAINER_MODE<span class=\"token operator\">=</span>0 \\\n-DWITH_BOOST<span class=\"token operator\">=</span>/home/boost \\\n-DWITH_SSL:STRING<span class=\"token operator\">=</span>bundled \\\n-DWITH_ZLIB:STRING<span class=\"token operator\">=</span>bundled\n\n<span class=\"token function\">make</span>  <span class=\"token comment\"># 执行make命令</span>\n\n<span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span> <span class=\"token comment\"># 执行make install命令</span>\n\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}