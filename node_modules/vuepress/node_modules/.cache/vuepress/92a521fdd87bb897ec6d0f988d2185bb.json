{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/linux/redis.md?vue&type=template&id=77b65843&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/linux/redis.md","mtime":1538011052576},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1538011053294},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1538011056047},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1538011053294},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1538011056047},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1538011056128}],"contextDependencies":[],"result":["\n<div class=\"content\"><h1 id=\"redis\"><a class=\"header-anchor\" href=\"#redis\" aria-hidden=\"true\">#</a> Redis</h1>\n<h2 id=\"redis-基本操作\"><a class=\"header-anchor\" href=\"#redis-基本操作\" aria-hidden=\"true\">#</a> Redis 基本操作</h2>\n<ul>\n<li>源码编译安装</li>\n<li>redis-server start/restart # 启动</li>\n<li>redis-server stop # 停止</li>\n<li>redis-client # 客户端</li>\n</ul>\n<h2 id=\"redis-扩展知识\"><a class=\"header-anchor\" href=\"#redis-扩展知识\" aria-hidden=\"true\">#</a> Redis 扩展知识</h2>\n<ul>\n<li>不仅仅支持简单的 k/v 类型的数据，同时还支持 list, set, map 等数据结构的存储</li>\n<li>redis 支持数据的存储，即 master-slave 模式的数据备份</li>\n<li>redis 支持数据的持久化，可将内存中的数据保存在磁盘中，重启的时候可以再次加载使用</li>\n</ul>\n<h2 id=\"redis-安装\"><a class=\"header-anchor\" href=\"#redis-安装\" aria-hidden=\"true\">#</a> Redis 安装</h2>\n<ul>\n<li>wget http://download.redis.io/releases/redis-4.0.9.tar.gz # 获取源码</li>\n<li>yum install gcc # 安装 gcc</li>\n<li>make MALLOC=libc</li>\n<li>make install</li>\n</ul>\n<h2 id=\"redis-使用\"><a class=\"header-anchor\" href=\"#redis-使用\" aria-hidden=\"true\">#</a> Redis 使用</h2>\n<ul>\n<li>\n<p>redis-server # Redis 服务端启动程序</p>\n</li>\n<li>\n<p>redis-cli # Redis 客户端操作工具。也可以使用 telnet 使用纯文本协议操作</p>\n</li>\n<li>\n<p>redis-benchmark # Redis 性能测试工具</p>\n</li>\n<li>\n<p>redis-check-aof # 数据恢复工具</p>\n</li>\n<li>\n<p>redis-check-dump # 检查导出工具</p>\n</li>\n<li>\n<p>./src/redis-server # 启动 redis</p>\n</li>\n</ul>\n<h2 id=\"memcached-基本操作\"><a class=\"header-anchor\" href=\"#memcached-基本操作\" aria-hidden=\"true\">#</a> Memcached 基本操作</h2>\n<!--beforebegin--><div class=\"language-bash extra-class\"><!--afterbegin--><pre v-pre class=\"language-bash\"><code>yum <span class=\"token function\">install</span> memcached <span class=\"token comment\"># 安装</span>\nmemcached -d -l -m -p <span class=\"token comment\"># 启动 -d 后台方式运行 -m 内存分配 -l 监听的 ip ， -p 端口号</span>\n<span class=\"token function\">kill</span> pid <span class=\"token comment\"># 关闭</span>\n</code></pre>\n<!--beforeend--></div><!--afterend--></div>\n",null]}