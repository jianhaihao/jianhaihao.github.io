{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/swoft/basic.md?vue&type=template&id=626b4a0c&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/swoft/basic.md","mtime":1538877604376},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1538043548579},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1538043551495},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1538043548579},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1538043551494},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1538043551590}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"swoole-基础知识\\\"><a href=\\\"#swoole-基础知识\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Swoole 基础知识</h1> <ul><li>国内开源C语言编写的扩展</li> <li>PHP异步网络通信引擎</li></ul> <h2 id=\\\"http-access-module\\\"><a href=\\\"#http-access-module\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> http_access_module</h2> <ul><li><p>Syntax: allow address | CIDR | unix: | all;</p></li> <li><p>Default: --</p></li> <li><p>Context: http, server, locaiont, limit_except</p></li> <li><p>Syntax: deny address | CIDR | unix: | all;</p></li> <li><p>Default: --</p></li> <li><p>Context: http, server, location, limit_except</p></li></ul> <p>http_access_module 局限性</p> <ol><li>采用别的 http 头信息控制访问，如： http_x_forward_for</li> <li>结合 geo 模块</li> <li>通过 http 自定义变量传递</li></ol> <h2 id=\\\"http-x-forward-for\\\"><a href=\\\"#http-x-forward-for\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> http_x_forward_for</h2> <ul><li>http_x_forward_for = Client IP, Proxy(1) IP, Proxy(2) IP, ...</li></ul> <h2 id=\\\"http-auth-basic-module\\\"><a href=\\\"#http-auth-basic-module\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> http_auth_basic_module</h2> <ul><li><p>Syntax: auth_basic string | off;</p></li> <li><p>Default: auth_basic off;</p></li> <li><p>Context: http, server, locaiont, limit_except</p></li> <li><p>Syntax: auth_basic_user_file file;</p></li> <li><p>Default: --</p></li> <li><p>Context: http, server, location,limit_except</p></li></ul> <p>局限性</p> <ol><li>用户信息依赖文件方式</li> <li>操作管理机械，效率低下</li></ol> <p>解决方案</p> <ol><li>Nginx 结合 LUA 实现高效验证</li> <li>Nginx 和 LDAP 打通，利用 nginx-auth-ldap 模块</li></ol>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}