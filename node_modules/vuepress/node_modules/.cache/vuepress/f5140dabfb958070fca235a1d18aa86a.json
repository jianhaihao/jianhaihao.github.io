{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/process.md?vue&type=template&id=cba3a7d8&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/process.md","mtime":1537944817444},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537944820671}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"process-进程\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#process-进程\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" process 进程\")]),_vm._v(\" \"),_c('p',[_vm._v(\"是一个全局变量，提供当前 Node 进程的有关信息，以及控制当前 Node 的进程\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"proccess-事件\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#proccess-事件\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" proccess 事件\")]),_vm._v(\" \"),_c('p',[_vm._v(\"process 对象是一个\"),_c('code',[_vm._v(\"EventEmit\")]),_vm._v(\"实例\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"beforeExit 事件\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"当 Node 事件循环数组已经为空，并且没有额外的工作添加进来，事件\"),_c('code',[_vm._v(\"beforeExit\")]),_vm._v(\"就会被触发，正常情况，如果时间循环数组为空，Node 进程就会结束，如果绑定\"),_c('code',[_vm._v(\"beforeExit\")]),_vm._v(\"事件的监听函数是一个异步回调函数，则 Node 进程则会继续运行\")]),_vm._v(\" \"),_c('p',[_c('code',[_vm._v(\"process.exitCode\")]),_vm._v(\"作为唯一的值传递给\"),_c('code',[_vm._v(\"beforeExit\")]),_vm._v(\"事件的监听回调函数\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果直接调用\"),_c('code',[_vm._v(\"process.exit()\")]),_vm._v(\"终止 Node 进程，\"),_c('code',[_vm._v(\"beforeExit\")]),_vm._v(\"事件不会被触发\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"disconnect 事件\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果 Node 进程由 IPC 通道方式创建，当 IPC 通道关闭时，会触发该事件\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"exit 事件\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"以下两个操作会触发\"),_c('code',[_vm._v(\"exit\")]),_vm._v(\"事件\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"显示调用\"),_c('code',[_vm._v(\"process.exit()\")])]),_vm._v(\" \"),_c('li',[_vm._v(\"Node 事件循环数组没有额外的工作，Node 进程即将结束\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"一旦\"),_c('code',[_vm._v(\"exit\")]),_vm._v(\"的回调函数执行完成，将没有任何操作能终止 Node 的结束，并且\"),_c('code',[_vm._v(\"exit\")]),_vm._v(\"事件的监听函数里面不能包含异步操作，任何在事件循环数组中排队的工作都将被丢弃\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"message 事件\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果 Node 进程由 IPC 通道方式创建，当子进程收到父进程发送的消息时，会触发\"),_c('code',[_vm._v(\"message\")]),_vm._v(\"事件\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"uncaughtException 事件\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"当 JavaScript 发生未捕获的异常，沿着代码调用路径反向传递回事件循环，会触发\"),_c('code',[_vm._v(\"uncaughtException\")]),_vm._v(\"事件\")]),_vm._v(\" \"),_c('li',[_vm._v(\"Node 默认情况下，将异常打印到\"),_c('code',[_vm._v(\"stderr\")]),_vm._v(\"，然后结束进程退出\")]),_vm._v(\" \"),_c('li',[_vm._v(\"为\"),_c('code',[_vm._v(\"uncaughtException\")]),_vm._v(\"事件添加监听函数可以覆盖上述默认行为，回调函数接受一个\"),_c('code',[_vm._v(\"Error\")]),_vm._v(\"对象作为参数\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"unhandledRejection 事件\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果在一次事件的轮询中，一个\"),_c('code',[_vm._v(\"Promise\")]),_vm._v(\"被 rejected，并且此\"),_c('code',[_vm._v(\"Promise\")]),_vm._v(\"没有绑定错误处理器，\"),_c('code',[_vm._v(\"unhandledRejection\")]),_vm._v(\"事件就会被触发\")]),_vm._v(\" \"),_c('p',[_vm._v(\"事件的回调函数包含两个参数，一个是 rejected 的相关信息\"),_c('code',[_vm._v(\"reason\")]),_vm._v(\"，第二个是被 rejected 的\"),_c('code',[_vm._v(\"promise\")]),_vm._v(\"对象\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"rejectionHandled 事件\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果一个\"),_c('code',[_vm._v(\"Promise\")]),_vm._v(\"被 rejected，并且此\"),_c('code',[_vm._v(\"Promise\")]),_vm._v(\"在事件的下次轮询及之后期间，被绑定了一个错误的处理器，会触发\"),_c('code',[_vm._v(\"rejectionHandled\")]),_vm._v(\"事件，回调函数接受被 rejected 的\"),_c('code',[_vm._v(\"Promise\")]),_vm._v(\"对象\")]),_vm._v(\" \"),_c('p',[_vm._v(\"可以使用下面代码来监控被异步处理后的 rejected 的\"),_c('code',[_vm._v(\"Promise\")]),_vm._v(\"对象\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" unhandledRejections \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Map\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nprocess\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"on\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'unhandledRejection'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"reason\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" p\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  unhandledRejections\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"set\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"p\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" reason\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nprocess\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"on\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'rejectionHandled'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"p\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  unhandledRejections\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"delete\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"p\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('ul',[_c('li',[_vm._v(\"在同步代码的情况下，当未处理的异常队列增长时，会触发\"),_c('code',[_vm._v(\"uncaughtException\")]),_vm._v(\"事件\")]),_vm._v(\" \"),_c('li',[_vm._v(\"在异步代码的情况下，当未处理的异常队列增长时，会触发\"),_c('code',[_vm._v(\"unhandledRejection\")]),_vm._v(\"事件，当未处理的异常队列缩短时，会触发\"),_c('code',[_vm._v(\"rejectionHandled\")]),_vm._v(\"事件\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"warning 事件\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"任何时间向 Node 进程发出警告，都会触发\"),_c('code',[_vm._v(\"warning\")]),_vm._v(\"事件，将警告相关信息打印到\"),_c('code',[_vm._v(\"stderr\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"可以通过\"),_c('code',[_vm._v(\"process.emitWarning()\")]),_vm._v(\"来触发一个警告\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.abort()\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"立即结束 Node 进程，并生成一个 core 文件\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.arch\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回一个表示 CPU 架构的字符串，例如\"),_c('code',[_vm._v(\"arm\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"arm64\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"ia32\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"mips\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"mipsel\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"ppc\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"ppc64\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"s390\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"s390x\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"x32\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"x64\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.argv\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回一个数组，包含启动 Node 的命令行参数\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.argv0\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"保存 Node 启动传入\"),_c('code',[_vm._v(\"argv[0]\")]),_vm._v(\"参数的只读副本\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.channel\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"如果 Node 是以 IPC 方式创建，\"),_c('code',[_vm._v(\"process.channel\")]),_vm._v(\"保存 IPC channel 的引用\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.chdir(directory)\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"变更当前 Node 的工作目录，如果变更失败回抛出异常\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.config\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回一个对象，包含用于当前编译当前 Node 执行程序涉及的配置信息\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.connected\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"如果 Node 是以 IPC 方式创建，只要 IPC channel 保持连接，则\"),_c('code',[_vm._v(\"process.connected\")]),_vm._v(\"返回\"),_c('code',[_vm._v(\"true\")])])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"调用\"),_c('code',[_vm._v(\"process.disconnect()\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"process.connected\")]),_vm._v(\"返回\"),_c('code',[_vm._v(\"false\")])])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"如果\"),_c('code',[_vm._v(\"process.connected\")]),_vm._v(\"返回\"),_c('code',[_vm._v(\"false\")]),_vm._v(\"，则不能通过 IPC channel 使用\"),_c('code',[_vm._v(\"process.send()\")]),_vm._v(\"发送信息\")])])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.cpuUsage([previousValue])\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回包含当前用户的 cpu 时间和系统的 cpu时间的对象，包含\"),_c('code',[_vm._v(\"user\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"system\")]),_vm._v(\"属性，单位是微秒\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.cwd()\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回 Node 进程的工作目录\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.env\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回一个包含用户环境信息的对象\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.execArgv\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回 Node 进程被启动时，Node 的特定命令选项\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.execPath\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回启动 Node 的可执行文件的绝对路径\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.exit([code])\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"以结束状态码结束 Node 进程\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.geteuid()、process.getegid()、process.getgid()、process.getuid()、process.getgroups()\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"有效数字标识的用户身份\")]),_vm._v(\" \"),_c('li',[_vm._v(\"有效数字标识的组身份\")]),_vm._v(\" \"),_c('li',[_vm._v(\"数字标记的组身份\")]),_vm._v(\" \"),_c('li',[_vm._v(\"数字标识的用户身份\")]),_vm._v(\" \"),_c('li',[_vm._v(\"补充的组 ID 数组\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.memoryUsage\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回 Node 进程的内存使用情况，单位是字节\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.nextTick(callback[, args])\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"将 callback 放到当前事件轮询队尾开始执行，\"),_c('code',[_vm._v(\"args\")]),_vm._v(\"为传入 callback 的参数\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.pid\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回 Node 进程运行的 pid\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.plagform\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回运行 Node 的操作系统平台，比如\"),_c('code',[_vm._v(\"aix\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"darwin\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"freebsd\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"linux\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"openbsd\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"sunos\")]),_vm._v(\"、\"),_c('code',[_vm._v(\"win32\")])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.ppid\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Node 进程父进程的进程 ID\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.stdin、process.stdout、process.stderr\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"process.stdin\")]),_vm._v(\"连接到\"),_c('code',[_vm._v(\"stdin\")]),_vm._v(\"的流\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"process.stdout\")]),_vm._v(\"连接到\"),_c('code',[_vm._v(\"stdout\")]),_vm._v(\"的流，内部使用\"),_c('code',[_vm._v(\"console.log()\")])]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"process.stderr\")]),_vm._v(\"连接到\"),_c('code',[_vm._v(\"stderr\")]),_vm._v(\"的流，内部使用\"),_c('code',[_vm._v(\"console.err()\")])])]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.title\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"获取或者设置当前 Node 进程在\"),_c('code',[_vm._v(\"ps\")]),_vm._v(\"命令中显示的进程名字\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.uptime\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"Node 运行的时间秒长\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.version\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回 Node 的版本信息\")]),_vm._v(\" \"),_c('p',[_c('strong',[_vm._v(\"process.versions\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"返回一个对象，包含 Node 及其依赖的版本信息\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"exit-codes\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#exit-codes\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Exit Codes\")]),_vm._v(\" \"),_c('p',[_vm._v(\"正常情况心爱，如果没有异步操作正在等待，Node 会以状态码\"),_c('code',[_vm._v(\"0\")]),_vm._v(\"退出，其他情况的状态码如下\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"1\")]),_vm._v(\"未捕获异常\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"2\")]),_vm._v(\"暂未被使用\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"3\")]),_vm._v(\"内部 JavaScript 分析错误\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"4\")]),_vm._v(\"内部 JavaScript 执行失败\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"5\")]),_vm._v(\"致命错误\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"6\")]),_vm._v(\"非函数的内部异常处理\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"7\")]),_vm._v(\"内部异常处理运行时失败\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"8\")]),_vm._v(\"暂未被使用\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"9\")]),_vm._v(\"不可用参数\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"10\")]),_vm._v(\"内部 JavaScript 运行时失败\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"12\")]),_vm._v(\"不可用的调试参数\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"128\")]),_vm._v(\"退出信号\")])])])}]\n\nexport { render, staticRenderFns }"]}