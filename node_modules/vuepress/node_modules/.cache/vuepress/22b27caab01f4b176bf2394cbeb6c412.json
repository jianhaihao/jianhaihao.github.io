{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/commonjs.md?vue&type=template&id=3819cbe2&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/node/commonjs.md","mtime":1537926977706},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926978403},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537926981332},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926978403},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537926981332},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537926981441}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"commonjs-规范\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#commonjs-规范\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" CommonJS 规范\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Node 应用的模块都采用 CommonJS 规范，每个文件是一个模块，每个模块都有自己的作用域，在作用域里面定义的变量，函数，类，都是私有的，外部不可访问\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"所有代码运行在模块作用域，不会污染全局作用域\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"模块可以被多次加载，只有在第一次被加载的时候才会运行，后面的加载直接读取缓存的结果\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"模块加载的顺序，按照代码中出现的顺序\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"模块代码会被 Node 封装在下面这个函数里面\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"exports\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" require\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" module\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" __filename\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" __dirname\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 模块代码\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"module-变量\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#module-变量\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" module 变量\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"每个模块内部有一个 module 变量表示当前模块具有以下属性\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", [_vm._v(\"attribute\")]),\n            _vm._v(\" \"),\n            _c(\"th\", [_vm._v(\"desc\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"module.id\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"模块的标识符，通常是绝对路径加上模块文件名\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"module.filename\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"模块的文件名\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"module.loaded\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"模块是否加载完成\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"module.parent\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"调用模块的模块\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"moduel.children\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"返回一个数组，表示该模块调用的其他模块\")])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", [_vm._v(\"module.exports\")]),\n            _vm._v(\" \"),\n            _c(\"td\", [_vm._v(\"模块对外输出的值\")])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"requrie-命令\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#requrie-命令\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" requrie 命令\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"require 用于加载模块\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"加载规则\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"如果以\"),\n          _c(\"code\", [_vm._v(\"/\")]),\n          _vm._v(\"开头，表示加载一个绝对路径的模块文件\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"如果以\"),\n          _c(\"code\", [_vm._v(\"./\")]),\n          _vm._v(\"开头，表示加载一个相对路径的模块文件\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"如果不以\"),\n          _c(\"code\", [_vm._v(\"./\")]),\n          _vm._v(\"或者\"),\n          _c(\"code\", [_vm._v(\"/\")]),\n          _vm._v(\"开头，表示加载一个默认提供的模块，或者位于各级\"),\n          _c(\"code\", [_vm._v(\"node_modules\")]),\n          _vm._v(\"目录下面的模块\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"如果不以\"),\n          _c(\"code\", [_vm._v(\"./\")]),\n          _vm._v(\"或者\"),\n          _c(\"code\", [_vm._v(\"/\")]),\n          _vm._v(\"开头,而是一个路径，比如\"),\n          _c(\"code\", [_vm._v(\"bar/foo/abc.js\")]),\n          _vm._v(\"，Node 会尝试照到\"),\n          _c(\"code\", [_vm._v(\"bar\")]),\n          _vm._v(\"目录的路径，然后继续往下照\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"如果指定的模块文件没有找啊到，Node 会尝试为文件名添加\"),\n          _c(\"code\", [_vm._v(\".js\")]),\n          _vm._v(\", \"),\n          _c(\"code\", [_vm._v(\".node\")]),\n          _vm._v(\", \"),\n          _c(\"code\", [_vm._v(\".json\")]),\n          _vm._v(\"后缀，\"),\n          _c(\"code\", [_vm._v(\".js\")]),\n          _vm._v(\"会以 JavaScript 脚本文件解析，\"),\n          _c(\"code\", [_vm._v(\".json\")]),\n          _vm._v(\"会以 Json 格式的文件解析，\"),\n          _c(\"code\", [_vm._v(\".node\")]),\n          _vm._v(\"会以编译后的二进制文件解析\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"如果想得到\"),\n          _c(\"code\", [_vm._v(\"require\")]),\n          _vm._v(\"命令加载的确切文件名，可以使用\"),\n          _c(\"code\", [_vm._v(\"require.resolve()\")]),\n          _vm._v(\"方法\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"目录的加载规则\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"通常我们会吧相关文件放在一个文件夹里面，便于组织，然后设置一个入口文件，让\"\n        ),\n        _c(\"code\", [_vm._v(\"require\")]),\n        _vm._v(\"通过入口文件加载整个目录，Node 模块的入口文件为\"),\n        _c(\"code\", [_vm._v(\"package.json\")]),\n        _vm._v(\"，入口文件通过\"),\n        _c(\"code\", [_vm._v(\"main\")]),\n        _vm._v(\"属性指定\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"模块的缓存\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"Node 在第一次夹在模块时，会缓存该模块，以后加载直接读取该模块的\"\n        ),\n        _c(\"code\", [_vm._v(\"module.exports\")]),\n        _vm._v(\"属性\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"所有的缓存模块保存在\"),\n        _c(\"code\", [_vm._v(\"require.cache\")]),\n        _vm._v(\"中，可以通过下面的方式删除模块的缓存\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"delete\")\n            ]),\n            _vm._v(\" require\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"cache\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'moduleName'\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\nObject\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"keys\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"require\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"cache\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"forEach\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"key \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=>\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"delete\")\n            ]),\n            _vm._v(\" require\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"cache\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"key\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"require.main\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"require\")]),\n        _vm._v(\"对象有一个\"),\n        _c(\"code\", [_vm._v(\"main\")]),\n        _vm._v(\"属性，用来判断模块是直接执行还是被调用执行\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"直接执行\"),\n          _c(\"code\", [_vm._v(\"node module.js\")]),\n          _vm._v(\" 返回模块本身\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"被调用执行\"),\n          _c(\"code\", [_vm._v(\"require('module.js')\")]),\n          _vm._v(\" // 返回\"),\n          _c(\"code\", [_vm._v(\"false\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"模块的加载机制\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#模块的加载机制\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 模块的加载机制\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"输入的值是被输出值的拷贝，一旦模块的值被输出，在模块内部去改变，不会影响已经被输出的值\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"filename-dirname\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#filename-dirname\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" __filename, __dirname\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"__filename\")]),\n        _vm._v(\"文件的绝对路径加上文件名\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"__dirname\")]),\n        _vm._v(\"文件的绝对路径，不包括文件名\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}