{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/event/event-model.md?vue&type=template&id=5987bd4a&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/event/event-model.md","mtime":1537408168000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"浏览器的事件模型，就是通过监听函数响应事件。事件发生后，浏览器监听到了这个时间，然后执行对应的监听函数，这是事件驱动编程模式的主要编程方式。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"JavaScript 有三种方式为事件绑定监听函数\")]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"一个事件发生后，会在子元素和父元素之间传播 (propagation)，分为三个阶段\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"由于事件在传播的过程中会冒泡到父节点，因此可以把子节点的监听函数定义到父节点上面，由父节点统一监听处理多个子元素的事件，这种方式称为事件的代理\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://wangdoc.com/javascript/events/model.html\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [\n          _vm._v(\"网道（WangDoc.com）是一个文档网站，提供互联网开发文档\"),\n          _c(\"OutboundLink\")\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"事件模型\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#事件模型\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 事件模型\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"设置 HTML 元素的\"),\n        _c(\"code\", [_vm._v(\"on-\")]),\n        _vm._v(\"属性\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"元素节点的事件属性\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"通过节点的\"),\n        _c(\"code\", [_vm._v(\"addEventListener()\")]),\n        _vm._v(\"添加事件\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"this 的指向\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"监听函数内部的\"),\n      _c(\"code\", [_vm._v(\"this\")]),\n      _vm._v(\"指向触发事件的那个元素节点\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"事件的传播\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\"第一阶段：从\"),\n        _c(\"code\", [_vm._v(\"window\")]),\n        _vm._v(\"对象传导到目标节点（上层传底层），称为捕获阶段 (capture phase)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"第二阶段：从目标节点向上触发，称为目标阶段 (target phase)\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\"第三阶段：从目标阶段传导回\"),\n        _c(\"code\", [_vm._v(\"window\")]),\n        _vm._v(\"（从底层传回上层），称为冒泡阶段 (bubbling phase)\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"strong\", [_vm._v(\"事件的代理\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"可以通过\"),\n      _c(\"code\", [_vm._v(\"Event.stopPropagation()\")]),\n      _vm._v(\"方法阻止事件继续向下传播\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"参考\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#参考\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 参考\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}