{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/async.md?vue&type=template&id=5089854e&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/async.md","mtime":1537408168000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"async-函数\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#async-函数\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" async 函数\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"含义\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#含义\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 含义\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\n            \"ES2017 标准引入 async 函数，使得异步操作更加的简单，实际上就是 Generator 函数的语法糖\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"const\")\n            ]),\n            _vm._v(\" asyncReadFile \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"async\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"const\")\n            ]),\n            _vm._v(\" result1 \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"await\")\n            ]),\n            _vm._v(\" fs\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"readFile\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'file1'\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"const\")\n            ]),\n            _vm._v(\" result2 \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"await\")\n            ]),\n            _vm._v(\" fs\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"readFile\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'file2'\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _vm._v(\"上面就是 async 函数，和 Generator 函数相比就是把\"),\n        _c(\"code\", [_vm._v(\"*\")]),\n        _vm._v(\"换成了\"),\n        _c(\"code\", [_vm._v(\"async\")]),\n        _vm._v(\"，把\"),\n        _c(\"code\", [_vm._v(\"yield\")]),\n        _vm._v(\"换成了\"),\n        _c(\"code\", [_vm._v(\"await\")]),\n        _vm._v(\"，直接执行\"),\n        _c(\"code\", [_vm._v(\"asyncReadFile\")]),\n        _vm._v(\"函数，会达到和 Generator 函数一样的效果。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"对比-generator\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#对比-generator\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 对比 Generator\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\"内置的执行器，Generator 函数需要自己写执行器，而\"),\n          _c(\"code\", [_vm._v(\"async\")]),\n          _vm._v(\"函数不需要\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"更好的语义，\"),\n          _c(\"code\", [_vm._v(\"async\")]),\n          _vm._v(\"表示函数里面有异步操作，\"),\n          _c(\"code\", [_vm._v(\"await\")]),\n          _vm._v(\"表示后面的表达式是异步操作\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"更广的适用性，\"),\n          _c(\"code\", [_vm._v(\"yield\")]),\n          _vm._v(\"后面只能跟\"),\n          _c(\"code\", [_vm._v(\"Thunk\")]),\n          _vm._v(\"函数或者 Promise 对象，而\"),\n          _c(\"code\", [_vm._v(\"await\")]),\n          _vm._v(\n            \"后面可以跟任何对象和值，当后面的值为数值，字符串和布尔值时，操作等同于同步操作\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"返回值是 Promise 对象，可以用\"),\n          _c(\"code\", [_vm._v(\"then\")]),\n          _vm._v(\"指定下一步操作\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"基本用法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#基本用法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 基本用法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"async 函数的错误可以在返回的 Promise 对象通过\"),\n          _c(\"code\", [_vm._v(\"catch\")]),\n          _vm._v(\"捕捉\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"async 函数内部\"),\n          _c(\"code\", [_vm._v(\"return\")]),\n          _vm._v(\"的值，可以在返回的 Promise 对象回调函数里面接收\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"async 函数返回的 Promise 对象，需要等到函数内部所有异步操作完成后，状态才会改变\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"语法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#语法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 语法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"只要有一个\"),\n          _c(\"code\", [_vm._v(\"await\")]),\n          _vm._v(\"后面 Promise 对象的状态变为\"),\n          _c(\"code\", [_vm._v(\"rejected\")]),\n          _vm._v(\"状态，async 会终止执行，可以在\"),\n          _c(\"code\", [_vm._v(\"await\")]),\n          _vm._v(\n            \"后面的Promise 对象直接捕获错误，可以避免终止整个 async 函数的执行\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"使用注意点\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#使用注意点\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 使用注意点\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\"建议把\"),\n          _c(\"code\", [_vm._v(\"await\")]),\n          _vm._v(\"命令放在\"),\n          _c(\"code\", [_vm._v(\"try...catch\")]),\n          _vm._v(\"块中\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"多个\"),\n          _c(\"code\", [_vm._v(\"await\")]),\n          _vm._v(\n            \"命令后面的异步操作如果没有继发关系，最好让他们同时触发，缩短程序的执行时间，使用\"\n          ),\n          _c(\"code\", [_vm._v(\"Promise.all()\")]),\n          _vm._v(\"可以实现\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"await\")]),\n          _vm._v(\"命令只能用在 async 函数里面，用在普通函数会报错，常见的\"),\n          _c(\"code\", [_vm._v(\"forEach()\")]),\n          _vm._v(\"函数里面不能使用\"),\n          _c(\"code\", [_vm._v(\"await\")]),\n          _vm._v(\"关键字，可以使用\"),\n          _c(\"code\", [_vm._v(\"for...of\")]),\n          _vm._v(\"代替\")\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}