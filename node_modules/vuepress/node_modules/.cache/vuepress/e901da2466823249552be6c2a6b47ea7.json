{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/linux/problems.md?vue&type=template&id=840d0fd0&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/linux/problems.md","mtime":1537933948870},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537933952458},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537933952457},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537933952565}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"日常问题汇总\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#日常问题汇总\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 日常问题汇总\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"普通用户免密码登陆，须将 .ssh 文件夹的权限设置为 700 ，authorized_keys 权限设置为600\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"chmod\")\n            ]),\n            _vm._v(\" 700 ~/.ssh\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"chmod\")\n            ]),\n            _vm._v(\" 600 ~/.ssh/authorized_keys\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"查看核心数\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"grep\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'model name'\")\n            ]),\n            _vm._v(\" /proc/cpuinfo \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"wc\")]),\n            _vm._v(\" -l\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [_c(\"li\", [_vm._v(\"初始时间和本地时间相差八个小时\")])]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"timedatectl // 查看本地时间\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"rm\")]),\n            _vm._v(\" -fr /etc/localtime\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"ln\")]),\n            _vm._v(\" -s /usr/share/zoneinfo/Universal /etc/localtime\\n\")\n          ])\n        ])\n      ]),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"p\", [_vm._v(\"关闭 SELinux\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [\n              _vm._v(\n                \"修改/etc/selinux/config文件中设置SELINUX=disabled ，然后重启服务器。\"\n              )\n            ]),\n            _vm._v(\" \"),\n            _c(\"li\", [_vm._v(\"setenforce 0 # 临时生效\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"p\", [_vm._v(\"后台任务\")]),\n          _vm._v(\" \"),\n          _c(\"ul\", [\n            _c(\"li\", [_vm._v(\"ctrl + z 挂起任务\")]),\n            _vm._v(\" \"),\n            _c(\"li\", [_vm._v(\"bg 将作业放在后台运行\")]),\n            _vm._v(\" \"),\n            _c(\"li\", [_vm._v(\"jobs 查看后台运行作业\")]),\n            _vm._v(\" \"),\n            _c(\"li\", [_vm._v(\"fg 将作业放在前台运行\")]),\n            _vm._v(\" \"),\n            _c(\"li\", [_vm._v(\"ctrl + c 结束任务\")])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"p\", [_vm._v(\"查看 http 网络状态\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"netstat\")\n            ]),\n            _vm._v(\" -anpl \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"grep\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'http'\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}