{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/generator.md?vue&type=template&id=6e930ff3&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es6/generator.md","mtime":1537408168000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537926131947},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1533872387000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_c('h1',{attrs:{\"id\":\"generator-函数的语法-2-5\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#generator-函数的语法-2-5\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Generator 函数的语法 (2.5)\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"es6\")]),_vm._v(\"提供的一种异步编程解决方案\")]),_vm._v(\" \"),_c('li',[_vm._v(\"可以理解成为一种状态机，它封装了多个内部状态，返回一个可遍历的对象，可以依次遍历\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数内部的状态\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"如何定义\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#如何定义\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 如何定义\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"function\")]),_vm._v(\"关键字后面加一个\"),_c('code',[_vm._v(\"*\")]),_vm._v(\"号\")]),_vm._v(\" \"),_c('li',[_vm._v(\"内部使用\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"关键字定义每个状态\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"generatorFunction\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"yield\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'hello'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"yield\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'world'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'ending'\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])]),_c('ul',[_c('li',[_vm._v(\"上面的\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数定义了三个状态\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"如何执行\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#如何执行\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 如何执行\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" gf \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"generatorFunction\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('ul',[_c('li',[_vm._v(\"和普通函数一样，用\"),_c('code',[_vm._v(\"()\")]),_vm._v(\"括号就能直接执行\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数，返回一个包含之前\"),_c('code',[_vm._v(\"generatorFunction\")]),_vm._v(\"函数内部定义状态的遍历器对象\")]),_vm._v(\" \"),_c('li',[_vm._v(\"通过\"),_c('code',[_vm._v(\".next()\")]),_vm._v(\"方法遍历返回的对象\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_vm._v(\"gf\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"next\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// { done: false, value: \\\"hello\\\"}\")]),_vm._v(\"\\ngf\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"next\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// { done: false, value: \\\"world\\\"}\")]),_vm._v(\"\\ngf\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"next\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// { done: true, value: \\\"ending\\\"}\")]),_vm._v(\"\\n\")])])]),_c('ul',[_c('li',[_vm._v(\"遍历器对象通过\"),_c('code',[_vm._v(\"next()\")]),_vm._v(\"方法遍历，返回一个带\"),_c('code',[_vm._v(\"done\")]),_vm._v(\"和\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"属性的对象，如果遍历完了，\"),_c('code',[_vm._v(\"done\")]),_vm._v(\" 为\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"，否则为\"),_c('code',[_vm._v(\"false\")]),_vm._v(\"，\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"表示当前状态的值\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"yield-表达式\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#yield-表达式\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" yield 表达式\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数实际上提供了一种可暂停执行函数的方案，\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"则作为函数的暂停点\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"遍历器对象的\"),_c('code',[_vm._v(\"next()\")]),_vm._v(\"执行如下\")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"遇到\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式暂停执行，并将\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"后面的值作为返回对象的\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"值返回\")]),_vm._v(\" \"),_c('li',[_vm._v(\"下一次调用\"),_c('code',[_vm._v(\"next()\")]),_vm._v(\"方法，函数继续往下执行，直到遇到下一个\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式\")]),_vm._v(\" \"),_c('li',[_vm._v(\"如果没有遇到\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式，则一直执行到\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"语句，把\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"后面的指作为对象的\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"返回\")]),_vm._v(\" \"),_c('li',[_vm._v(\"如果没有\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"则返回的\"),_c('code',[_vm._v(\"value\")]),_vm._v(\"为\"),_c('code',[_vm._v(\"undefined\")])])]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"yield\")]),_vm._v(\"只有在声明\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数内部出现，其他地方都会报错\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式在另一个表达式中时，要加上括号\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"与-iterator-关系\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#与-iterator-关系\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 与 Iterator 关系\")]),_vm._v(\" \"),_c('p',[_vm._v(\"参照 《Iterator与for...of》，再来补充\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"next-方法的参数\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#next-方法的参数\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" next 方法的参数\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式本身没有返回值，可以通过\"),_c('code',[_vm._v(\"next()\")]),_vm._v(\"方法的参数来指定上一个\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式的返回值，这意味着可以在函数执行的过程中向函数里面注入外部的值，从而调整函数的运行方式\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"for-of-循环\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#for-of-循环\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" for...of 循环\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"for...of 循环可以直接遍历\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数生成的对象，不需要\"),_c('code',[_vm._v(\"next\")]),_vm._v(\"函数\")]),_vm._v(\" \"),_c('li',[_vm._v(\"一旦\"),_c('code',[_vm._v(\"next\")]),_vm._v(\"方法返回对象的\"),_c('code',[_vm._v(\"done\")]),_vm._v(\"属性为\"),_c('code',[_vm._v(\"true\")]),_vm._v(\"，终止遍历\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"generator-prototype-throw\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#generator-prototype-throw\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Generator.prototype.throw\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数执行返回的遍历器对象都有一个\"),_c('code',[_vm._v(\"throw\")]),_vm._v(\"方法，可以在函数体外抛出错误，在函数体内部捕获\")])]),_vm._v(\" \"),_c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"function\")]),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"g\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"try\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"yield\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"catch\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token class-name\"}},[_vm._v(\"e\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    console\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'内部捕获'\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"+\")]),_vm._v(\" e\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"var\")]),_vm._v(\" i \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"g\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\ng\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"next\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\ng\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"throw\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token string\"}},[_vm._v(\"'1'\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token comment\"}},[_vm._v(\"// 内部捕获 1 \")]),_vm._v(\"\\n\")])])]),_c('ul',[_c('li',[_vm._v(\"在\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数内部捕获之后，会自动执行一次\"),_c('code',[_vm._v(\"next()\")]),_vm._v(\"方法\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"generator-prototype-return\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#generator-prototype-return\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Generator.prototype.return\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"直接调用\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数的\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"方法可以终止便利该函数，并且可以给定返回值\")]),_vm._v(\" \"),_c('li',[_vm._v(\"如果\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数内部有\"),_c('code',[_vm._v(\"try...finally\")]),_vm._v(\"块，那么\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"会推迟到\"),_c('code',[_vm._v(\"finally\")]),_vm._v(\"块执行完之后再执行\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"next-throw-return-的共同点\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#next-throw-return-的共同点\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" next(), throw(), return() 的共同点\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"理解\")])]),_vm._v(\" \"),_c('p',[_vm._v(\"三个方法都是恢复\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数的执行，只是把\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式替换成不同的语句\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"next()\")]),_vm._v(\"将\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式换成一个值\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"throw()\")]),_vm._v(\"将\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式换成一个 \"),_c('code',[_vm._v(\"throw\")]),_vm._v(\"语句\")]),_vm._v(\" \"),_c('li',[_c('code',[_vm._v(\"return()\")]),_vm._v(\"将\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"表达式换成一个\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"语句\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"yield-表达式-2\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#yield-表达式-2\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" yield* 表达式\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果要在一个\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数里面执行另外一个\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数，需要在\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数里面用\"),_c('code',[_vm._v(\"yield*\")]),_vm._v(\"表达式来定义另外一个\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"yield\")]),_vm._v(\"后面的\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数，如果没有\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"语句，等同于在\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数内部部署一个\"),_c('code',[_vm._v(\"for...of\")]),_vm._v(\"循环\")]),_vm._v(\" \"),_c('li',[_vm._v(\"如果被代理的\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数有\"),_c('code',[_vm._v(\"return\")]),_vm._v(\"语句，则可以向代理它的\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数返回数据\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"作为对象属性的-generator-函数\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#作为对象属性的-generator-函数\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 作为对象属性的 Generator 函数\")]),_vm._v(\" \"),_c('p',[_vm._v(\"如果一个对象的属性是\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数，可以写成下面的形式\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-javascript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-javascript\"}},[_c('code',[_c('span',{attrs:{\"class\":\"token keyword\"}},[_vm._v(\"let\")]),_vm._v(\" a \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n  \"),_c('span',{attrs:{\"class\":\"token operator\"}},[_vm._v(\"*\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token function\"}},[_vm._v(\"generatorMethod\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \\n  \"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])]),_c('h2',{attrs:{\"id\":\"generator-函数的-this-对象\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#generator-函数的-this-对象\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Generator 函数的 this 对象\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数生成的遍历器对象也是\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数的实例，同时也继承了\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数的\"),_c('code',[_vm._v(\"prototype\")]),_vm._v(\"对象\")]),_vm._v(\" \"),_c('li',[_vm._v(\"在\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数内部使用\"),_c('code',[_vm._v(\"this\")]),_vm._v(\"关键字添加属性，调用函数生成的遍历器对象不会继承该属性\")]),_vm._v(\" \"),_c('li',[_vm._v(\"对于\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数不能使用\"),_c('code',[_vm._v(\"new\")]),_vm._v(\"关键字\")])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"generator-与状态机\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#generator-与状态机\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Generator 与状态机\")]),_vm._v(\" \"),_c('p',[_vm._v(\"可以利用更少的变量来实现一个状态机，因为它本身就是一个状态机，即目前是否处于暂停状态\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"generator-与协程\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#generator-与协程\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Generator 与协程\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"协程是程序运行的一种方式，可以用单线程实现，也可以用多线程实现。前者可以看作特殊的“子例程”，后者可以看作特殊的线程\")])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"协程与子例程的差异\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#协程与子例程的差异\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 协程与子例程的差异\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"传统的子例程\"),_c('code',[_vm._v(\"subroutine\")]),_vm._v(\"采用 “先进后出” 的执行方式，协程与其不同，可以同时存在多个线程（或函数）并行执行，但只有一个线程（或函数）处于运行状态，其他的处于暂停态\"),_c('code',[_vm._v(\"suspended\")]),_vm._v(\", 多个线程（或函数）可以交换执行权，这种可以并行执行，可以交换执行权的线程（或函数），叫做协程\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"从实现上看，子例程只占用一个栈，而协程可以占用多个栈，但只有一个栈是运行状态，通过牺牲内存的方式来达到任务并行的目的\")])])]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"协程与普通线程的差异\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#协程与普通线程的差异\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 协程与普通线程的差异\")]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_vm._v(\"协程与普通线程最大的差异是，协程多个任务只能有一个任务处于运行态，而线程允许多个任务同时处于运行态。这是有\"),_c('code',[_vm._v(\"JavaScript\")]),_vm._v(\"是单线程语言所决定的。而且线程多个任务之间的运行状态由环境决定，谁先得到资源谁先执行，于是就出现了死锁的问题，协程的运行顺序由自己决定\")])]),_vm._v(\" \"),_c('li',[_c('p',[_vm._v(\"使用\"),_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数实现协程，利用\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"来交换控制权\")])])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"generator-与上下文\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#generator-与上下文\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" Generator 与上下文\")]),_vm._v(\" \"),_c('blockquote',[_c('p',[_vm._v(\"上下文：全局的上下文环境（\"),_c('code',[_vm._v(\"context\")]),_vm._v(\"，可称为运行环境）\")])]),_vm._v(\" \"),_c('ul',[_c('li',[_c('p',[_c('code',[_vm._v(\"JavaScript\")]),_vm._v(\"在执行函数的时候，会产生一个函数运行时的上下文，这样就出现了上下文环境的堆栈，遵循\"),_c('code',[_vm._v(\"后进先出\")]),_vm._v(\"的原则。\")])]),_vm._v(\" \"),_c('li',[_c('p',[_c('code',[_vm._v(\"Generator\")]),_vm._v(\"函数不一样，当执行到\"),_c('code',[_vm._v(\"yield\")]),_vm._v(\"关键字时候，函数的上下文环境的堆栈冻结当前状态，当调用\"),_c('code',[_vm._v(\"next\")]),_vm._v(\"方法时，函数的上下文环境堆栈又重新加入调用栈，冻结的变量和对象恢复执行\")])])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"应用\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#应用\",\"aria-hidden\":\"true\"}},[_vm._v(\"#\")]),_vm._v(\" 应用\")]),_vm._v(\" \"),_c('p',[_c('code',[_vm._v(\"Generator\")]),_vm._v(\" 函数可以暂停执行，可以返回任意值，这使得其有多种应用场景\")]),_vm._v(\" \"),_c('ul',[_c('li',[_vm._v(\"异步操作的同步化表达\")]),_vm._v(\" \"),_c('li',[_vm._v(\"控制流管理\")]),_vm._v(\" \"),_c('li',[_vm._v(\"为任意对象部署\"),_c('code',[_vm._v(\"Iterator\")]),_vm._v(\"接口\")]),_vm._v(\" \"),_c('li',[_vm._v(\"作为数据结构\")])])])}]\n\nexport { render, staticRenderFns }"]}