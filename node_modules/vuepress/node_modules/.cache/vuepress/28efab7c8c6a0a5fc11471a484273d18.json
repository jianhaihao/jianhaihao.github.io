{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/bom/navigator.md?vue&type=template&id=b29e8060&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/bom/navigator.md","mtime":1537933948859},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537933952458},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537933952457},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537933952565}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content\"},[_vm._ssrNode(\"<h1 id=\\\"navigator-对象，screen-对象\\\"><a href=\\\"#navigator-对象，screen-对象\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Navigator 对象，Screen 对象</h1> <p><code>window.navigator</code>包含一个浏览器和系统信息的<code>Navigator</code>对象，可以通过这个对象来获取环境信息</p> <h2 id=\\\"navigator-对象的属性\\\"><a href=\\\"#navigator-对象的属性\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Navigator 对象的属性</h2> <p><strong>navigator.userAgent</strong></p> <p>返回当前浏览器的厂商和版本信息，可以通过该字段判断是否为手机浏览器</p> <div class=\\\"language-javascript extra-class\\\"><pre class=\\\"language-javascript\\\"><code><span class=\\\"token regex\\\">/mobi/i</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span>navigator<span class=\\\"token punctuation\\\">.</span>userAgent<span class=\\\"token punctuation\\\">)</span>\\n</code></pre></div><p><strong>navigator.plugins</strong></p> <p>返回一个类似数组的对象，成员为浏览器已经安装的插件</p> <p><strong>navigator.platform</strong></p> <p>返回用户操作系统的信息，比如<code>MacIntel</code>、<code>Win32</code>、<code>Linux x86_64</code>等等</p> <p><strong>navigator.onLine</strong></p> <p>表示当前浏览器是离线还是在线</p> <p>用户在线状态改变会触发<code>online</code>事件和<code>offline</code>事件</p> <p><strong>navigator.language, navigator.languages</strong></p> <ul><li><code>navigator.language</code>：返回浏览器的首选语言</li> <li><code>navigator.languages</code>：返回浏览器的可选语言数组</li></ul> <p><strong>navigator.geolocation</strong></p> <p>返回一个<code>Geolocation</code>对象，包含用户的位置信息，该对象的 API 只有在 HTTPS 协议下才可使用，<code>Geolocation</code>对象具有下面三个方法</p> <ul><li><code>geolocation.getCurrentLocation()</code>：返回用户的当前位置</li> <li><code>geolocation.watchPosition()</code>：监听用户位置变化</li> <li><code>geolocation.clearWatch()</code>：取消监听</li></ul> <p><strong>navigator.cookieEnabled</strong></p> <p>返回一个布尔值，表示浏览器的 Cookie 功能是否打开</p> <h2 id=\\\"navigator-对象的方法\\\"><a href=\\\"#navigator-对象的方法\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Navigator 对象的方法</h2> <p><strong>navigator.javaEnabled()</strong></p> <p>返回一个布尔值，表示浏览器是否能运行 JavaApplet 小程序</p> <p><strong>navigarot.sendBeacon()</strong></p> <p>用户向服务器发送数据</p> <h2 id=\\\"screen-对象\\\"><a href=\\\"#screen-对象\\\" aria-hidden=\\\"true\\\" class=\\\"header-anchor\\\">#</a> Screen 对象</h2> <p>提供包含当前屏幕属性的对象，该对象具有以下属性</p> <ul><li><code>screen.width</code>：屏幕宽度</li> <li><code>screen.height</code>：屏幕高度</li> <li><code>screen.availHeight</code>：浏览器可以屏幕高度，屏幕高度除去任务栏等高度</li> <li><code>screen.availWidth</code>：浏览器可用屏幕宽度</li> <li><code>screen.pixelDepth</code>：屏幕的色彩位数</li> <li><code>screen.colorDepth</code>：<code>screen.pixelDepth</code>的别名</li> <li><code>screen.orientation</code>：返回一个对象，表示屏幕的方向</li></ul>\")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}