{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/wrapper.md?vue&type=template&id=7c7ee538&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/wrapper.md","mtime":1537944817432},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537944818120},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537944820597},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537944820671}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"wrapper-包装对象\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#wrapper-包装对象\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" wrapper 包装对象\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"概述\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#概述\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 概述\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"JavaScript 三种基本数据类型，布尔值、字符串、数值，在一定情况下会自动转化为对象，也就是包装对象\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"所谓包装对象，也就是分别与布尔值、字符串、数值对应的\"),\n        _c(\"code\", [_vm._v(\"Boolean\")]),\n        _vm._v(\"、\"),\n        _c(\"code\", [_vm._v(\"String\")]),\n        _vm._v(\"、\"),\n        _c(\"code\", [_vm._v(\"Number\")]),\n        _vm._v(\"对象，这三个原生对象可以把原始数据类型的值包装成对象使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"JavaScript 这么做的目的是为了践行一切事物可以当作对象处理的思想，可以用处理对象的思维处理任何变量\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// 也可以去掉 new 生成包装对象\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n            _vm._v(\" v1 \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Boolean\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token boolean\" } }, [_vm._v(\"true\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n            _vm._v(\" v2 \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"String\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'hello world'\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n            _vm._v(\" v3 \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Number\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"123\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\\nv1 \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"===\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token boolean\" } }, [_vm._v(\"true\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// false\")\n            ]),\n            _vm._v(\"\\nv2 \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"===\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'hello word'\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// false\")\n            ]),\n            _vm._v(\"\\nv3 \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"===\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"123\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// false\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"实例方法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#实例方法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 实例方法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"从 \"),\n        _c(\"code\", [_vm._v(\"Object\")]),\n        _vm._v(\" 对象继承而来\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"valueOf()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"返回包装对象原始的值\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"toString()\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"返回包装对象的字符串表达形式\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"原始类型与实例对象的自动转换\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#原始类型与实例对象的自动转换\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 原始类型与实例对象的自动转换\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"对于原始类型的值，JavaScript 会自动将其转换为包装对象，可直接使用包装对象的属性和方法\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"举个🌰\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n            _vm._v(\" a \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'123'\")]),\n            _vm._v(\"\\na\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _vm._v(\"length \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [_vm._v(\"// 3\")]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"a\")]),\n        _vm._v(\n          \"变量是一个字符串，它本身是没有任何属性和方法，在执行的过程中，JavaScript 引擎会将\"\n        ),\n        _c(\"code\", [_vm._v(\"a\")]),\n        _vm._v(\"变量转化成一个\"),\n        _c(\"code\", [_vm._v(\"String\")]),\n        _vm._v(\"类型的包装对象，\"),\n        _c(\"code\", [_vm._v(\"String\")]),\n        _vm._v(\"对象包含很多可以操作字符串的方法和属性，所以可以直接使用\"),\n        _c(\"code\", [_vm._v(\"a.length\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"可以通过在包装对象的\"),\n          _c(\"code\", [_vm._v(\"prototype\")]),\n          _vm._v(\n            \"属性上面添加自定义方法和属性，与之对应的基本数据类型的变量就可以使用自定义的方法和属性\"\n          )\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}