{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/swoft/use.md?vue&type=template&id=1e38109c&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/swoft/use.md","mtime":1543633370678},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543633371632},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1543633374007},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543633371632},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1543633374006},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1543633374107}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"swoft-使用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#swoft-使用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" swoft 使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"创建控制器\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#创建控制器\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 创建控制器\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n// Gen DemoController class to \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"`\")]),\n              _vm._v(\"@app/Controllers\"),\n              _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"`\")])\n            ]),\n            _vm._v(\n              \"\\nphp bin/swoft gen:controller demo --prefix /demo -y\\n\\n// Gen UserController class to \"\n            ),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"`\")]),\n              _vm._v(\"@app/Controllers\"),\n              _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"`\")])\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"RESTFul 风格，会默认创建一些action\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\n              \"\\nphp bin/swoft gen:controller user --prefix /users --rest\\n\\n\"\n            ),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\n              \"\\n\\nDescription:\\n  Generate HTTP controller class\\n\\nUsage:\\n  bin/swoft gen:controller CLASS_NAME SAVE_DIR \"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"--option \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"..\")\n            ]),\n            _vm._v(\".\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\n              \"\\n\\nArguments:\\n  name       The class name, don't need suffix and ext.\"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"eg. demo\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"dir\")]),\n            _vm._v(\"        The class \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"file\")\n            ]),\n            _vm._v(\" save dir\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"default: @app/Controllers\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\n              \"\\n\\nOptions:\\n  -y, --yes BOOL             No need to confirm when performing \"\n            ),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"file\")\n            ]),\n            _vm._v(\n              \" writing. default is: False\\n  -o, --override BOOL        Force override exists file. default is: False\\n  -n, --namespace STRING     The class namespace. default is: App\\\\Controllers\\n  --rest BOOL                The class will contains CURD action. default is: False\\n  --prefix STRING            The route prefix \"\n            ),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"for\")]),\n            _vm._v(\n              \" the controller. default is class name\\n  --suffix STRING            The class name suffix. default is: Controller\\n  --tpl-file STRING          The template \"\n            ),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"file\")\n            ]),\n            _vm._v(\n              \" name. default is: command.stub\\n  --tpl-dir STRING           The template \"\n            ),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"file\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"dir\")]),\n            _vm._v(\" path.\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"default: devtool/res/templates\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\n              \"\\n\\n\\n// 生成带命名空间的控制器\\n\\nphp bin/swoft gen:controller Menus @app/module/v1/platform/Controllers -n App\\\\\\\\module\\\\\\\\v1\\\\\\\\platform\\\\\\\\Controllers  --prefix /v1/platform/menus --rest -y\\n\\n\"\n            )\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"创建实体\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#创建实体\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 创建实体\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"\\nphp bin/swoft entity:create -d dbname mytable,table2\\n\\n\"\n            ),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"==\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\n              \"\\n\\nDescription:\\n  Auto create entity by table structure\\n\\nUsage:\\nentity:create -d\"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--database\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"database\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --instance \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"instance\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\"\\nentity:create -d\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--database\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"database\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"table\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" -instnace \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"instnace\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\"\\nentity:create -d\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--database\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"database\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --i\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--include\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"table\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --instnace \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"instnace\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\"\\nentity:create -d\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--database\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"database\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --i\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--include\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"table\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" -instnace \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"instnace\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\"\\nentity:create -d\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--database\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"database\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --i\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--include\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"table1,table2\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --instnace \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"instnace\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\"\\nentity:create -d\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--database\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"database\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --i\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--include\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"table1,table2\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" -e\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--exclude\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"table3\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --instance \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"instance\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\"\\nentity:create -d\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--database\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"database\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --i\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--include\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"table1,table2\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" -e\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"|\")]),\n            _vm._v(\"--exclude\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"table3,table4\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" --instance \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"<\")]),\n            _vm._v(\"instance\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\n              \"\\n\\nOptions:\\n  -d 数据库\\n--database 数据库\\n-i 指定特定的数据表，多表之间用逗号分隔\\n--include 指定特定的数据表，多表之间用逗号分隔\\n-e 排除指定的数据表，多表之间用逗号分隔\\n--exclude 排除指定的数据表，多表之间用逗号分隔\\n--remove-table-prefix 去除前缀\\n--entity-file-path 实体路径\"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\n              \"必须在以@app开头并且在app目录下存在的目录,否则将会重定向到@app/Models/Entity\"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\n              \"\\n--instance 设置数据库实例，默认default\\n--extends 设置模型的实体基类\\n\\nExample:\\n  php bin/swoft entity:create -d \"\n            ),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"test\")\n            ]),\n            _vm._v(\n              \"\\n\\n  php bin/swoft entity:create -d wancll_cloud_v1 -i system_staff_role_entity_powers --entity-file-path @app/module/v1/platform/Models/Entity\\n\\n\"\n            )\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}