{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/thinkphp/basic.md?vue&type=template&id=7bbc0ca2&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/thinkphp/basic.md","mtime":1543633370679},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543633371632},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1543633374007},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543633371632},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1543633374006},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1543633374107}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://www.thinkphp.cn\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"官网\"), _c(\"OutboundLink\")],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"https://www.kancloud.cn/manual/thinkphp5/118003\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"文档\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"根目录/application/config.php\")]),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\"添加文件：根目录/application/common/behavior/CronRun.php\")\n    ]),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { attrs: { id: \"api常用知识\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#api常用知识\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" API常用知识\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"blockquote\", [_c(\"p\", [_vm._v(\"针对ThinkPHP5.0系列\")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"中断响应\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#中断响应\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 中断响应\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-php extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-php\" } }, [\n        _c(\"code\", [\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"use\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token package\" } }, [\n            _vm._v(\"think\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"\\\\\")\n            ]),\n            _vm._v(\"Response\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"use\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token package\" } }, [\n            _vm._v(\"think\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"\\\\\")\n            ]),\n            _vm._v(\"exception\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"\\\\\")\n            ]),\n            _vm._v(\"HttpResponseException\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"/**\\n * 【error】校验未通过，抛出异常\\n */\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"protected\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"createResponse\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$code\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$msg\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$this\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"-\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _c(\"span\", { attrs: { class: \"token property\" } }, [_vm._v(\"data\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'code'\")]\n          ),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$code\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$this\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"-\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _c(\"span\", { attrs: { class: \"token property\" } }, [_vm._v(\"data\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'msg'\")]\n          ),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _vm._v(\"  \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$msg\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n\\n    \"),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [\n            _vm._v(\"$response\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _vm._v(\" Response\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\":\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"create\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$this\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"-\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _c(\"span\", { attrs: { class: \"token property\" } }, [_vm._v(\"data\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'json'\")]\n          ),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"throw\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n            _vm._v(\"HttpResponseException\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [\n            _vm._v(\"$response\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _vm._v(\"\\n\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"格式化报错信息\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#格式化报错信息\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 格式化报错信息\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-php extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-php\" } }, [\n        _c(\"code\", [\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 异常页面的模板文件\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'exception_tmpl'\")]\n          ),\n          _vm._v(\"         \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [\n            _vm._v(\"THINK_PATH\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'tpl'\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token constant\" } }, [_vm._v(\"DS\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\".\")]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'think_exception.tpl'\")]\n          ),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 错误显示信息,非调试模式有效\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'error_message'\")]\n          ),\n          _vm._v(\"          \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"''\")]\n          ),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 显示错误信息\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'show_error_msg'\")]\n          ),\n          _vm._v(\"         \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token boolean\" } }, [_vm._v(\"false\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token comment\" } }, [\n            _vm._v(\"// 异常处理handle类 留空使用 \\\\think\\\\exception\\\\Handle\")\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'exception_handle'\")]\n          ),\n          _vm._v(\"       \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n            _vm._v(\"function\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _vm._v(\"Exception \"),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$e\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"{\")]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"return\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"json\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'code'\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"0\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'data'\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"[\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\" \"),\n          _c(\n            \"span\",\n            { attrs: { class: \"token single-quoted-string string\" } },\n            [_vm._v(\"'msg'\")]\n          ),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _vm._v(\" \"),\n          _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$e\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"-\")]),\n          _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n          _c(\"span\", { attrs: { class: \"token function\" } }, [\n            _vm._v(\"getMessage\")\n          ]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"(\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"]\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\")\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\";\")]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\"}\")]),\n          _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\",\")]),\n          _vm._v(\"\\n\\n\")\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"跨域访问\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#跨域访问\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 跨域访问\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-php extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-php\" } }, [\n        _c(\"code\", [\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token php language-php\" } }, [\n            _c(\"span\", { attrs: { class: \"token delimiter important\" } }, [\n              _vm._v(\"<?php\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"namespace\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token package\" } }, [\n              _vm._v(\"app\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"\\\\\")\n              ]),\n              _vm._v(\"common\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"\\\\\")\n              ]),\n              _vm._v(\"behavior\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"use\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token package\" } }, [\n              _vm._v(\"think\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"\\\\\")\n              ]),\n              _vm._v(\"Response\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"/**\\n * 跨域处理\\n */\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"class\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"CronRun\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"public\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"run\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"&\")]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$dispatch\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$host_name\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"isset\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$_SERVER\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"'HTTP_ORIGIN'\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"?\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$_SERVER\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"'HTTP_ORIGIN'\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token double-quoted-string string\" } },\n              [_vm._v('\"*\"')]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$headers\")\n            ]),\n            _vm._v(\"   \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token double-quoted-string string\" } },\n              [_vm._v('\"Access-Control-Allow-Origin\"')]\n            ),\n            _vm._v(\"      \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$host_name\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token double-quoted-string string\" } },\n              [_vm._v('\"Access-Control-Allow-Credentials\"')]\n            ),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"'true'\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token double-quoted-string string\" } },\n              [_vm._v('\"Access-Control-Allow-Headers\"')]\n            ),\n            _vm._v(\"     \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token double-quoted-string string\" } },\n              [_vm._v('\"auth,client-type,content-type,token\"')]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$dispatch\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"instanceof\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Response\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$dispatch\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"-\")]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"header\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$headers\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"else\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"isset\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$_SERVER\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"'REQUEST_METHOD'\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"&&\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$_SERVER\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"'REQUEST_METHOD'\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"===\")]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"'OPTIONS'\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$dispatch\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"'type'\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"     \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"'response'\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$response\")\n            ]),\n            _vm._v(\"             \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"new\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token class-name\" } }, [\n              _vm._v(\"Response\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"''\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token number\" } }, [_vm._v(\"200\")]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$headers\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$dispatch\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\n              \"span\",\n              { attrs: { class: \"token single-quoted-string string\" } },\n              [_vm._v(\"'response'\")]\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$response\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"路由重写\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#路由重写\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" 路由重写\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"language-php extra-class\" }, [\n      _c(\"pre\", { pre: true, attrs: { class: \"language-php\" } }, [\n        _c(\"code\", [\n          _vm._v(\n            \"\\n# 路由重写\\n\\n### Apache\\n\\n添加文件：根目录/.htaccess\\n***********文件内容开始线(请勿复制该线)******************\\n\"\n          ),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"IfModule\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"mod_rewrite.c\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\n            \"\\nOptions +FollowSymlinks -Multiviews\\nRewriteEngine on\\n\\nRewriteCond %{REQUEST_FILENAME} !-d\\nRewriteCond %{REQUEST_FILENAME} !-f\\nRewriteRule ^(.*)$ index.php?/$1 [QSA,PT,L]\\n\"\n          ),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"IfModule\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\n            \"\\n***********文件内容结束线(请勿复制该线)*******************\\n\\n### IIS\\n\\n添加文件：根目录/web.config\\n***********文件内容开始线(请勿复制该线)******************\\n\"\n          ),\n          _c(\"span\", { attrs: { class: \"token php language-php\" } }, [\n            _c(\"span\", { attrs: { class: \"token delimiter important\" } }, [\n              _vm._v(\"<?\")\n            ]),\n            _vm._v(\"xml version\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _c(\n              \"span\",\n              { attrs: { class: \"token double-quoted-string string\" } },\n              [_vm._v('\"1.0\"')]\n            ),\n            _vm._v(\" encoding\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _c(\n              \"span\",\n              { attrs: { class: \"token double-quoted-string string\" } },\n              [_vm._v('\"UTF-8\"')]\n            ),\n            _c(\"span\", { attrs: { class: \"token delimiter important\" } }, [\n              _vm._v(\"?>\")\n            ])\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"configuration\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"system.webServer\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"rewrite\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"rules\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n            \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"rule\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"name\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"OrgPage\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"stopProcessing\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"true\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n                \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"match\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"url\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"^(.*)$\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n                \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"conditions\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"logicalGrouping\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"MatchAll\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n                    \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"add\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"input\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"{HTTP_HOST}\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"pattern\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"^(.*)$\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n                    \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"add\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"input\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"{REQUEST_FILENAME}\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"matchType\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"IsFile\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"negate\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"true\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n                    \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"add\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"input\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"{REQUEST_FILENAME}\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"matchType\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"IsDirectory\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"negate\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"true\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n                \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"conditions\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n                \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"action\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"type\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"Rewrite\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"url\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"index.php/{R:1}\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n            \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"rule\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"rules\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n     \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"rewrite\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n        \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"<\")\n              ]),\n              _vm._v(\"httpErrors\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token attr-name\" } }, [\n              _vm._v(\"errorMode\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token attr-value\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"=\")\n              ]),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ]),\n              _vm._v(\"Detailed\"),\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v('\"')\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"/>\")\n            ])\n          ]),\n          _vm._v(\"\\n    \"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"system.webServer\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\"\\n\"),\n          _c(\"span\", { attrs: { class: \"token tag\" } }, [\n            _c(\"span\", { attrs: { class: \"token tag\" } }, [\n              _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n                _vm._v(\"</\")\n              ]),\n              _vm._v(\"configuration\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [_vm._v(\">\")])\n          ]),\n          _vm._v(\n            \"\\n***********文件内容结束线(请勿复制该线)*******************\\n\\n\"\n          )\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}