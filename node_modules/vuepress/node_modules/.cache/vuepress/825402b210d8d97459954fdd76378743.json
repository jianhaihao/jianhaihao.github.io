{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/docker/demo.md?vue&type=template&id=23d52f31&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/docker/demo.md","mtime":1543560895389},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543560896208},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1543560898798},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1543560896208},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1543560898797},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1543560898911}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"docker搭建应用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#docker搭建应用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Docker搭建应用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"centos-docker-安装\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#centos-docker-安装\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" CentOS Docker 安装\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"docker支持以下的centos版本：\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#docker支持以下的centos版本：\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Docker支持以下的CentOS版本：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"CentOS 7 (64-bit)\"),\n        _c(\"br\"),\n        _vm._v(\"\\nCentOS 6.5 (64-bit) 或更高的版本\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"前提条件\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#前提条件\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 前提条件\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"目前，CentOS 仅发行版本中的内核支持 Docker。\"),\n        _c(\"br\"),\n        _vm._v(\"\\n在CentOS 7 上，要求系统64位、内核版本为 3.10 以上。\"),\n        _c(\"br\"),\n        _vm._v(\n          \"\\n在CentOS-6.5 或更高的版本的 CentOS 上，要求系统为64位、内核版本为 2.6.32-431 或者更高版本。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 验证CentOS 版本是否支持 Docker\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"uname\")\n            ]),\n            _vm._v(\" -r    \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看内核版本\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h3\", { attrs: { id: \"安装docker\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#安装docker\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 安装Docker\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"从 2017 年 3 月开始 docker 在原来的基础上分为两个分支版本: \"),\n        _c(\"code\", [_vm._v(\"Docker CE\")]),\n        _vm._v(\" 和 \"),\n        _c(\"code\", [_vm._v(\"Docker EE\")]),\n        _vm._v(\"。\"),\n        _c(\"br\"),\n        _vm._v(\n          \"\\nDocker CE 即社区免费版，Docker EE 即企业版，强调安全，但需付费使用。\"\n        ),\n        _c(\"br\"),\n        _vm._v(\"\\n本文介绍 Docker CE 的安装使用。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 使用 sudo 或 root 权限登录 Centos\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" yum update    \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 确保yum包更新到最新\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 执行 Docker 安装脚本\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"curl\")\n            ]),\n            _vm._v(\" -fsSL https://get.docker.com -o get-docker.sh\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" sh get-docker.sh\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 启动Docker进程\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" systemctl start docker\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 验证docker是否安装成功并在容器中执行一个测试的镜像\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" docker run hello-world\\ndocker images\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 镜像加速\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"vi\")]),\n            _vm._v(\" /etc/docker/daemon.json     \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 如没有该文件，请先新建一个\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 新建daemon.json文件\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"###############################################################\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cd\")]),\n            _vm._v(\" /etc/docker/\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"touch\")\n            ]),\n            _vm._v(\" daemon.json\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"###############################################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 文件内容\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"###############################################################\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v('\"registry-mirrors\"')\n            ]),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\":\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v('\"http://hub-mirror.c.163.com\"')\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"###############################################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 删除Docker CE\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" yum remove docker-ce\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"sudo\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"rm\")]),\n            _vm._v(\" -rf /var/lib/docker\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h3\", { attrs: { id: \"docker-使用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#docker-使用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Docker 使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## Docker Hello World ##\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# Docker 允许你在容器内运行应用程序， 使用 docker run 命令来在容器内运行一个应用程序，输出Hello world\"\n              )\n            ]),\n            _vm._v(\"\\ndocker run ubuntu:15.10 /bin/echo \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v('\"Hello world\"')\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 各个参数解析：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# docker: Docker 的二进制执行文件。\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# run:与前面的 docker 组合来运行一个容器。\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# ubuntu:15.10指定要运行的镜像，Docker首先从本地主机上查找镜像是否存在，如果不存在，Docker 就会从镜像仓库 Docker Hub 下载公共镜像。\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v('# /bin/echo \"Hello world\": 在启动的容器里执行的命令')\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                '# 以上命令完整的意思为：Docker 以 ubuntu15.10 镜像创建一个新容器，然后在容器里执行 bin/echo \"Hello world\"，然后输出结果。'\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 运行交互式的容器 ##\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                '# 通过docker的两个参数 -i -t，让docker运行的容器实现\"对话\"的能力'\n              )\n            ]),\n            _vm._v(\"\\ndocker run -i -t ubuntu:15.10 /bin/bash\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 各个参数解析：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# -t:在新容器内指定一个伪终端或终端\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# -i:允许你对容器内的标准输入 (STDIN) 进行交互\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 此时我们已进入一个 ubuntu15.10系统的容器\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"cat\")]),\n            _vm._v(\" /proc/version  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看当前系统的版本信息\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"ls\")]),\n            _vm._v(\"                 \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 当前目录下的文件列表\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 运行exit命令或者使用CTRL+D来退出容器。\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线#####################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 启动容器（后台模式） ##\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 创建一个以进程方式运行的容器\")\n            ]),\n            _vm._v(\"\\ndocker run -d ubuntu:15.10 /bin/sh -c \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v('\"while true; do echo hello world; sleep 1; done\"')\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 返回的一段字符串，为容器ID，可以通过容器ID来查看对应的容器发生了什么。\"\n              )\n            ]),\n            _vm._v(\"\\n\\ndocker \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"ps\")]),\n            _vm._v(\"     \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看运行容器\")\n            ]),\n            _vm._v(\"\\n\\ndocker logs \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看容器日志信息\")\n            ]),\n            _vm._v(\"\\n\\ndocker stop \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 停止容器\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线#####################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h4\", { attrs: { id: \"docker容器使用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#docker容器使用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Docker容器使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 运行一个web应用 ##\")\n            ]),\n            _vm._v(\"\\n\\ndocker pull training/webapp    \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 载入镜像\")\n            ]),\n            _vm._v(\"\\n\\ndocker run -d -P training/webapp python app.py\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 参数说明:\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# -d:让容器在后台运行\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# -P:将容器内部使用的网络端口映射到我们使用的主机上\")\n            ]),\n            _vm._v(\"\\n\\ndocker \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"ps\")]),\n            _vm._v(\"   \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看运行容器\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 此时，可以看到端口信息\")\n            ]),\n            _vm._v(\"\\nPORTS\\n0.0.0.0:32769-\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\"5000/tcp\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# Docker 开放了 5000 端口（默认 Python Flask 端口）映射到主机端口 32769 上\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 通过浏览器访问WEB应用\")\n            ]),\n            _vm._v(\"\\n192.168.217.10:32769\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 也可以通过 -p 参数来设置不一样的端口：\")\n            ]),\n            _vm._v(\n              \"\\ndocker run -d -p 5000:5000 training/webapp python app.py\\n\"\n            ),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 容器内部的 5000 端口映射到我们本地主机的 5000 端口上。\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 网络端口的快捷方式 ##\")\n            ]),\n            _vm._v(\"\\ndocker port \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看容器端口的映射情况\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 查看 WEB 应用程序日志 ##\")\n            ]),\n            _vm._v(\"\\ndocker logs \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看容器内部的标准输出\")\n            ]),\n            _vm._v(\"\\n\\ndocker logs -f \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"   \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 让 docker logs 像使用 tail -f 一样来输出容器内部的标准输出。\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 查看WEB应用程序容器的进程 ##\")\n            ]),\n            _vm._v(\"\\ndocker \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"top\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看容器内部运行的进程\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 检查 WEB 应用程序 ##\")\n            ]),\n            _vm._v(\"\\ndocker inspect \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看 Docker 的底层信息\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 返回一个 JSON 文件记录着 Docker 容器的配置和状态信息\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 停止 WEB 应用容器 ##\")\n            ]),\n            _vm._v(\"\\ndocker stop \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 停止容器\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 重启WEB应用容器 ##\")\n            ]),\n            _vm._v(\"\\ndocker start \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 已经停止的容器，使用 docker start 来启动\")\n            ]),\n            _vm._v(\"\\n\\ndocker \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"ps\")]),\n            _vm._v(\" -l        \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查询最后一次创建的容器  \")\n            ]),\n            _vm._v(\"\\n\\ndocker restart \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 正在运行的容器，使用 docker restart 来重启\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 移除WEB应用容器 ##\")\n            ]),\n            _vm._v(\"\\ndocker \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"rm\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"容器ID 或 容器名称\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 删除不需要的容器\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 删除容器时，容器必须是停止状态，否则会报错\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h4\", { attrs: { id: \"docker-镜像使用\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#docker-镜像使用\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Docker 镜像使用\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"当运行容器时，使用的镜像如果在本地中不存在，docker 就会自动从 docker 镜像仓库中下载；\"\n        ),\n        _c(\"br\"),\n        _vm._v(\"\\n默认是从 Docker Hub 公共镜像源下载。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 列出镜像列表 ##\")\n            ]),\n            _vm._v(\"\\n\\ndocker images     \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 列出本地主机上的镜像\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 各个选项说明:\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# REPOSITORY：表示镜像的仓库源\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# TAG：镜像的标签\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# IMAGE ID：镜像ID\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# CREATED：镜像创建时间\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# SIZE：镜像大小\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 如ubuntu仓库源里，有15.10、14.04等多个不同的版本，可以使用 REPOSITORY:TAG 来定义不同的镜像。\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 使用版本为15.10的ubuntu系统镜像来运行容器：\")\n            ]),\n            _vm._v(\"\\ndocker run -t -i ubuntu:15.10 /bin/bash \\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 使用版本为14.04的ubuntu系统镜像来运行容器：\")\n            ]),\n            _vm._v(\"\\ndocker run -t -i ubuntu:14.04 /bin/bash\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 如果不指定一个镜像的版本标签，默认使用latest镜像\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 获取一个新的镜像 ##\")\n            ]),\n            _vm._v(\"\\ndocker pull \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"镜像名称:镜像标签\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 获取新镜像\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 查找镜像 ##\")\n            ]),\n            _vm._v(\"\\ndocker search \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _vm._v(\"待查找内容\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _vm._v(\"  \"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查找镜像\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# NAME:镜像仓库源的名称\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# DESCRIPTION:镜像的描述\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# OFFICIAL:是否docker官方发布\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查找地址：https://hub.docker.com/\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"## 创建镜像 ##\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 当从docker镜像仓库中下载的镜像不能满足需求时，可以通过以下两种方式对镜像进行更改：\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 1.从已经创建的容器中更新镜像，并且提交这个镜像\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 2.使用 Dockerfile 指令来创建一个新的镜像\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"搭建php7和nginx运行环境\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#搭建php7和nginx运行环境\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 搭建php7和nginx运行环境\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 下载相关镜像\")\n            ]),\n            _vm._v(\"\\ndocker pull nginx\\ndocker pull php:7.2.12-fpm\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 建立相关目录\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"mkdir\")\n            ]),\n            _vm._v(\" -p /home/www\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"mkdir\")\n            ]),\n            _vm._v(\" -p /home/nginx/conf.d\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 编辑default.conf\")\n            ]),\n            _vm._v(\"\\nvim /home/nginx/conf.d/default.conf\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################文件内容开始分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\nserver \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  listen  80 default_server\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  server_name _\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  root   /usr/share/nginx/html\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n \\n  location / \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n   index index.html index.htm index.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n   autoindex off\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n  location ~ \\\\.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$ \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n   root   /var/www/html/\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n   fastcgi_pass 172.17.0.2:9000\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n   fastcgi_index index.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n   fastcgi_split_path_info ^\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"((\")\n            ]),\n            _vm._v(\"?U\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\".+\\\\.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"/?.+\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n   fastcgi_param SCRIPT_FILENAME \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_script_name\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n   fastcgi_param PATH_INFO \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n   fastcgi_param PATH_TRANSLATED \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n   include  fastcgi_params\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################文件内容结束分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 启动php环境\")\n            ]),\n            _vm._v(\n              \"\\ndocker run -p 9000:9000 --name php -v /home/www/:/var/www/html/ --privileged\"\n            ),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\"true --rm -d php:7.2.12-fpm\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看php镜像的ip地址\")\n            ]),\n            _vm._v(\"\\ndocker inspect --format\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'{{.NetworkSettings.IPAddress}}'\")\n            ]),\n            _vm._v(\" php\\n172.17.0.2\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 修改default.conf配置文件，使fastcgi_pass的值为172.17.0.2:9000\"\n              )\n            ]),\n            _vm._v(\n              \"\\nvim /home/nginx/conf.d/default.conf\\nfastcgi_pass 172.17.0.2:9000\"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 启动nginx镜像\")\n            ]),\n            _vm._v(\n              \"\\ndocker run -p 80:80 --name nginx -v /home/www:/usr/share/nginx/html -v /home/nginx/conf.d:/etc/nginx/conf.d --privileged\"\n            ),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\n              \"true --rm -d nginx\\n\\ndocker run -p 80:80 -p 443:443 --name nginxlog \\\\\\n-v /usr/java/docker/nginxlog/log/:/var/log/nginx:rw \\\\\\n-v /usr/java/docker/nginxlog/conf.d/:/etc/nginx/conf.d:rw \\\\\\n-v /etc/letsencrypt:/etc/letsencrypt:rw \\\\\\n-d nginx\\n\\n\\n\"\n            ),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 查看镜像运行状态\")\n            ]),\n            _vm._v(\"\\ndocker \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [_vm._v(\"ps\")]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 生成php测试文件info.php\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"echo\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v('\"<?php phpinfo();\"')\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\">\")]),\n            _vm._v(\" /home/www/info.php\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 浏览器访问 http://localhost/info.php 验证\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# nginx虚拟机配置\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 以配置www.demo.com虚拟机为例,项目目录地址为/home/www/demo\"\n              )\n            ]),\n            _vm._v(\"\\nvim /home/nginx/conf.d/demo.conf\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################文件内容开始分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\nserver \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n\\tlisten  80\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\tserver_name www.demo.com\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\troot   /usr/share/nginx/html/demo/\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\\tlocation / \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n\\t\\tindex index.html index.htm index.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\tautoindex off\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\\t\\t\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!\")]),\n            _vm._v(\"-e \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$request_filename\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n\\t\\t\\trewrite  ^\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$  /index.php?s\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\"/\"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$1\")]),\n            _vm._v(\"  last\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\t\\t\"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"break\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\t\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\t\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n\\tlocation ~ \\\\.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$ \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n\\t\\troot   /var/www/html/demo/\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\tfastcgi_pass 172.17.0.2:9000\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\tfastcgi_index index.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\tfastcgi_split_path_info ^\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"((\")\n            ]),\n            _vm._v(\"?U\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\".+\\\\.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"/?.+\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\tfastcgi_param SCRIPT_FILENAME \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_script_name\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\tfastcgi_param PATH_INFO \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\tfastcgi_param PATH_TRANSLATED \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\\tinclude  fastcgi_params\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\t\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################文件内容结束分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 注意上述文件两处root的配置！！！\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 因已指定宿主机的映射，这里 /usr/share/nginx/html 与 /var/www/html 目录实际就是宿主机的 /home/www \"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 但不可写为/home/www，否则会报File not found的错误，因为宿主机的配置是映射到容器目录的\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"########################分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 配置https\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 建立https证书放置文件夹ssl\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"mkdir\")\n            ]),\n            _vm._v(\" -p /home/nginx/conf.d/ssl\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 放置https证书至宿主机/home/nginx/conf.d/ssl目录下\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 配置虚拟机文件\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# 以配置www.demo.com虚拟机为例,项目目录地址为/home/www/demo\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################文件内容开始分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\nserver \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    listen 80\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    listen 443 ssl\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    server_name www.demo.com\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    root   /usr/share/nginx/html/demo/\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\n              \"\\n\\n    ssl_certificate  /etc/nginx/conf.d/ssl/1_www.demo.com_bundle.crt\"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\n              \"\\n    ssl_certificate_key  /etc/nginx/conf.d/ssl/2_www.demo.com.key\"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n    location / \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        index index.html index.htm index.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        autoindex off\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n        \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!\")]),\n            _vm._v(\"-e \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$request_filename\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            rewrite  ^\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$  /index.php?s\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\"/\"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$1\")]),\n            _vm._v(\"  last\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"break\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n    location ~ \\\\.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$ \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        root   /var/www/html/demo/\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_pass 172.17.0.2:9000\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_index index.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_split_path_info ^\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"((\")\n            ]),\n            _vm._v(\"?U\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\".+\\\\.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"/?.+\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param SCRIPT_FILENAME \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_script_name\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param PATH_INFO \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param PATH_TRANSLATED \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        include  fastcgi_params\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################文件内容结束分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 注意上述文件两处root的配置！！！\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 因已指定宿主机的映射，\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# /usr/share/nginx/html 与 /var/www/html 目录实际就是宿主机的 /home/www \"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"# /etc/nginx/conf.d 目录实际就是宿主机的 /home/nginx/conf.d\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 配置http访问自动跳转至https\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################文件内容开始分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\nserver \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    listen 80\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    server_name www.demo.com\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" 301 https://\"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$server_name\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$request_uri\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\" \\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\nserver \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    listen 443\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    server_name www.demo.com\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    root   /usr/share/nginx/html/demo/\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n    ssl on\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\n              \"\\n    ssl_certificate  /etc/nginx/conf.d/ssl/1_www.demo.com_bundle.crt\"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\n              \"\\n    ssl_certificate_key  /etc/nginx/conf.d/ssl/2_www.demo.com.key\"\n            ),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n    location / \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        index index.html index.htm index.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        autoindex off\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n        \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"if\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"!\")]),\n            _vm._v(\"-e \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$request_filename\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n            rewrite  ^\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$  /index.php?s\"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\"/\"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [_vm._v(\"$1\")]),\n            _vm._v(\"  last\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n            \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"break\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\\n    location ~ \\\\.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\".*\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$ \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n        root   /var/www/html/demo/\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_pass 172.17.0.2:9000\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_index index.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_split_path_info ^\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"((\")\n            ]),\n            _vm._v(\"?U\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\".+\\\\.php\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"/?.+\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"$\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param SCRIPT_FILENAME \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_script_name\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param PATH_INFO \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        fastcgi_param PATH_TRANSLATED \"),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$document_root\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token variable\" } }, [\n              _vm._v(\"$fastcgi_path_info\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n        include  fastcgi_params\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################文件内容结束分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"安装mysql\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#安装mysql\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 安装mysql\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-bash extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-bash\" } }, [\n          _c(\"code\", [\n            _vm._v(\n              \"\\ndocker pull mysql:5.6\\n\\ndocker run -p 3306:3306 --name mysql -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/logs:/logs -v /home/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD\"\n            ),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\"123456 --rm -d mysql:5.6\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 如外网连不上数据库，执行以下处理：\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################开始分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 进入MySQL容器\")\n            ]),\n            _vm._v(\"\\ndocker \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"exec\")\n            ]),\n            _vm._v(\" -it mysql /bin/bash\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 进入MySQL\")\n            ]),\n            _vm._v(\"\\nmysql -uroot -p\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 切换到mysql数据表\")\n            ]),\n            _vm._v(\"\\nuse mysql\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 设置root帐号的密码\")\n            ]),\n            _vm._v(\"\\nupdate user \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"set\")]),\n            _vm._v(\" authentication_string \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" password\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'123456'\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" where user \"),\n            _c(\"span\", { attrs: { class: \"token operator\" } }, [_vm._v(\"=\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'root'\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\"# 对root进行授权\")\n            ]),\n            _vm._v(\"\\nGRANT ALL PRIVILEGES ON *.* TO \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'root'\")\n            ]),\n            _vm._v(\"@\"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [_vm._v(\"'%'\")]),\n            _vm._v(\" IDENTIFIED BY \"),\n            _c(\"span\", { attrs: { class: \"token string\" } }, [\n              _vm._v(\"'root'\")\n            ]),\n            _vm._v(\" WITH GRANT OPTION\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token comment\" } }, [\n              _vm._v(\n                \"######################结束分割线###################################\"\n              )\n            ]),\n            _vm._v(\"\\n\\n\")\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}