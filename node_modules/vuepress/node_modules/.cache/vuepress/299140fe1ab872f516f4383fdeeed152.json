{"remainingRequest":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/datatype.md?vue&type=template&id=a3c7538a&","dependencies":[{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/docs/es5/datatype.md","mtime":1537933948860},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1537933952458},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1537933949569},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vue-loader/lib/index.js","mtime":1537933952457},{"path":"/Users/jianhaihao/Documents/Products/jianhaihao.github.io/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":1537933952565}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"h1\", { attrs: { id: \"数据类型\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#数据类型\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 数据类型\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"Boolean\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"String\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Number\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"null, undefined\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Object\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Function\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Array\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"Symbol\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"BigInt\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"boolean\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#boolean\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Boolean\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"code\", [_vm._v(\"true\")]),\n        _vm._v(\"表示“真”，\"),\n        _c(\"code\", [_vm._v(\"false\")]),\n        _vm._v(\"表示假\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"下列运算符会返回布尔值\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"两元逻辑运算符\"),\n          _c(\"code\", [_vm._v(\"&&\")]),\n          _vm._v(\",\"),\n          _c(\"code\", [_vm._v(\"||\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"前置逻辑运算符\"), _c(\"code\", [_vm._v(\"!\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"相等运算符\"),\n          _c(\"code\", [_vm._v(\"==\")]),\n          _vm._v(\",\"),\n          _c(\"code\", [_vm._v(\"!=\")]),\n          _vm._v(\",\"),\n          _c(\"code\", [_vm._v(\"===\")]),\n          _vm._v(\",\"),\n          _c(\"code\", [_vm._v(\"!===\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"比较运算符\"),\n          _c(\"code\", [_vm._v(\">\")]),\n          _vm._v(\",\"),\n          _c(\"code\", [_vm._v(\"<\")]),\n          _vm._v(\",\"),\n          _c(\"code\", [_vm._v(\">=\")]),\n          _vm._v(\",\"),\n          _c(\"code\", [_vm._v(\"<=\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"下列值在 JavaScript 中做真假运算时会自动转换为\"),\n        _c(\"code\", [_vm._v(\"false\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"undefined\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"null\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"''\")]),\n          _vm._v(\"或者\"),\n          _c(\"code\", [_vm._v('\"\"')])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"0\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"NaN\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"false\")])])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"string\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#string\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" String\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\"可以使用单引号\"),\n          _c(\"code\", [_vm._v(\"''\")]),\n          _vm._v(\"或者双引号\"),\n          _c(\"code\", [_vm._v('\"\"')]),\n          _vm._v(\"表示一个字符串，但是建议使用单引号\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"字符串本身是一个字符数组，可以通过下标访问字符串的里的每一个字符\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"有一个\"),\n          _c(\"code\", [_vm._v(\"length\")]),\n          _vm._v(\"属性表示字符串的长度\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"btoa()\")]),\n          _vm._v(\"任意值转为 Base64 编码\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"atob()\")]), _vm._v(\"还原 Base64 编码\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"number\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#number\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Number\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"JavaScript 所有数值都是利用 64 位浮点数形式存储，第 0 位为符号位，第 1 位到第 11 位为指数位，第 12 位到第 63 位为小数部分，\"\n          ),\n          _c(\"code\", [_vm._v(\"(2^-1023 ~ 2^1024)\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"特殊数值\")])]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_c(\"code\", [_vm._v(\"NaN\")]), _vm._v(\"表示一个非数值的值\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"Infinity\")]),\n          _vm._v(\"表示无穷大，超出 JavaScript 所表示的范围\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"相关全局方法\")])]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"isNaN()\")]),\n          _vm._v(\"判断一个变量是不是\"),\n          _c(\"code\", [_vm._v(\"NaN\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"parseInt()\")]),\n          _vm._v(\n            \"将字符串转化为整数类型，删掉前导空格和前导 0 ，遇到第一个不是数字的字符结束\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"parseFloat()\")]),\n          _vm._v(\"将字符串转化为浮点类型\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"code\", [_vm._v(\"isFinite()\")]),\n          _vm._v(\"判断便是是否为正常的数值\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"null-undefined\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#null-undefined\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" null,undefined\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"没什么特别大的区别，在实际开发过程中当作空值处理\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"object\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#object\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Object\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"“键值对”的集合，所有键名都是字符串，值可以是任意的 JavaScript 数据类型\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"可以使用点运算符或者方括号运算符进行取值，数值类型键名必须以方括号运算符取值\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"属性的删除\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"可以通过\"),\n        _c(\"code\", [_vm._v(\"delete\")]),\n        _vm._v(\"命令删除对象的属性，删除成功后返回\"),\n        _c(\"code\", [_vm._v(\"true\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"for...in\")])]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"可以通过\"),\n        _c(\"code\", [_vm._v(\"for...in\")]),\n        _vm._v(\"来遍历对象，下面是一个判断一个对象是否为空对象的例子\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-javascript extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-javascript\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token function\" } }, [\n              _vm._v(\"isEmptyObject\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"obj\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"for\")]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"var\")]),\n            _vm._v(\" key \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [_vm._v(\"in\")]),\n            _vm._v(\" obj\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n    \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token boolean\" } }, [\n              _vm._v(\"false\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"return\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { attrs: { class: \"token boolean\" } }, [_vm._v(\"true\")]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"h2\", { attrs: { id: \"array\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#array\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Array\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"特殊类型的对象，键名是自增长的数值\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_c(\"code\", [_vm._v(\"length\")]), _vm._v(\"属性表示数组的长度\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"function\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#function\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" Function\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"特殊类型的对象\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"是一个可以执行的方法，同时可以是一个数据类型\")])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}